//
// Created by Mason on 2025/4/19.
//
#include <thread>
#include <glog/logging.h>
#include <gtest/gtest.h>
#include <runtime/neon/bi_ne_functions.h>
#include <runtime/bi_tensor.hpp>


#include "cpu/kernels/assembly/bi_arm_gemm.hpp"
#include "runtime/bi_scheduler.hpp"
#include "utils/utils.hpp"

namespace AssemGemmCode {
    namespace BatmanGemm {
        template<typename T>
        inline T iceildiv(const T a, const T b) {
            return (a + b - 1) / b;
        }

        template<typename T>
        inline T roundup(const T a, const T b) {
            T rem = a % b;

            if (rem) {
                return a + b - rem;
            } else {
                return a;
            }
        }

        void a64_smallK_hybrid_s8s32_dot_8x4(const int8_t *A, int lda, const int8_t *B, int32_t *C,
                                             int ldc, int M, int N, int K, const int32_t *, ::BatmanGemm::Activation,
                                             bool) {
            const long loops_count = iceildiv(N, (int) 4) - 1;
            const long ldab = lda * sizeof(int8_t);
            const long ldcb = ldc * sizeof(int32_t);
            const long odds_count = K % 4;
            K = (K + 3) / 4;

            for (int y0 = 0; y0 < M; y0 += 8) {
                long loops = loops_count;
                long oob_rows = std::max(8 - (M - y0), 0);
                long odds = odds_count;
                const int8_t *b_ptr0 = B;
                const int8_t *a_ptr0 = A + (y0 * lda);

                int32_t *c_ptr0 = C + (y0 * ldc);

                switch (K) {
                    case 1:
                        __asm __volatile (
                            "a_ptr1 .req X0\n"
                            "a_ptr2 .req X1\n"
                            "a_ptr3 .req X2\n"
                            "a_ptr4 .req X3\n"
                            "a_ptr5 .req X4\n"
                            "a_ptr6 .req X5\n"
                            "a_ptr7 .req X6\n"
                            "c_ptr1 .req X7\n"
                            "c_ptr2 .req X8\n"
                            "c_ptr3 .req X9\n"
                            "c_ptr4 .req X10\n"
                            "c_ptr5 .req X11\n"
                            "c_ptr6 .req X12\n"
                            "c_ptr7 .req X13\n"
                            "add a_ptr1, %[a_ptr0], %[lda]\n"
                            "add c_ptr1, %[c_ptr0], %[ldc]\n"
                            "add a_ptr2, a_ptr1, %[lda]\n"
                            "add c_ptr2, c_ptr1, %[ldc]\n"
                            "add a_ptr3, a_ptr2, %[lda]\n"
                            "add c_ptr3, c_ptr2, %[ldc]\n"
                            "add a_ptr4, a_ptr3, %[lda]\n"
                            "add c_ptr4, c_ptr3, %[ldc]\n"
                            "add a_ptr5, a_ptr4, %[lda]\n"
                            "add c_ptr5, c_ptr4, %[ldc]\n"
                            "add a_ptr6, a_ptr5, %[lda]\n"
                            "add c_ptr6, c_ptr5, %[ldc]\n"
                            "add a_ptr7, a_ptr6, %[lda]\n"
                            "add c_ptr7, c_ptr6, %[ldc]\n"
                            "cbz %[oob_rows], 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr7, %[c_ptr0], #0x0\n"
                            "add a_ptr7, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr6, %[c_ptr0], #0x0\n"
                            "add a_ptr6, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr5, %[c_ptr0], #0x0\n"
                            "add a_ptr5, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr4, %[c_ptr0], #0x0\n"
                            "add a_ptr4, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr3, %[c_ptr0], #0x0\n"
                            "add a_ptr3, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr2, %[c_ptr0], #0x0\n"
                            "add a_ptr2, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr1, %[c_ptr0], #0x0\n"
                            "add a_ptr1, %[a_ptr0], #0x0\n"
                            "1:\n"
                            "cbnz %[odds], 2f\n"
                            "ldr s0, [%[a_ptr0]]\n"
                            "ldr s1, [a_ptr1]\n"
                            "ldr s2, [a_ptr2]\n"
                            "ldr s3, [a_ptr3]\n"
                            "ldr s4, [a_ptr4]\n"
                            "ldr s5, [a_ptr5]\n"
                            "ldr s6, [a_ptr6]\n"
                            "ldr s7, [a_ptr7]\n"
                            "b 3f\n"
                            "2:\n"
                            "subs %[odds], %[odds], #0x1\n"
                            "b.ne 4f\n"
                            "ldr b0, [%[a_ptr0]]\n"
                            "ldr b1, [a_ptr1]\n"
                            "ldr b2, [a_ptr2]\n"
                            "ldr b3, [a_ptr3]\n"
                            "ldr b4, [a_ptr4]\n"
                            "ldr b5, [a_ptr5]\n"
                            "ldr b6, [a_ptr6]\n"
                            "ldr b7, [a_ptr7]\n"
                            "b 3f\n"
                            "4:\n"
                            "ldr h0, [%[a_ptr0]], #0x2\n"
                            "ldr h1, [a_ptr1], #0x2\n"
                            "ldr h2, [a_ptr2], #0x2\n"
                            "ldr h3, [a_ptr3], #0x2\n"
                            "ldr h4, [a_ptr4], #0x2\n"
                            "ldr h5, [a_ptr5], #0x2\n"
                            "ldr h6, [a_ptr6], #0x2\n"
                            "ldr h7, [a_ptr7], #0x2\n"
                            "subs %[odds], %[odds], #0x1\n"
                            "b.ne 5f\n"
                            "b 3f\n"
                            "5:\n"
                            "ld1 {v0.b}[2], [%[a_ptr0]]\n"
                            "ld1 {v1.b}[2], [a_ptr1]\n"
                            "ld1 {v2.b}[2], [a_ptr2]\n"
                            "ld1 {v3.b}[2], [a_ptr3]\n"
                            "ld1 {v4.b}[2], [a_ptr4]\n"
                            "ld1 {v5.b}[2], [a_ptr5]\n"
                            "ld1 {v6.b}[2], [a_ptr6]\n"
                            "ld1 {v7.b}[2], [a_ptr7]\n"
                            "3:\n"
                            "ldr q16, [%[b_ptr0]]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x40]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x80]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0xc0]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x100]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x140]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x180]\n"
                            "add %[b_ptr0], %[b_ptr0], #0x10\n"
                            "cbz %[loops], 6f\n"
                            "movi v24.4s, #0\n"
                            "subs %[loops], %[loops], #0x1\n"
                            "movi v25.4s, #0\n"
                            "movi v26.4s, #0\n"
                            "movi v27.4s, #0\n"
                            "movi v28.4s, #0\n"
                            "movi v29.4s, #0\n"
                            "movi v30.4s, #0\n"
                            "movi v31.4s, #0\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            ".inst 0x4f81e219 // sdot v25.4s, v16.16b, v1.4b[0]\n"
                            ".inst 0x4f82e21a // sdot v26.4s, v16.16b, v2.4b[0]\n"
                            ".inst 0x4f83e21b // sdot v27.4s, v16.16b, v3.4b[0]\n"
                            ".inst 0x4f84e21c // sdot v28.4s, v16.16b, v4.4b[0]\n"
                            ".inst 0x4f85e21d // sdot v29.4s, v16.16b, v5.4b[0]\n"
                            ".inst 0x4f86e21e // sdot v30.4s, v16.16b, v6.4b[0]\n"
                            ".inst 0x4f87e21f // sdot v31.4s, v16.16b, v7.4b[0]\n"
                            "b.eq 7f\n"
                            "8:\n"
                            "str q24, [%[c_ptr0]]\n"
                            "subs %[loops], %[loops], #0x1\n"
                            "movi v24.4s, #0\n"
                            "ldr q16, [%[b_ptr0]]\n"
                            "add %[c_ptr0], %[c_ptr0], #0x10\n"
                            "str q25, [c_ptr1]\n"
                            "add c_ptr1, c_ptr1, #0x10\n"
                            "movi v25.4s, #0\n"
                            "add %[b_ptr0], %[b_ptr0], #0x10\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            "str q26, [c_ptr2]\n"
                            "movi v26.4s, #0\n"
                            "add c_ptr2, c_ptr2, #0x10\n"
                            ".inst 0x4f81e219 // sdot v25.4s, v16.16b, v1.4b[0]\n"
                            "str q27, [c_ptr3]\n"
                            "movi v27.4s, #0\n"
                            "add c_ptr3, c_ptr3, #0x10\n"
                            ".inst 0x4f82e21a // sdot v26.4s, v16.16b, v2.4b[0]\n"
                            "str q28, [c_ptr4]\n"
                            "movi v28.4s, #0\n"
                            "add c_ptr4, c_ptr4, #0x10\n"
                            ".inst 0x4f83e21b // sdot v27.4s, v16.16b, v3.4b[0]\n"
                            "str q29, [c_ptr5]\n"
                            "movi v29.4s, #0\n"
                            "add c_ptr5, c_ptr5, #0x10\n"
                            ".inst 0x4f84e21c // sdot v28.4s, v16.16b, v4.4b[0]\n"
                            "str q30, [c_ptr6]\n"
                            "movi v30.4s, #0\n"
                            "add c_ptr6, c_ptr6, #0x10\n"
                            ".inst 0x4f85e21d // sdot v29.4s, v16.16b, v5.4b[0]\n"
                            "str q31, [c_ptr7]\n"
                            "movi v31.4s, #0\n"
                            "add c_ptr7, c_ptr7, #0x10\n"
                            ".inst 0x4f86e21e // sdot v30.4s, v16.16b, v6.4b[0]\n"
                            "prfm PSTL1KEEP, [%[c_ptr0], #0x40]\n"
                            ".inst 0x4f87e21f // sdot v31.4s, v16.16b, v7.4b[0]\n"
                            "prfm PSTL1KEEP, [c_ptr1, #0x40]\n"
                            "prfm PSTL1KEEP, [c_ptr2, #0x40]\n"
                            "prfm PSTL1KEEP, [c_ptr3, #0x40]\n"
                            "prfm PSTL1KEEP, [c_ptr4, #0x40]\n"
                            "prfm PSTL1KEEP, [c_ptr5, #0x40]\n"
                            "prfm PSTL1KEEP, [c_ptr6, #0x40]\n"
                            "prfm PSTL1KEEP, [c_ptr7, #0x40]\n"
                            "b.ne 8b\n"
                            "7:\n"
                            "str q24, [%[c_ptr0]]\n"
                            "add %[c_ptr0], %[c_ptr0], #0x10\n"
                            "movi v24.4s, #0\n"
                            "ldr q16, [%[b_ptr0]]\n"
                            "add %[b_ptr0], %[b_ptr0], #0x10\n"
                            "str q25, [c_ptr1]\n"
                            "add c_ptr1, c_ptr1, #0x10\n"
                            "movi v25.4s, #0\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            "str q26, [c_ptr2]\n"
                            "movi v26.4s, #0\n"
                            "add c_ptr2, c_ptr2, #0x10\n"
                            ".inst 0x4f81e219 // sdot v25.4s, v16.16b, v1.4b[0]\n"
                            "str q27, [c_ptr3]\n"
                            "movi v27.4s, #0\n"
                            "add c_ptr3, c_ptr3, #0x10\n"
                            ".inst 0x4f82e21a // sdot v26.4s, v16.16b, v2.4b[0]\n"
                            "str q28, [c_ptr4]\n"
                            "movi v28.4s, #0\n"
                            "add c_ptr4, c_ptr4, #0x10\n"
                            ".inst 0x4f83e21b // sdot v27.4s, v16.16b, v3.4b[0]\n"
                            "str q29, [c_ptr5]\n"
                            "movi v29.4s, #0\n"
                            "add c_ptr5, c_ptr5, #0x10\n"
                            ".inst 0x4f84e21c // sdot v28.4s, v16.16b, v4.4b[0]\n"
                            "str q30, [c_ptr6]\n"
                            "movi v30.4s, #0\n"
                            "add c_ptr6, c_ptr6, #0x10\n"
                            ".inst 0x4f85e21d // sdot v29.4s, v16.16b, v5.4b[0]\n"
                            "str q31, [c_ptr7]\n"
                            "movi v31.4s, #0\n"
                            "add c_ptr7, c_ptr7, #0x10\n"
                            ".inst 0x4f86e21e // sdot v30.4s, v16.16b, v6.4b[0]\n"
                            ".inst 0x4f87e21f // sdot v31.4s, v16.16b, v7.4b[0]\n"
                            "b 9f\n"
                            "6:\n"
                            "movi v24.4s, #0\n"
                            "movi v25.4s, #0\n"
                            "movi v26.4s, #0\n"
                            "movi v27.4s, #0\n"
                            "movi v28.4s, #0\n"
                            "movi v29.4s, #0\n"
                            "movi v30.4s, #0\n"
                            "movi v31.4s, #0\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            ".inst 0x4f81e219 // sdot v25.4s, v16.16b, v1.4b[0]\n"
                            ".inst 0x4f82e21a // sdot v26.4s, v16.16b, v2.4b[0]\n"
                            ".inst 0x4f83e21b // sdot v27.4s, v16.16b, v3.4b[0]\n"
                            ".inst 0x4f84e21c // sdot v28.4s, v16.16b, v4.4b[0]\n"
                            ".inst 0x4f85e21d // sdot v29.4s, v16.16b, v5.4b[0]\n"
                            ".inst 0x4f86e21e // sdot v30.4s, v16.16b, v6.4b[0]\n"
                            ".inst 0x4f87e21f // sdot v31.4s, v16.16b, v7.4b[0]\n"
                            "9:\n"
                            "str q24, [%[c_ptr0]]\n"
                            "add %[c_ptr0], %[c_ptr0], #0x10\n"
                            "str q25, [c_ptr1]\n"
                            "str q26, [c_ptr2]\n"
                            "str q27, [c_ptr3]\n"
                            "str q28, [c_ptr4]\n"
                            "str q29, [c_ptr5]\n"
                            "str q30, [c_ptr6]\n"
                            "str q31, [c_ptr7]\n"
                            ".unreq a_ptr1\n"
                            ".unreq a_ptr2\n"
                            ".unreq a_ptr3\n"
                            ".unreq a_ptr4\n"
                            ".unreq a_ptr5\n"
                            ".unreq a_ptr6\n"
                            ".unreq a_ptr7\n"
                            ".unreq c_ptr1\n"
                            ".unreq c_ptr2\n"
                            ".unreq c_ptr3\n"
                            ".unreq c_ptr4\n"
                            ".unreq c_ptr5\n"
                            ".unreq c_ptr6\n"
                            ".unreq c_ptr7\n"
                            : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (
                                loops),
                            [oob_rows] "+r" (oob_rows), [odds] "+r" (odds)
                            : [lda] "r" (ldab), [ldc] "r" (ldcb)
                            : "x0", "x1", "x2", "x3", "x4", "x5", "x6", "x7", "x8", "x9", "x10", "x11", "x12", "x13",
                            "v0",
                            "v1", "v2", "v3", "v4", "v5", "v6", "v7", "v8", "v9", "v10", "v11", "v12", "v13", "v14",
                            "v15",
                            "v16", "v17", "v18", "v19", "v20", "v21", "v22", "v23", "v24", "v25", "v26", "v27", "v28",
                            "v29"
                            , "v30", "v31", "cc", "memory"
                        );
                        break;
                    case 2:
                        __asm __volatile (
                            "a_ptr1 .req X0\n"
                            "a_ptr2 .req X1\n"
                            "a_ptr3 .req X2\n"
                            "a_ptr4 .req X3\n"
                            "a_ptr5 .req X4\n"
                            "a_ptr6 .req X5\n"
                            "a_ptr7 .req X6\n"
                            "c_ptr1 .req X7\n"
                            "c_ptr2 .req X8\n"
                            "c_ptr3 .req X9\n"
                            "c_ptr4 .req X10\n"
                            "c_ptr5 .req X11\n"
                            "c_ptr6 .req X12\n"
                            "c_ptr7 .req X13\n"
                            "add a_ptr1, %[a_ptr0], %[lda]\n"
                            "add c_ptr1, %[c_ptr0], %[ldc]\n"
                            "add a_ptr2, a_ptr1, %[lda]\n"
                            "add c_ptr2, c_ptr1, %[ldc]\n"
                            "add a_ptr3, a_ptr2, %[lda]\n"
                            "add c_ptr3, c_ptr2, %[ldc]\n"
                            "add a_ptr4, a_ptr3, %[lda]\n"
                            "add c_ptr4, c_ptr3, %[ldc]\n"
                            "add a_ptr5, a_ptr4, %[lda]\n"
                            "add c_ptr5, c_ptr4, %[ldc]\n"
                            "add a_ptr6, a_ptr5, %[lda]\n"
                            "add c_ptr6, c_ptr5, %[ldc]\n"
                            "add a_ptr7, a_ptr6, %[lda]\n"
                            "add c_ptr7, c_ptr6, %[ldc]\n"
                            "cbz %[oob_rows], 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr7, %[c_ptr0], #0x0\n"
                            "add a_ptr7, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr6, %[c_ptr0], #0x0\n"
                            "add a_ptr6, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr5, %[c_ptr0], #0x0\n"
                            "add a_ptr5, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr4, %[c_ptr0], #0x0\n"
                            "add a_ptr4, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr3, %[c_ptr0], #0x0\n"
                            "add a_ptr3, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr2, %[c_ptr0], #0x0\n"
                            "add a_ptr2, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr1, %[c_ptr0], #0x0\n"
                            "add a_ptr1, %[a_ptr0], #0x0\n"
                            "1:\n"
                            "cbnz %[odds], 2f\n"
                            "ldr d0, [%[a_ptr0]]\n"
                            "ldr d1, [a_ptr1]\n"
                            "ldr d2, [a_ptr2]\n"
                            "ldr d3, [a_ptr3]\n"
                            "ldr d4, [a_ptr4]\n"
                            "ldr d5, [a_ptr5]\n"
                            "ldr d6, [a_ptr6]\n"
                            "ldr d7, [a_ptr7]\n"
                            "b 3f\n"
                            "2:\n"
                            "ldr s0, [%[a_ptr0]], #0x4\n"
                            "ldr s1, [a_ptr1], #0x4\n"
                            "ldr s2, [a_ptr2], #0x4\n"
                            "ldr s3, [a_ptr3], #0x4\n"
                            "ldr s4, [a_ptr4], #0x4\n"
                            "ldr s5, [a_ptr5], #0x4\n"
                            "ldr s6, [a_ptr6], #0x4\n"
                            "ldr s7, [a_ptr7], #0x4\n"
                            "subs %[odds], %[odds], #0x1\n"
                            "b.ne 4f\n"
                            "ld1 {v0.b}[4], [%[a_ptr0]]\n"
                            "ld1 {v1.b}[4], [a_ptr1]\n"
                            "ld1 {v2.b}[4], [a_ptr2]\n"
                            "ld1 {v3.b}[4], [a_ptr3]\n"
                            "ld1 {v4.b}[4], [a_ptr4]\n"
                            "ld1 {v5.b}[4], [a_ptr5]\n"
                            "ld1 {v6.b}[4], [a_ptr6]\n"
                            "ld1 {v7.b}[4], [a_ptr7]\n"
                            "b 3f\n"
                            "4:\n"
                            "ld1 {v0.h}[2], [%[a_ptr0]], #2\n"
                            "ld1 {v1.h}[2], [a_ptr1], #2\n"
                            "ld1 {v2.h}[2], [a_ptr2], #2\n"
                            "ld1 {v3.h}[2], [a_ptr3], #2\n"
                            "ld1 {v4.h}[2], [a_ptr4], #2\n"
                            "ld1 {v5.h}[2], [a_ptr5], #2\n"
                            "ld1 {v6.h}[2], [a_ptr6], #2\n"
                            "ld1 {v7.h}[2], [a_ptr7], #2\n"
                            "subs %[odds], %[odds], #0x1\n"
                            "b.ne 5f\n"
                            "b 3f\n"
                            "5:\n"
                            "ld1 {v0.b}[6], [%[a_ptr0]]\n"
                            "ld1 {v1.b}[6], [a_ptr1]\n"
                            "ld1 {v2.b}[6], [a_ptr2]\n"
                            "ld1 {v3.b}[6], [a_ptr3]\n"
                            "ld1 {v4.b}[6], [a_ptr4]\n"
                            "ld1 {v5.b}[6], [a_ptr5]\n"
                            "ld1 {v6.b}[6], [a_ptr6]\n"
                            "ld1 {v7.b}[6], [a_ptr7]\n"
                            "3:\n"
                            "ldr q16, [%[b_ptr0]]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x40]\n"
                            "ldr q17, [%[b_ptr0], #0x10]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x80]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0xc0]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x100]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x140]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x180]\n"
                            "add %[b_ptr0], %[b_ptr0], #0x20\n"
                            "cbz %[loops], 6f\n"
                            "movi v24.4s, #0\n"
                            "subs %[loops], %[loops], #0x1\n"
                            "movi v25.4s, #0\n"
                            "movi v26.4s, #0\n"
                            "movi v27.4s, #0\n"
                            "movi v28.4s, #0\n"
                            "movi v29.4s, #0\n"
                            "movi v30.4s, #0\n"
                            "movi v31.4s, #0\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            ".inst 0x4f81e219 // sdot v25.4s, v16.16b, v1.4b[0]\n"
                            ".inst 0x4f82e21a // sdot v26.4s, v16.16b, v2.4b[0]\n"
                            ".inst 0x4f83e21b // sdot v27.4s, v16.16b, v3.4b[0]\n"
                            ".inst 0x4f84e21c // sdot v28.4s, v16.16b, v4.4b[0]\n"
                            ".inst 0x4f85e21d // sdot v29.4s, v16.16b, v5.4b[0]\n"
                            ".inst 0x4f86e21e // sdot v30.4s, v16.16b, v6.4b[0]\n"
                            ".inst 0x4f87e21f // sdot v31.4s, v16.16b, v7.4b[0]\n"
                            ".inst 0x4fa0e238 // sdot v24.4s, v17.16b, v0.4b[1]\n"
                            ".inst 0x4fa1e239 // sdot v25.4s, v17.16b, v1.4b[1]\n"
                            ".inst 0x4fa2e23a // sdot v26.4s, v17.16b, v2.4b[1]\n"
                            ".inst 0x4fa3e23b // sdot v27.4s, v17.16b, v3.4b[1]\n"
                            ".inst 0x4fa4e23c // sdot v28.4s, v17.16b, v4.4b[1]\n"
                            ".inst 0x4fa5e23d // sdot v29.4s, v17.16b, v5.4b[1]\n"
                            ".inst 0x4fa6e23e // sdot v30.4s, v17.16b, v6.4b[1]\n"
                            ".inst 0x4fa7e23f // sdot v31.4s, v17.16b, v7.4b[1]\n"
                            "b.eq 7f\n"
                            "8:\n"
                            "str q24, [%[c_ptr0]]\n"
                            "subs %[loops], %[loops], #0x1\n"
                            "movi v24.4s, #0\n"
                            "ldr q16, [%[b_ptr0]]\n"
                            "ldr q17, [%[b_ptr0], #0x10]\n"
                            "add %[c_ptr0], %[c_ptr0], #0x10\n"
                            "str q25, [c_ptr1]\n"
                            "add c_ptr1, c_ptr1, #0x10\n"
                            "movi v25.4s, #0\n"
                            "add %[b_ptr0], %[b_ptr0], #0x20\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            "str q26, [c_ptr2]\n"
                            "movi v26.4s, #0\n"
                            "add c_ptr2, c_ptr2, #0x10\n"
                            ".inst 0x4f81e219 // sdot v25.4s, v16.16b, v1.4b[0]\n"
                            "str q27, [c_ptr3]\n"
                            "movi v27.4s, #0\n"
                            "add c_ptr3, c_ptr3, #0x10\n"
                            ".inst 0x4f82e21a // sdot v26.4s, v16.16b, v2.4b[0]\n"
                            "str q28, [c_ptr4]\n"
                            "movi v28.4s, #0\n"
                            "add c_ptr4, c_ptr4, #0x10\n"
                            ".inst 0x4f83e21b // sdot v27.4s, v16.16b, v3.4b[0]\n"
                            "str q29, [c_ptr5]\n"
                            "movi v29.4s, #0\n"
                            "add c_ptr5, c_ptr5, #0x10\n"
                            ".inst 0x4f84e21c // sdot v28.4s, v16.16b, v4.4b[0]\n"
                            "str q30, [c_ptr6]\n"
                            "movi v30.4s, #0\n"
                            "add c_ptr6, c_ptr6, #0x10\n"
                            ".inst 0x4f85e21d // sdot v29.4s, v16.16b, v5.4b[0]\n"
                            "str q31, [c_ptr7]\n"
                            "movi v31.4s, #0\n"
                            "add c_ptr7, c_ptr7, #0x10\n"
                            ".inst 0x4f86e21e // sdot v30.4s, v16.16b, v6.4b[0]\n"
                            "prfm PSTL1KEEP, [%[c_ptr0], #0x40]\n"
                            ".inst 0x4f87e21f // sdot v31.4s, v16.16b, v7.4b[0]\n"
                            "prfm PSTL1KEEP, [c_ptr1, #0x40]\n"
                            ".inst 0x4fa0e238 // sdot v24.4s, v17.16b, v0.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr2, #0x40]\n"
                            ".inst 0x4fa1e239 // sdot v25.4s, v17.16b, v1.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr3, #0x40]\n"
                            ".inst 0x4fa2e23a // sdot v26.4s, v17.16b, v2.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr4, #0x40]\n"
                            ".inst 0x4fa3e23b // sdot v27.4s, v17.16b, v3.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr5, #0x40]\n"
                            ".inst 0x4fa4e23c // sdot v28.4s, v17.16b, v4.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr6, #0x40]\n"
                            ".inst 0x4fa5e23d // sdot v29.4s, v17.16b, v5.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr7, #0x40]\n"
                            ".inst 0x4fa6e23e // sdot v30.4s, v17.16b, v6.4b[1]\n"
                            ".inst 0x4fa7e23f // sdot v31.4s, v17.16b, v7.4b[1]\n"
                            "b.ne 8b\n"
                            "7:\n"
                            "str q24, [%[c_ptr0]]\n"
                            "add %[c_ptr0], %[c_ptr0], #0x10\n"
                            "movi v24.4s, #0\n"
                            "ldr q16, [%[b_ptr0]]\n"
                            "ldr q17, [%[b_ptr0], #0x10]\n"
                            "add %[b_ptr0], %[b_ptr0], #0x20\n"
                            "str q25, [c_ptr1]\n"
                            "add c_ptr1, c_ptr1, #0x10\n"
                            "movi v25.4s, #0\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            "str q26, [c_ptr2]\n"
                            "movi v26.4s, #0\n"
                            "add c_ptr2, c_ptr2, #0x10\n"
                            ".inst 0x4f81e219 // sdot v25.4s, v16.16b, v1.4b[0]\n"
                            "str q27, [c_ptr3]\n"
                            "movi v27.4s, #0\n"
                            "add c_ptr3, c_ptr3, #0x10\n"
                            ".inst 0x4f82e21a // sdot v26.4s, v16.16b, v2.4b[0]\n"
                            "str q28, [c_ptr4]\n"
                            "movi v28.4s, #0\n"
                            "add c_ptr4, c_ptr4, #0x10\n"
                            ".inst 0x4f83e21b // sdot v27.4s, v16.16b, v3.4b[0]\n"
                            "str q29, [c_ptr5]\n"
                            "movi v29.4s, #0\n"
                            "add c_ptr5, c_ptr5, #0x10\n"
                            ".inst 0x4f84e21c // sdot v28.4s, v16.16b, v4.4b[0]\n"
                            "str q30, [c_ptr6]\n"
                            "movi v30.4s, #0\n"
                            "add c_ptr6, c_ptr6, #0x10\n"
                            ".inst 0x4f85e21d // sdot v29.4s, v16.16b, v5.4b[0]\n"
                            "str q31, [c_ptr7]\n"
                            "movi v31.4s, #0\n"
                            "add c_ptr7, c_ptr7, #0x10\n"
                            ".inst 0x4f86e21e // sdot v30.4s, v16.16b, v6.4b[0]\n"
                            ".inst 0x4fa0e238 // sdot v24.4s, v17.16b, v0.4b[1]\n"
                            ".inst 0x4f87e21f // sdot v31.4s, v16.16b, v7.4b[0]\n"
                            ".inst 0x4fa1e239 // sdot v25.4s, v17.16b, v1.4b[1]\n"
                            ".inst 0x4fa2e23a // sdot v26.4s, v17.16b, v2.4b[1]\n"
                            ".inst 0x4fa3e23b // sdot v27.4s, v17.16b, v3.4b[1]\n"
                            ".inst 0x4fa4e23c // sdot v28.4s, v17.16b, v4.4b[1]\n"
                            ".inst 0x4fa5e23d // sdot v29.4s, v17.16b, v5.4b[1]\n"
                            ".inst 0x4fa6e23e // sdot v30.4s, v17.16b, v6.4b[1]\n"
                            ".inst 0x4fa7e23f // sdot v31.4s, v17.16b, v7.4b[1]\n"
                            "b 9f\n"
                            "6:\n"
                            "movi v24.4s, #0\n"
                            "movi v25.4s, #0\n"
                            "movi v26.4s, #0\n"
                            "movi v27.4s, #0\n"
                            "movi v28.4s, #0\n"
                            "movi v29.4s, #0\n"
                            "movi v30.4s, #0\n"
                            "movi v31.4s, #0\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            ".inst 0x4f81e219 // sdot v25.4s, v16.16b, v1.4b[0]\n"
                            ".inst 0x4f82e21a // sdot v26.4s, v16.16b, v2.4b[0]\n"
                            ".inst 0x4f83e21b // sdot v27.4s, v16.16b, v3.4b[0]\n"
                            ".inst 0x4f84e21c // sdot v28.4s, v16.16b, v4.4b[0]\n"
                            ".inst 0x4f85e21d // sdot v29.4s, v16.16b, v5.4b[0]\n"
                            ".inst 0x4f86e21e // sdot v30.4s, v16.16b, v6.4b[0]\n"
                            ".inst 0x4f87e21f // sdot v31.4s, v16.16b, v7.4b[0]\n"
                            ".inst 0x4fa0e238 // sdot v24.4s, v17.16b, v0.4b[1]\n"
                            ".inst 0x4fa1e239 // sdot v25.4s, v17.16b, v1.4b[1]\n"
                            ".inst 0x4fa2e23a // sdot v26.4s, v17.16b, v2.4b[1]\n"
                            ".inst 0x4fa3e23b // sdot v27.4s, v17.16b, v3.4b[1]\n"
                            ".inst 0x4fa4e23c // sdot v28.4s, v17.16b, v4.4b[1]\n"
                            ".inst 0x4fa5e23d // sdot v29.4s, v17.16b, v5.4b[1]\n"
                            ".inst 0x4fa6e23e // sdot v30.4s, v17.16b, v6.4b[1]\n"
                            ".inst 0x4fa7e23f // sdot v31.4s, v17.16b, v7.4b[1]\n"
                            "9:\n"
                            "str q24, [%[c_ptr0]]\n"
                            "add %[c_ptr0], %[c_ptr0], #0x10\n"
                            "str q25, [c_ptr1]\n"
                            "str q26, [c_ptr2]\n"
                            "str q27, [c_ptr3]\n"
                            "str q28, [c_ptr4]\n"
                            "str q29, [c_ptr5]\n"
                            "str q30, [c_ptr6]\n"
                            "str q31, [c_ptr7]\n"
                            ".unreq a_ptr1\n"
                            ".unreq a_ptr2\n"
                            ".unreq a_ptr3\n"
                            ".unreq a_ptr4\n"
                            ".unreq a_ptr5\n"
                            ".unreq a_ptr6\n"
                            ".unreq a_ptr7\n"
                            ".unreq c_ptr1\n"
                            ".unreq c_ptr2\n"
                            ".unreq c_ptr3\n"
                            ".unreq c_ptr4\n"
                            ".unreq c_ptr5\n"
                            ".unreq c_ptr6\n"
                            ".unreq c_ptr7\n"
                            : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (
                                loops),
                            [oob_rows] "+r" (oob_rows), [odds] "+r" (odds)
                            : [lda] "r" (ldab), [ldc] "r" (ldcb)
                            : "x0", "x1", "x2", "x3", "x4", "x5", "x6", "x7", "x8", "x9", "x10", "x11", "x12", "x13",
                            "v0",
                            "v1", "v2", "v3", "v4", "v5", "v6", "v7", "v8", "v9", "v10", "v11", "v12", "v13", "v14",
                            "v15",
                            "v16", "v17", "v18", "v19", "v20", "v21", "v22", "v23", "v24", "v25", "v26", "v27", "v28",
                            "v29"
                            , "v30", "v31", "cc", "memory"
                        );
                        break;
                    case 3:
                        __asm __volatile (
                            "a_ptr1 .req X0\n"
                            "a_ptr2 .req X1\n"
                            "a_ptr3 .req X2\n"
                            "a_ptr4 .req X3\n"
                            "a_ptr5 .req X4\n"
                            "a_ptr6 .req X5\n"
                            "a_ptr7 .req X6\n"
                            "c_ptr1 .req X7\n"
                            "c_ptr2 .req X8\n"
                            "c_ptr3 .req X9\n"
                            "c_ptr4 .req X10\n"
                            "c_ptr5 .req X11\n"
                            "c_ptr6 .req X12\n"
                            "c_ptr7 .req X13\n"
                            "add a_ptr1, %[a_ptr0], %[lda]\n"
                            "add c_ptr1, %[c_ptr0], %[ldc]\n"
                            "add a_ptr2, a_ptr1, %[lda]\n"
                            "add c_ptr2, c_ptr1, %[ldc]\n"
                            "add a_ptr3, a_ptr2, %[lda]\n"
                            "add c_ptr3, c_ptr2, %[ldc]\n"
                            "add a_ptr4, a_ptr3, %[lda]\n"
                            "add c_ptr4, c_ptr3, %[ldc]\n"
                            "add a_ptr5, a_ptr4, %[lda]\n"
                            "add c_ptr5, c_ptr4, %[ldc]\n"
                            "add a_ptr6, a_ptr5, %[lda]\n"
                            "add c_ptr6, c_ptr5, %[ldc]\n"
                            "add a_ptr7, a_ptr6, %[lda]\n"
                            "add c_ptr7, c_ptr6, %[ldc]\n"
                            "cbz %[oob_rows], 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr7, %[c_ptr0], #0x0\n"
                            "add a_ptr7, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr6, %[c_ptr0], #0x0\n"
                            "add a_ptr6, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr5, %[c_ptr0], #0x0\n"
                            "add a_ptr5, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr4, %[c_ptr0], #0x0\n"
                            "add a_ptr4, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr3, %[c_ptr0], #0x0\n"
                            "add a_ptr3, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr2, %[c_ptr0], #0x0\n"
                            "add a_ptr2, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr1, %[c_ptr0], #0x0\n"
                            "add a_ptr1, %[a_ptr0], #0x0\n"
                            "1:\n"
                            "ldr d0, [%[a_ptr0]], #0x8\n"
                            "ldr d1, [a_ptr1], #0x8\n"
                            "ldr d2, [a_ptr2], #0x8\n"
                            "ldr d3, [a_ptr3], #0x8\n"
                            "ldr d4, [a_ptr4], #0x8\n"
                            "ldr d5, [a_ptr5], #0x8\n"
                            "ldr d6, [a_ptr6], #0x8\n"
                            "ldr d7, [a_ptr7], #0x8\n"
                            "cbnz %[odds], 2f\n"
                            "ld1 {v0.s}[2], [%[a_ptr0]]\n"
                            "ld1 {v1.s}[2], [a_ptr1]\n"
                            "ld1 {v2.s}[2], [a_ptr2]\n"
                            "ld1 {v3.s}[2], [a_ptr3]\n"
                            "ld1 {v4.s}[2], [a_ptr4]\n"
                            "ld1 {v5.s}[2], [a_ptr5]\n"
                            "ld1 {v6.s}[2], [a_ptr6]\n"
                            "ld1 {v7.s}[2], [a_ptr7]\n"
                            "b 3f\n"
                            "2:\n"
                            "subs %[odds], %[odds], #0x1\n"
                            "b.ne 4f\n"
                            "ld1 {v0.b}[8], [%[a_ptr0]]\n"
                            "ld1 {v1.b}[8], [a_ptr1]\n"
                            "ld1 {v2.b}[8], [a_ptr2]\n"
                            "ld1 {v3.b}[8], [a_ptr3]\n"
                            "ld1 {v4.b}[8], [a_ptr4]\n"
                            "ld1 {v5.b}[8], [a_ptr5]\n"
                            "ld1 {v6.b}[8], [a_ptr6]\n"
                            "ld1 {v7.b}[8], [a_ptr7]\n"
                            "b 3f\n"
                            "4:\n"
                            "ld1 {v0.h}[4], [%[a_ptr0]], #2\n"
                            "ld1 {v1.h}[4], [a_ptr1], #2\n"
                            "ld1 {v2.h}[4], [a_ptr2], #2\n"
                            "ld1 {v3.h}[4], [a_ptr3], #2\n"
                            "ld1 {v4.h}[4], [a_ptr4], #2\n"
                            "ld1 {v5.h}[4], [a_ptr5], #2\n"
                            "ld1 {v6.h}[4], [a_ptr6], #2\n"
                            "ld1 {v7.h}[4], [a_ptr7], #2\n"
                            "subs %[odds], %[odds], #0x1\n"
                            "b.ne 5f\n"
                            "b 3f\n"
                            "5:\n"
                            "ld1 {v0.b}[10], [%[a_ptr0]]\n"
                            "ld1 {v1.b}[10], [a_ptr1]\n"
                            "ld1 {v2.b}[10], [a_ptr2]\n"
                            "ld1 {v3.b}[10], [a_ptr3]\n"
                            "ld1 {v4.b}[10], [a_ptr4]\n"
                            "ld1 {v5.b}[10], [a_ptr5]\n"
                            "ld1 {v6.b}[10], [a_ptr6]\n"
                            "ld1 {v7.b}[10], [a_ptr7]\n"
                            "3:\n"
                            "ldr q16, [%[b_ptr0]]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x40]\n"
                            "ldr q17, [%[b_ptr0], #0x10]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x80]\n"
                            "ldr q18, [%[b_ptr0], #0x20]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0xc0]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x100]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x140]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x180]\n"
                            "add %[b_ptr0], %[b_ptr0], #0x30\n"
                            "cbz %[loops], 6f\n"
                            "movi v24.4s, #0\n"
                            "subs %[loops], %[loops], #0x1\n"
                            "movi v25.4s, #0\n"
                            "movi v26.4s, #0\n"
                            "movi v27.4s, #0\n"
                            "movi v28.4s, #0\n"
                            "movi v29.4s, #0\n"
                            "movi v30.4s, #0\n"
                            "movi v31.4s, #0\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            ".inst 0x4f81e219 // sdot v25.4s, v16.16b, v1.4b[0]\n"
                            ".inst 0x4f82e21a // sdot v26.4s, v16.16b, v2.4b[0]\n"
                            ".inst 0x4f83e21b // sdot v27.4s, v16.16b, v3.4b[0]\n"
                            ".inst 0x4f84e21c // sdot v28.4s, v16.16b, v4.4b[0]\n"
                            ".inst 0x4f85e21d // sdot v29.4s, v16.16b, v5.4b[0]\n"
                            ".inst 0x4f86e21e // sdot v30.4s, v16.16b, v6.4b[0]\n"
                            ".inst 0x4f87e21f // sdot v31.4s, v16.16b, v7.4b[0]\n"
                            ".inst 0x4fa0e238 // sdot v24.4s, v17.16b, v0.4b[1]\n"
                            ".inst 0x4fa1e239 // sdot v25.4s, v17.16b, v1.4b[1]\n"
                            ".inst 0x4fa2e23a // sdot v26.4s, v17.16b, v2.4b[1]\n"
                            ".inst 0x4fa3e23b // sdot v27.4s, v17.16b, v3.4b[1]\n"
                            ".inst 0x4fa4e23c // sdot v28.4s, v17.16b, v4.4b[1]\n"
                            ".inst 0x4fa5e23d // sdot v29.4s, v17.16b, v5.4b[1]\n"
                            ".inst 0x4fa6e23e // sdot v30.4s, v17.16b, v6.4b[1]\n"
                            ".inst 0x4fa7e23f // sdot v31.4s, v17.16b, v7.4b[1]\n"
                            ".inst 0x4f80ea58 // sdot v24.4s, v18.16b, v0.4b[2]\n"
                            ".inst 0x4f81ea59 // sdot v25.4s, v18.16b, v1.4b[2]\n"
                            ".inst 0x4f82ea5a // sdot v26.4s, v18.16b, v2.4b[2]\n"
                            ".inst 0x4f83ea5b // sdot v27.4s, v18.16b, v3.4b[2]\n"
                            ".inst 0x4f84ea5c // sdot v28.4s, v18.16b, v4.4b[2]\n"
                            ".inst 0x4f85ea5d // sdot v29.4s, v18.16b, v5.4b[2]\n"
                            ".inst 0x4f86ea5e // sdot v30.4s, v18.16b, v6.4b[2]\n"
                            ".inst 0x4f87ea5f // sdot v31.4s, v18.16b, v7.4b[2]\n"
                            "b.eq 7f\n"
                            "8:\n"
                            "str q24, [%[c_ptr0]]\n"
                            "subs %[loops], %[loops], #0x1\n"
                            "movi v24.4s, #0\n"
                            "ldr q16, [%[b_ptr0]]\n"
                            "ldr q17, [%[b_ptr0], #0x10]\n"
                            "add %[c_ptr0], %[c_ptr0], #0x10\n"
                            "str q25, [c_ptr1]\n"
                            "add c_ptr1, c_ptr1, #0x10\n"
                            "movi v25.4s, #0\n"
                            "ldr q18, [%[b_ptr0], #0x20]\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            "str q26, [c_ptr2]\n"
                            "movi v26.4s, #0\n"
                            "add c_ptr2, c_ptr2, #0x10\n"
                            ".inst 0x4f81e219 // sdot v25.4s, v16.16b, v1.4b[0]\n"
                            "str q27, [c_ptr3]\n"
                            "movi v27.4s, #0\n"
                            "add c_ptr3, c_ptr3, #0x10\n"
                            ".inst 0x4f82e21a // sdot v26.4s, v16.16b, v2.4b[0]\n"
                            "str q28, [c_ptr4]\n"
                            "movi v28.4s, #0\n"
                            "add c_ptr4, c_ptr4, #0x10\n"
                            ".inst 0x4f83e21b // sdot v27.4s, v16.16b, v3.4b[0]\n"
                            "str q29, [c_ptr5]\n"
                            "movi v29.4s, #0\n"
                            "add c_ptr5, c_ptr5, #0x10\n"
                            ".inst 0x4f84e21c // sdot v28.4s, v16.16b, v4.4b[0]\n"
                            "str q30, [c_ptr6]\n"
                            "movi v30.4s, #0\n"
                            "add c_ptr6, c_ptr6, #0x10\n"
                            ".inst 0x4f85e21d // sdot v29.4s, v16.16b, v5.4b[0]\n"
                            "str q31, [c_ptr7]\n"
                            "movi v31.4s, #0\n"
                            "add c_ptr7, c_ptr7, #0x10\n"
                            ".inst 0x4f86e21e // sdot v30.4s, v16.16b, v6.4b[0]\n"
                            "add %[b_ptr0], %[b_ptr0], #0x30\n"
                            ".inst 0x4f87e21f // sdot v31.4s, v16.16b, v7.4b[0]\n"
                            "prfm PSTL1KEEP, [%[c_ptr0], #0x40]\n"
                            ".inst 0x4fa0e238 // sdot v24.4s, v17.16b, v0.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr1, #0x40]\n"
                            ".inst 0x4fa1e239 // sdot v25.4s, v17.16b, v1.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr2, #0x40]\n"
                            ".inst 0x4fa2e23a // sdot v26.4s, v17.16b, v2.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr3, #0x40]\n"
                            ".inst 0x4fa3e23b // sdot v27.4s, v17.16b, v3.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr4, #0x40]\n"
                            ".inst 0x4fa4e23c // sdot v28.4s, v17.16b, v4.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr5, #0x40]\n"
                            ".inst 0x4fa5e23d // sdot v29.4s, v17.16b, v5.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr6, #0x40]\n"
                            ".inst 0x4fa6e23e // sdot v30.4s, v17.16b, v6.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr7, #0x40]\n"
                            ".inst 0x4fa7e23f // sdot v31.4s, v17.16b, v7.4b[1]\n"
                            ".inst 0x4f80ea58 // sdot v24.4s, v18.16b, v0.4b[2]\n"
                            ".inst 0x4f81ea59 // sdot v25.4s, v18.16b, v1.4b[2]\n"
                            ".inst 0x4f82ea5a // sdot v26.4s, v18.16b, v2.4b[2]\n"
                            ".inst 0x4f83ea5b // sdot v27.4s, v18.16b, v3.4b[2]\n"
                            ".inst 0x4f84ea5c // sdot v28.4s, v18.16b, v4.4b[2]\n"
                            ".inst 0x4f85ea5d // sdot v29.4s, v18.16b, v5.4b[2]\n"
                            ".inst 0x4f86ea5e // sdot v30.4s, v18.16b, v6.4b[2]\n"
                            ".inst 0x4f87ea5f // sdot v31.4s, v18.16b, v7.4b[2]\n"
                            "b.ne 8b\n"
                            "7:\n"
                            "str q24, [%[c_ptr0]]\n"
                            "add %[c_ptr0], %[c_ptr0], #0x10\n"
                            "movi v24.4s, #0\n"
                            "ldr q16, [%[b_ptr0]]\n"
                            "ldr q17, [%[b_ptr0], #0x10]\n"
                            "str q25, [c_ptr1]\n"
                            "add c_ptr1, c_ptr1, #0x10\n"
                            "movi v25.4s, #0\n"
                            "ldr q18, [%[b_ptr0], #0x20]\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            "str q26, [c_ptr2]\n"
                            "movi v26.4s, #0\n"
                            "add c_ptr2, c_ptr2, #0x10\n"
                            ".inst 0x4f81e219 // sdot v25.4s, v16.16b, v1.4b[0]\n"
                            "str q27, [c_ptr3]\n"
                            "movi v27.4s, #0\n"
                            "add c_ptr3, c_ptr3, #0x10\n"
                            ".inst 0x4f82e21a // sdot v26.4s, v16.16b, v2.4b[0]\n"
                            "str q28, [c_ptr4]\n"
                            "movi v28.4s, #0\n"
                            "add c_ptr4, c_ptr4, #0x10\n"
                            ".inst 0x4f83e21b // sdot v27.4s, v16.16b, v3.4b[0]\n"
                            "str q29, [c_ptr5]\n"
                            "movi v29.4s, #0\n"
                            "add c_ptr5, c_ptr5, #0x10\n"
                            ".inst 0x4f84e21c // sdot v28.4s, v16.16b, v4.4b[0]\n"
                            "str q30, [c_ptr6]\n"
                            "movi v30.4s, #0\n"
                            "add c_ptr6, c_ptr6, #0x10\n"
                            ".inst 0x4f85e21d // sdot v29.4s, v16.16b, v5.4b[0]\n"
                            "str q31, [c_ptr7]\n"
                            "movi v31.4s, #0\n"
                            "add c_ptr7, c_ptr7, #0x10\n"
                            ".inst 0x4f86e21e // sdot v30.4s, v16.16b, v6.4b[0]\n"
                            "add %[b_ptr0], %[b_ptr0], #0x30\n"
                            ".inst 0x4f87e21f // sdot v31.4s, v16.16b, v7.4b[0]\n"
                            ".inst 0x4fa0e238 // sdot v24.4s, v17.16b, v0.4b[1]\n"
                            ".inst 0x4fa1e239 // sdot v25.4s, v17.16b, v1.4b[1]\n"
                            ".inst 0x4fa2e23a // sdot v26.4s, v17.16b, v2.4b[1]\n"
                            ".inst 0x4fa3e23b // sdot v27.4s, v17.16b, v3.4b[1]\n"
                            ".inst 0x4fa4e23c // sdot v28.4s, v17.16b, v4.4b[1]\n"
                            ".inst 0x4fa5e23d // sdot v29.4s, v17.16b, v5.4b[1]\n"
                            ".inst 0x4fa6e23e // sdot v30.4s, v17.16b, v6.4b[1]\n"
                            ".inst 0x4fa7e23f // sdot v31.4s, v17.16b, v7.4b[1]\n"
                            ".inst 0x4f80ea58 // sdot v24.4s, v18.16b, v0.4b[2]\n"
                            ".inst 0x4f81ea59 // sdot v25.4s, v18.16b, v1.4b[2]\n"
                            ".inst 0x4f82ea5a // sdot v26.4s, v18.16b, v2.4b[2]\n"
                            ".inst 0x4f83ea5b // sdot v27.4s, v18.16b, v3.4b[2]\n"
                            ".inst 0x4f84ea5c // sdot v28.4s, v18.16b, v4.4b[2]\n"
                            ".inst 0x4f85ea5d // sdot v29.4s, v18.16b, v5.4b[2]\n"
                            ".inst 0x4f86ea5e // sdot v30.4s, v18.16b, v6.4b[2]\n"
                            ".inst 0x4f87ea5f // sdot v31.4s, v18.16b, v7.4b[2]\n"
                            "b 9f\n"
                            "6:\n"
                            "movi v24.4s, #0\n"
                            "movi v25.4s, #0\n"
                            "movi v26.4s, #0\n"
                            "movi v27.4s, #0\n"
                            "movi v28.4s, #0\n"
                            "movi v29.4s, #0\n"
                            "movi v30.4s, #0\n"
                            "movi v31.4s, #0\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            ".inst 0x4f81e219 // sdot v25.4s, v16.16b, v1.4b[0]\n"
                            ".inst 0x4f82e21a // sdot v26.4s, v16.16b, v2.4b[0]\n"
                            ".inst 0x4f83e21b // sdot v27.4s, v16.16b, v3.4b[0]\n"
                            ".inst 0x4f84e21c // sdot v28.4s, v16.16b, v4.4b[0]\n"
                            ".inst 0x4f85e21d // sdot v29.4s, v16.16b, v5.4b[0]\n"
                            ".inst 0x4f86e21e // sdot v30.4s, v16.16b, v6.4b[0]\n"
                            ".inst 0x4f87e21f // sdot v31.4s, v16.16b, v7.4b[0]\n"
                            ".inst 0x4fa0e238 // sdot v24.4s, v17.16b, v0.4b[1]\n"
                            ".inst 0x4fa1e239 // sdot v25.4s, v17.16b, v1.4b[1]\n"
                            ".inst 0x4fa2e23a // sdot v26.4s, v17.16b, v2.4b[1]\n"
                            ".inst 0x4fa3e23b // sdot v27.4s, v17.16b, v3.4b[1]\n"
                            ".inst 0x4fa4e23c // sdot v28.4s, v17.16b, v4.4b[1]\n"
                            ".inst 0x4fa5e23d // sdot v29.4s, v17.16b, v5.4b[1]\n"
                            ".inst 0x4fa6e23e // sdot v30.4s, v17.16b, v6.4b[1]\n"
                            ".inst 0x4fa7e23f // sdot v31.4s, v17.16b, v7.4b[1]\n"
                            ".inst 0x4f80ea58 // sdot v24.4s, v18.16b, v0.4b[2]\n"
                            ".inst 0x4f81ea59 // sdot v25.4s, v18.16b, v1.4b[2]\n"
                            ".inst 0x4f82ea5a // sdot v26.4s, v18.16b, v2.4b[2]\n"
                            ".inst 0x4f83ea5b // sdot v27.4s, v18.16b, v3.4b[2]\n"
                            ".inst 0x4f84ea5c // sdot v28.4s, v18.16b, v4.4b[2]\n"
                            ".inst 0x4f85ea5d // sdot v29.4s, v18.16b, v5.4b[2]\n"
                            ".inst 0x4f86ea5e // sdot v30.4s, v18.16b, v6.4b[2]\n"
                            ".inst 0x4f87ea5f // sdot v31.4s, v18.16b, v7.4b[2]\n"
                            "9:\n"
                            "str q24, [%[c_ptr0]]\n"
                            "add %[c_ptr0], %[c_ptr0], #0x10\n"
                            "str q25, [c_ptr1]\n"
                            "str q26, [c_ptr2]\n"
                            "str q27, [c_ptr3]\n"
                            "str q28, [c_ptr4]\n"
                            "str q29, [c_ptr5]\n"
                            "str q30, [c_ptr6]\n"
                            "str q31, [c_ptr7]\n"
                            ".unreq a_ptr1\n"
                            ".unreq a_ptr2\n"
                            ".unreq a_ptr3\n"
                            ".unreq a_ptr4\n"
                            ".unreq a_ptr5\n"
                            ".unreq a_ptr6\n"
                            ".unreq a_ptr7\n"
                            ".unreq c_ptr1\n"
                            ".unreq c_ptr2\n"
                            ".unreq c_ptr3\n"
                            ".unreq c_ptr4\n"
                            ".unreq c_ptr5\n"
                            ".unreq c_ptr6\n"
                            ".unreq c_ptr7\n"
                            : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (
                                loops),
                            [oob_rows] "+r" (oob_rows), [odds] "+r" (odds)
                            : [lda] "r" (ldab), [ldc] "r" (ldcb)
                            : "x0", "x1", "x2", "x3", "x4", "x5", "x6", "x7", "x8", "x9", "x10", "x11", "x12", "x13",
                            "v0",
                            "v1", "v2", "v3", "v4", "v5", "v6", "v7", "v8", "v9", "v10", "v11", "v12", "v13", "v14",
                            "v15",
                            "v16", "v17", "v18", "v19", "v20", "v21", "v22", "v23", "v24", "v25", "v26", "v27", "v28",
                            "v29"
                            , "v30", "v31", "cc", "memory"
                        );
                        break;
                    case 4:
                        __asm __volatile (
                            "a_ptr1 .req X0\n"
                            "a_ptr2 .req X1\n"
                            "a_ptr3 .req X2\n"
                            "a_ptr4 .req X3\n"
                            "a_ptr5 .req X4\n"
                            "a_ptr6 .req X5\n"
                            "a_ptr7 .req X6\n"
                            "c_ptr1 .req X7\n"
                            "c_ptr2 .req X8\n"
                            "c_ptr3 .req X9\n"
                            "c_ptr4 .req X10\n"
                            "c_ptr5 .req X11\n"
                            "c_ptr6 .req X12\n"
                            "c_ptr7 .req X13\n"
                            "add a_ptr1, %[a_ptr0], %[lda]\n"
                            "add c_ptr1, %[c_ptr0], %[ldc]\n"
                            "add a_ptr2, a_ptr1, %[lda]\n"
                            "add c_ptr2, c_ptr1, %[ldc]\n"
                            "add a_ptr3, a_ptr2, %[lda]\n"
                            "add c_ptr3, c_ptr2, %[ldc]\n"
                            "add a_ptr4, a_ptr3, %[lda]\n"
                            "add c_ptr4, c_ptr3, %[ldc]\n"
                            "add a_ptr5, a_ptr4, %[lda]\n"
                            "add c_ptr5, c_ptr4, %[ldc]\n"
                            "add a_ptr6, a_ptr5, %[lda]\n"
                            "add c_ptr6, c_ptr5, %[ldc]\n"
                            "add a_ptr7, a_ptr6, %[lda]\n"
                            "add c_ptr7, c_ptr6, %[ldc]\n"
                            "cbz %[oob_rows], 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr7, %[c_ptr0], #0x0\n"
                            "add a_ptr7, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr6, %[c_ptr0], #0x0\n"
                            "add a_ptr6, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr5, %[c_ptr0], #0x0\n"
                            "add a_ptr5, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr4, %[c_ptr0], #0x0\n"
                            "add a_ptr4, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr3, %[c_ptr0], #0x0\n"
                            "add a_ptr3, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr2, %[c_ptr0], #0x0\n"
                            "add a_ptr2, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr1, %[c_ptr0], #0x0\n"
                            "add a_ptr1, %[a_ptr0], #0x0\n"
                            "1:\n"
                            "cbnz %[odds], 2f\n"
                            "ldr q0, [%[a_ptr0]]\n"
                            "ldr q1, [a_ptr1]\n"
                            "ldr q2, [a_ptr2]\n"
                            "ldr q3, [a_ptr3]\n"
                            "ldr q4, [a_ptr4]\n"
                            "ldr q5, [a_ptr5]\n"
                            "ldr q6, [a_ptr6]\n"
                            "ldr q7, [a_ptr7]\n"
                            "b 3f\n"
                            "2:\n"
                            "ldr d0, [%[a_ptr0]], #0x8\n"
                            "ldr d1, [a_ptr1], #0x8\n"
                            "ldr d2, [a_ptr2], #0x8\n"
                            "ldr d3, [a_ptr3], #0x8\n"
                            "ldr d4, [a_ptr4], #0x8\n"
                            "ldr d5, [a_ptr5], #0x8\n"
                            "ldr d6, [a_ptr6], #0x8\n"
                            "ldr d7, [a_ptr7], #0x8\n"
                            "ld1 {v0.s}[2], [%[a_ptr0]], #4\n"
                            "ld1 {v1.s}[2], [a_ptr1], #4\n"
                            "ld1 {v2.s}[2], [a_ptr2], #4\n"
                            "ld1 {v3.s}[2], [a_ptr3], #4\n"
                            "ld1 {v4.s}[2], [a_ptr4], #4\n"
                            "ld1 {v5.s}[2], [a_ptr5], #4\n"
                            "ld1 {v6.s}[2], [a_ptr6], #4\n"
                            "ld1 {v7.s}[2], [a_ptr7], #4\n"
                            "subs %[odds], %[odds], #0x1\n"
                            "b.ne 4f\n"
                            "ld1 {v0.b}[12], [%[a_ptr0]]\n"
                            "ld1 {v1.b}[12], [a_ptr1]\n"
                            "ld1 {v2.b}[12], [a_ptr2]\n"
                            "ld1 {v3.b}[12], [a_ptr3]\n"
                            "ld1 {v4.b}[12], [a_ptr4]\n"
                            "ld1 {v5.b}[12], [a_ptr5]\n"
                            "ld1 {v6.b}[12], [a_ptr6]\n"
                            "ld1 {v7.b}[12], [a_ptr7]\n"
                            "b 3f\n"
                            "4:\n"
                            "ld1 {v0.h}[6], [%[a_ptr0]], #2\n"
                            "ld1 {v1.h}[6], [a_ptr1], #2\n"
                            "ld1 {v2.h}[6], [a_ptr2], #2\n"
                            "ld1 {v3.h}[6], [a_ptr3], #2\n"
                            "ld1 {v4.h}[6], [a_ptr4], #2\n"
                            "ld1 {v5.h}[6], [a_ptr5], #2\n"
                            "ld1 {v6.h}[6], [a_ptr6], #2\n"
                            "ld1 {v7.h}[6], [a_ptr7], #2\n"
                            "subs %[odds], %[odds], #0x1\n"
                            "b.ne 5f\n"
                            "b 3f\n"
                            "5:\n"
                            "ld1 {v0.b}[14], [%[a_ptr0]]\n"
                            "ld1 {v1.b}[14], [a_ptr1]\n"
                            "ld1 {v2.b}[14], [a_ptr2]\n"
                            "ld1 {v3.b}[14], [a_ptr3]\n"
                            "ld1 {v4.b}[14], [a_ptr4]\n"
                            "ld1 {v5.b}[14], [a_ptr5]\n"
                            "ld1 {v6.b}[14], [a_ptr6]\n"
                            "ld1 {v7.b}[14], [a_ptr7]\n"
                            "3:\n"
                            "ldr q16, [%[b_ptr0]]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x40]\n"
                            "ldr q17, [%[b_ptr0], #0x10]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x80]\n"
                            "ldr q18, [%[b_ptr0], #0x20]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0xc0]\n"
                            "ldr q19, [%[b_ptr0], #0x30]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x100]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x140]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x180]\n"
                            "add %[b_ptr0], %[b_ptr0], #0x40\n"
                            "cbz %[loops], 6f\n"
                            "movi v24.4s, #0\n"
                            "subs %[loops], %[loops], #0x1\n"
                            "movi v25.4s, #0\n"
                            "movi v26.4s, #0\n"
                            "movi v27.4s, #0\n"
                            "movi v28.4s, #0\n"
                            "movi v29.4s, #0\n"
                            "movi v30.4s, #0\n"
                            "movi v31.4s, #0\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            ".inst 0x4f81e219 // sdot v25.4s, v16.16b, v1.4b[0]\n"
                            ".inst 0x4f82e21a // sdot v26.4s, v16.16b, v2.4b[0]\n"
                            ".inst 0x4f83e21b // sdot v27.4s, v16.16b, v3.4b[0]\n"
                            ".inst 0x4f84e21c // sdot v28.4s, v16.16b, v4.4b[0]\n"
                            ".inst 0x4f85e21d // sdot v29.4s, v16.16b, v5.4b[0]\n"
                            ".inst 0x4f86e21e // sdot v30.4s, v16.16b, v6.4b[0]\n"
                            ".inst 0x4f87e21f // sdot v31.4s, v16.16b, v7.4b[0]\n"
                            ".inst 0x4fa0e238 // sdot v24.4s, v17.16b, v0.4b[1]\n"
                            ".inst 0x4fa1e239 // sdot v25.4s, v17.16b, v1.4b[1]\n"
                            ".inst 0x4fa2e23a // sdot v26.4s, v17.16b, v2.4b[1]\n"
                            ".inst 0x4fa3e23b // sdot v27.4s, v17.16b, v3.4b[1]\n"
                            ".inst 0x4fa4e23c // sdot v28.4s, v17.16b, v4.4b[1]\n"
                            ".inst 0x4fa5e23d // sdot v29.4s, v17.16b, v5.4b[1]\n"
                            ".inst 0x4fa6e23e // sdot v30.4s, v17.16b, v6.4b[1]\n"
                            ".inst 0x4fa7e23f // sdot v31.4s, v17.16b, v7.4b[1]\n"
                            ".inst 0x4f80ea58 // sdot v24.4s, v18.16b, v0.4b[2]\n"
                            ".inst 0x4f81ea59 // sdot v25.4s, v18.16b, v1.4b[2]\n"
                            ".inst 0x4f82ea5a // sdot v26.4s, v18.16b, v2.4b[2]\n"
                            ".inst 0x4f83ea5b // sdot v27.4s, v18.16b, v3.4b[2]\n"
                            ".inst 0x4f84ea5c // sdot v28.4s, v18.16b, v4.4b[2]\n"
                            ".inst 0x4f85ea5d // sdot v29.4s, v18.16b, v5.4b[2]\n"
                            ".inst 0x4f86ea5e // sdot v30.4s, v18.16b, v6.4b[2]\n"
                            ".inst 0x4f87ea5f // sdot v31.4s, v18.16b, v7.4b[2]\n"
                            ".inst 0x4fa0ea78 // sdot v24.4s, v19.16b, v0.4b[3]\n"
                            ".inst 0x4fa1ea79 // sdot v25.4s, v19.16b, v1.4b[3]\n"
                            ".inst 0x4fa2ea7a // sdot v26.4s, v19.16b, v2.4b[3]\n"
                            ".inst 0x4fa3ea7b // sdot v27.4s, v19.16b, v3.4b[3]\n"
                            ".inst 0x4fa4ea7c // sdot v28.4s, v19.16b, v4.4b[3]\n"
                            ".inst 0x4fa5ea7d // sdot v29.4s, v19.16b, v5.4b[3]\n"
                            ".inst 0x4fa6ea7e // sdot v30.4s, v19.16b, v6.4b[3]\n"
                            ".inst 0x4fa7ea7f // sdot v31.4s, v19.16b, v7.4b[3]\n"
                            "b.eq 7f\n"
                            "8:\n"
                            "str q24, [%[c_ptr0]]\n"
                            "subs %[loops], %[loops], #0x1\n"
                            "movi v24.4s, #0\n"
                            "ldr q16, [%[b_ptr0]]\n"
                            "ldr q17, [%[b_ptr0], #0x10]\n"
                            "add %[c_ptr0], %[c_ptr0], #0x10\n"
                            "str q25, [c_ptr1]\n"
                            "add c_ptr1, c_ptr1, #0x10\n"
                            "movi v25.4s, #0\n"
                            "ldr q18, [%[b_ptr0], #0x20]\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            "str q26, [c_ptr2]\n"
                            "movi v26.4s, #0\n"
                            "ldr q19, [%[b_ptr0], #0x30]\n"
                            "add c_ptr2, c_ptr2, #0x10\n"
                            ".inst 0x4f81e219 // sdot v25.4s, v16.16b, v1.4b[0]\n"
                            "str q27, [c_ptr3]\n"
                            "movi v27.4s, #0\n"
                            "add c_ptr3, c_ptr3, #0x10\n"
                            ".inst 0x4f82e21a // sdot v26.4s, v16.16b, v2.4b[0]\n"
                            "str q28, [c_ptr4]\n"
                            "movi v28.4s, #0\n"
                            "add c_ptr4, c_ptr4, #0x10\n"
                            ".inst 0x4f83e21b // sdot v27.4s, v16.16b, v3.4b[0]\n"
                            "str q29, [c_ptr5]\n"
                            "movi v29.4s, #0\n"
                            "add c_ptr5, c_ptr5, #0x10\n"
                            ".inst 0x4f84e21c // sdot v28.4s, v16.16b, v4.4b[0]\n"
                            "str q30, [c_ptr6]\n"
                            "movi v30.4s, #0\n"
                            "add c_ptr6, c_ptr6, #0x10\n"
                            ".inst 0x4f85e21d // sdot v29.4s, v16.16b, v5.4b[0]\n"
                            "str q31, [c_ptr7]\n"
                            "movi v31.4s, #0\n"
                            "add c_ptr7, c_ptr7, #0x10\n"
                            ".inst 0x4f86e21e // sdot v30.4s, v16.16b, v6.4b[0]\n"
                            "add %[b_ptr0], %[b_ptr0], #0x40\n"
                            ".inst 0x4f87e21f // sdot v31.4s, v16.16b, v7.4b[0]\n"
                            "prfm PSTL1KEEP, [%[c_ptr0], #0x40]\n"
                            ".inst 0x4fa0e238 // sdot v24.4s, v17.16b, v0.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr1, #0x40]\n"
                            ".inst 0x4fa1e239 // sdot v25.4s, v17.16b, v1.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr2, #0x40]\n"
                            ".inst 0x4fa2e23a // sdot v26.4s, v17.16b, v2.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr3, #0x40]\n"
                            ".inst 0x4fa3e23b // sdot v27.4s, v17.16b, v3.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr4, #0x40]\n"
                            ".inst 0x4fa4e23c // sdot v28.4s, v17.16b, v4.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr5, #0x40]\n"
                            ".inst 0x4fa5e23d // sdot v29.4s, v17.16b, v5.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr6, #0x40]\n"
                            ".inst 0x4fa6e23e // sdot v30.4s, v17.16b, v6.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr7, #0x40]\n"
                            ".inst 0x4fa7e23f // sdot v31.4s, v17.16b, v7.4b[1]\n"
                            ".inst 0x4f80ea58 // sdot v24.4s, v18.16b, v0.4b[2]\n"
                            ".inst 0x4f81ea59 // sdot v25.4s, v18.16b, v1.4b[2]\n"
                            ".inst 0x4f82ea5a // sdot v26.4s, v18.16b, v2.4b[2]\n"
                            ".inst 0x4f83ea5b // sdot v27.4s, v18.16b, v3.4b[2]\n"
                            ".inst 0x4f84ea5c // sdot v28.4s, v18.16b, v4.4b[2]\n"
                            ".inst 0x4f85ea5d // sdot v29.4s, v18.16b, v5.4b[2]\n"
                            ".inst 0x4f86ea5e // sdot v30.4s, v18.16b, v6.4b[2]\n"
                            ".inst 0x4f87ea5f // sdot v31.4s, v18.16b, v7.4b[2]\n"
                            ".inst 0x4fa0ea78 // sdot v24.4s, v19.16b, v0.4b[3]\n"
                            ".inst 0x4fa1ea79 // sdot v25.4s, v19.16b, v1.4b[3]\n"
                            ".inst 0x4fa2ea7a // sdot v26.4s, v19.16b, v2.4b[3]\n"
                            ".inst 0x4fa3ea7b // sdot v27.4s, v19.16b, v3.4b[3]\n"
                            ".inst 0x4fa4ea7c // sdot v28.4s, v19.16b, v4.4b[3]\n"
                            ".inst 0x4fa5ea7d // sdot v29.4s, v19.16b, v5.4b[3]\n"
                            ".inst 0x4fa6ea7e // sdot v30.4s, v19.16b, v6.4b[3]\n"
                            ".inst 0x4fa7ea7f // sdot v31.4s, v19.16b, v7.4b[3]\n"
                            "b.ne 8b\n"
                            "7:\n"
                            "str q24, [%[c_ptr0]]\n"
                            "add %[c_ptr0], %[c_ptr0], #0x10\n"
                            "movi v24.4s, #0\n"
                            "ldr q16, [%[b_ptr0]]\n"
                            "ldr q17, [%[b_ptr0], #0x10]\n"
                            "str q25, [c_ptr1]\n"
                            "add c_ptr1, c_ptr1, #0x10\n"
                            "movi v25.4s, #0\n"
                            "ldr q18, [%[b_ptr0], #0x20]\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            "str q26, [c_ptr2]\n"
                            "movi v26.4s, #0\n"
                            "ldr q19, [%[b_ptr0], #0x30]\n"
                            "add c_ptr2, c_ptr2, #0x10\n"
                            ".inst 0x4f81e219 // sdot v25.4s, v16.16b, v1.4b[0]\n"
                            "str q27, [c_ptr3]\n"
                            "movi v27.4s, #0\n"
                            "add c_ptr3, c_ptr3, #0x10\n"
                            ".inst 0x4f82e21a // sdot v26.4s, v16.16b, v2.4b[0]\n"
                            "str q28, [c_ptr4]\n"
                            "movi v28.4s, #0\n"
                            "add c_ptr4, c_ptr4, #0x10\n"
                            ".inst 0x4f83e21b // sdot v27.4s, v16.16b, v3.4b[0]\n"
                            "str q29, [c_ptr5]\n"
                            "movi v29.4s, #0\n"
                            "add c_ptr5, c_ptr5, #0x10\n"
                            ".inst 0x4f84e21c // sdot v28.4s, v16.16b, v4.4b[0]\n"
                            "str q30, [c_ptr6]\n"
                            "movi v30.4s, #0\n"
                            "add c_ptr6, c_ptr6, #0x10\n"
                            ".inst 0x4f85e21d // sdot v29.4s, v16.16b, v5.4b[0]\n"
                            "str q31, [c_ptr7]\n"
                            "movi v31.4s, #0\n"
                            "add c_ptr7, c_ptr7, #0x10\n"
                            ".inst 0x4f86e21e // sdot v30.4s, v16.16b, v6.4b[0]\n"
                            "add %[b_ptr0], %[b_ptr0], #0x40\n"
                            ".inst 0x4f87e21f // sdot v31.4s, v16.16b, v7.4b[0]\n"
                            ".inst 0x4fa0e238 // sdot v24.4s, v17.16b, v0.4b[1]\n"
                            ".inst 0x4fa1e239 // sdot v25.4s, v17.16b, v1.4b[1]\n"
                            ".inst 0x4fa2e23a // sdot v26.4s, v17.16b, v2.4b[1]\n"
                            ".inst 0x4fa3e23b // sdot v27.4s, v17.16b, v3.4b[1]\n"
                            ".inst 0x4fa4e23c // sdot v28.4s, v17.16b, v4.4b[1]\n"
                            ".inst 0x4fa5e23d // sdot v29.4s, v17.16b, v5.4b[1]\n"
                            ".inst 0x4fa6e23e // sdot v30.4s, v17.16b, v6.4b[1]\n"
                            ".inst 0x4fa7e23f // sdot v31.4s, v17.16b, v7.4b[1]\n"
                            ".inst 0x4f80ea58 // sdot v24.4s, v18.16b, v0.4b[2]\n"
                            ".inst 0x4f81ea59 // sdot v25.4s, v18.16b, v1.4b[2]\n"
                            ".inst 0x4f82ea5a // sdot v26.4s, v18.16b, v2.4b[2]\n"
                            ".inst 0x4f83ea5b // sdot v27.4s, v18.16b, v3.4b[2]\n"
                            ".inst 0x4f84ea5c // sdot v28.4s, v18.16b, v4.4b[2]\n"
                            ".inst 0x4f85ea5d // sdot v29.4s, v18.16b, v5.4b[2]\n"
                            ".inst 0x4f86ea5e // sdot v30.4s, v18.16b, v6.4b[2]\n"
                            ".inst 0x4f87ea5f // sdot v31.4s, v18.16b, v7.4b[2]\n"
                            ".inst 0x4fa0ea78 // sdot v24.4s, v19.16b, v0.4b[3]\n"
                            ".inst 0x4fa1ea79 // sdot v25.4s, v19.16b, v1.4b[3]\n"
                            ".inst 0x4fa2ea7a // sdot v26.4s, v19.16b, v2.4b[3]\n"
                            ".inst 0x4fa3ea7b // sdot v27.4s, v19.16b, v3.4b[3]\n"
                            ".inst 0x4fa4ea7c // sdot v28.4s, v19.16b, v4.4b[3]\n"
                            ".inst 0x4fa5ea7d // sdot v29.4s, v19.16b, v5.4b[3]\n"
                            ".inst 0x4fa6ea7e // sdot v30.4s, v19.16b, v6.4b[3]\n"
                            ".inst 0x4fa7ea7f // sdot v31.4s, v19.16b, v7.4b[3]\n"
                            "b 9f\n"
                            "6:\n"
                            "movi v24.4s, #0\n"
                            "movi v25.4s, #0\n"
                            "movi v26.4s, #0\n"
                            "movi v27.4s, #0\n"
                            "movi v28.4s, #0\n"
                            "movi v29.4s, #0\n"
                            "movi v30.4s, #0\n"
                            "movi v31.4s, #0\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            ".inst 0x4f81e219 // sdot v25.4s, v16.16b, v1.4b[0]\n"
                            ".inst 0x4f82e21a // sdot v26.4s, v16.16b, v2.4b[0]\n"
                            ".inst 0x4f83e21b // sdot v27.4s, v16.16b, v3.4b[0]\n"
                            ".inst 0x4f84e21c // sdot v28.4s, v16.16b, v4.4b[0]\n"
                            ".inst 0x4f85e21d // sdot v29.4s, v16.16b, v5.4b[0]\n"
                            ".inst 0x4f86e21e // sdot v30.4s, v16.16b, v6.4b[0]\n"
                            ".inst 0x4f87e21f // sdot v31.4s, v16.16b, v7.4b[0]\n"
                            ".inst 0x4fa0e238 // sdot v24.4s, v17.16b, v0.4b[1]\n"
                            ".inst 0x4fa1e239 // sdot v25.4s, v17.16b, v1.4b[1]\n"
                            ".inst 0x4fa2e23a // sdot v26.4s, v17.16b, v2.4b[1]\n"
                            ".inst 0x4fa3e23b // sdot v27.4s, v17.16b, v3.4b[1]\n"
                            ".inst 0x4fa4e23c // sdot v28.4s, v17.16b, v4.4b[1]\n"
                            ".inst 0x4fa5e23d // sdot v29.4s, v17.16b, v5.4b[1]\n"
                            ".inst 0x4fa6e23e // sdot v30.4s, v17.16b, v6.4b[1]\n"
                            ".inst 0x4fa7e23f // sdot v31.4s, v17.16b, v7.4b[1]\n"
                            ".inst 0x4f80ea58 // sdot v24.4s, v18.16b, v0.4b[2]\n"
                            ".inst 0x4f81ea59 // sdot v25.4s, v18.16b, v1.4b[2]\n"
                            ".inst 0x4f82ea5a // sdot v26.4s, v18.16b, v2.4b[2]\n"
                            ".inst 0x4f83ea5b // sdot v27.4s, v18.16b, v3.4b[2]\n"
                            ".inst 0x4f84ea5c // sdot v28.4s, v18.16b, v4.4b[2]\n"
                            ".inst 0x4f85ea5d // sdot v29.4s, v18.16b, v5.4b[2]\n"
                            ".inst 0x4f86ea5e // sdot v30.4s, v18.16b, v6.4b[2]\n"
                            ".inst 0x4f87ea5f // sdot v31.4s, v18.16b, v7.4b[2]\n"
                            ".inst 0x4fa0ea78 // sdot v24.4s, v19.16b, v0.4b[3]\n"
                            ".inst 0x4fa1ea79 // sdot v25.4s, v19.16b, v1.4b[3]\n"
                            ".inst 0x4fa2ea7a // sdot v26.4s, v19.16b, v2.4b[3]\n"
                            ".inst 0x4fa3ea7b // sdot v27.4s, v19.16b, v3.4b[3]\n"
                            ".inst 0x4fa4ea7c // sdot v28.4s, v19.16b, v4.4b[3]\n"
                            ".inst 0x4fa5ea7d // sdot v29.4s, v19.16b, v5.4b[3]\n"
                            ".inst 0x4fa6ea7e // sdot v30.4s, v19.16b, v6.4b[3]\n"
                            ".inst 0x4fa7ea7f // sdot v31.4s, v19.16b, v7.4b[3]\n"
                            "9:\n"
                            "str q24, [%[c_ptr0]]\n"
                            "add %[c_ptr0], %[c_ptr0], #0x10\n"
                            "str q25, [c_ptr1]\n"
                            "str q26, [c_ptr2]\n"
                            "str q27, [c_ptr3]\n"
                            "str q28, [c_ptr4]\n"
                            "str q29, [c_ptr5]\n"
                            "str q30, [c_ptr6]\n"
                            "str q31, [c_ptr7]\n"
                            ".unreq a_ptr1\n"
                            ".unreq a_ptr2\n"
                            ".unreq a_ptr3\n"
                            ".unreq a_ptr4\n"
                            ".unreq a_ptr5\n"
                            ".unreq a_ptr6\n"
                            ".unreq a_ptr7\n"
                            ".unreq c_ptr1\n"
                            ".unreq c_ptr2\n"
                            ".unreq c_ptr3\n"
                            ".unreq c_ptr4\n"
                            ".unreq c_ptr5\n"
                            ".unreq c_ptr6\n"
                            ".unreq c_ptr7\n"
                            : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (
                                loops),
                            [oob_rows] "+r" (oob_rows), [odds] "+r" (odds)
                            : [lda] "r" (ldab), [ldc] "r" (ldcb)
                            : "x0", "x1", "x2", "x3", "x4", "x5", "x6", "x7", "x8", "x9", "x10", "x11", "x12", "x13",
                            "v0",
                            "v1", "v2", "v3", "v4", "v5", "v6", "v7", "v8", "v9", "v10", "v11", "v12", "v13", "v14",
                            "v15",
                            "v16", "v17", "v18", "v19", "v20", "v21", "v22", "v23", "v24", "v25", "v26", "v27", "v28",
                            "v29"
                            , "v30", "v31", "cc", "memory"
                        );
                        break;
                    case 5:
                        __asm __volatile (
                            "a_ptr1 .req X0\n"
                            "a_ptr2 .req X1\n"
                            "a_ptr3 .req X2\n"
                            "a_ptr4 .req X3\n"
                            "a_ptr5 .req X4\n"
                            "a_ptr6 .req X5\n"
                            "a_ptr7 .req X6\n"
                            "c_ptr1 .req X7\n"
                            "c_ptr2 .req X8\n"
                            "c_ptr3 .req X9\n"
                            "c_ptr4 .req X10\n"
                            "c_ptr5 .req X11\n"
                            "c_ptr6 .req X12\n"
                            "c_ptr7 .req X13\n"
                            "add a_ptr1, %[a_ptr0], %[lda]\n"
                            "add c_ptr1, %[c_ptr0], %[ldc]\n"
                            "add a_ptr2, a_ptr1, %[lda]\n"
                            "add c_ptr2, c_ptr1, %[ldc]\n"
                            "add a_ptr3, a_ptr2, %[lda]\n"
                            "add c_ptr3, c_ptr2, %[ldc]\n"
                            "add a_ptr4, a_ptr3, %[lda]\n"
                            "add c_ptr4, c_ptr3, %[ldc]\n"
                            "add a_ptr5, a_ptr4, %[lda]\n"
                            "add c_ptr5, c_ptr4, %[ldc]\n"
                            "add a_ptr6, a_ptr5, %[lda]\n"
                            "add c_ptr6, c_ptr5, %[ldc]\n"
                            "add a_ptr7, a_ptr6, %[lda]\n"
                            "add c_ptr7, c_ptr6, %[ldc]\n"
                            "cbz %[oob_rows], 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr7, %[c_ptr0], #0x0\n"
                            "add a_ptr7, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr6, %[c_ptr0], #0x0\n"
                            "add a_ptr6, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr5, %[c_ptr0], #0x0\n"
                            "add a_ptr5, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr4, %[c_ptr0], #0x0\n"
                            "add a_ptr4, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr3, %[c_ptr0], #0x0\n"
                            "add a_ptr3, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr2, %[c_ptr0], #0x0\n"
                            "add a_ptr2, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr1, %[c_ptr0], #0x0\n"
                            "add a_ptr1, %[a_ptr0], #0x0\n"
                            "1:\n"
                            "cbnz %[odds], 2f\n"
                            "ldr q0, [%[a_ptr0]], #0x10\n"
                            "ldr q2, [a_ptr1], #0x10\n"
                            "ldr q4, [a_ptr2], #0x10\n"
                            "ldr q6, [a_ptr3], #0x10\n"
                            "ldr s1, [%[a_ptr0]]\n"
                            "ldr q8, [a_ptr4], #0x10\n"
                            "ldr s3, [a_ptr1]\n"
                            "ldr q10, [a_ptr5], #0x10\n"
                            "ldr s5, [a_ptr2]\n"
                            "ldr q12, [a_ptr6], #0x10\n"
                            "ldr s7, [a_ptr3]\n"
                            "ldr q14, [a_ptr7], #0x10\n"
                            "ldr s9, [a_ptr4]\n"
                            "ldr s11, [a_ptr5]\n"
                            "ldr s13, [a_ptr6]\n"
                            "ldr s15, [a_ptr7]\n"
                            "b 3f\n"
                            "2:\n"
                            "ldr q0, [%[a_ptr0]], #0x10\n"
                            "subs %[odds], %[odds], #0x1\n"
                            "ldr q2, [a_ptr1], #0x10\n"
                            "ldr q4, [a_ptr2], #0x10\n"
                            "ldr q6, [a_ptr3], #0x10\n"
                            "ldr q8, [a_ptr4], #0x10\n"
                            "ldr q10, [a_ptr5], #0x10\n"
                            "ldr q12, [a_ptr6], #0x10\n"
                            "ldr q14, [a_ptr7], #0x10\n"
                            "b.ne 4f\n"
                            "ldr b1, [%[a_ptr0]]\n"
                            "ldr b3, [a_ptr1]\n"
                            "ldr b5, [a_ptr2]\n"
                            "ldr b7, [a_ptr3]\n"
                            "ldr b9, [a_ptr4]\n"
                            "ldr b11, [a_ptr5]\n"
                            "ldr b13, [a_ptr6]\n"
                            "ldr b15, [a_ptr7]\n"
                            "b 3f\n"
                            "4:\n"
                            "ldr h1, [%[a_ptr0]], #0x2\n"
                            "ldr h3, [a_ptr1], #0x2\n"
                            "ldr h5, [a_ptr2], #0x2\n"
                            "ldr h7, [a_ptr3], #0x2\n"
                            "ldr h9, [a_ptr4], #0x2\n"
                            "ldr h11, [a_ptr5], #0x2\n"
                            "ldr h13, [a_ptr6], #0x2\n"
                            "ldr h15, [a_ptr7], #0x2\n"
                            "subs %[odds], %[odds], #0x1\n"
                            "b.ne 5f\n"
                            "b 3f\n"
                            "5:\n"
                            "ld1 {v1.b}[2], [%[a_ptr0]]\n"
                            "ld1 {v3.b}[2], [a_ptr1]\n"
                            "ld1 {v5.b}[2], [a_ptr2]\n"
                            "ld1 {v7.b}[2], [a_ptr3]\n"
                            "ld1 {v9.b}[2], [a_ptr4]\n"
                            "ld1 {v11.b}[2], [a_ptr5]\n"
                            "ld1 {v13.b}[2], [a_ptr6]\n"
                            "ld1 {v15.b}[2], [a_ptr7]\n"
                            "3:\n"
                            "ldr q16, [%[b_ptr0]]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x40]\n"
                            "ldr q17, [%[b_ptr0], #0x10]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x80]\n"
                            "ldr q18, [%[b_ptr0], #0x20]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0xc0]\n"
                            "ldr q19, [%[b_ptr0], #0x30]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x100]\n"
                            "ldr q20, [%[b_ptr0], #0x40]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x140]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x180]\n"
                            "add %[b_ptr0], %[b_ptr0], #0x50\n"
                            "cbz %[loops], 6f\n"
                            "movi v24.4s, #0\n"
                            "subs %[loops], %[loops], #0x1\n"
                            "movi v25.4s, #0\n"
                            "movi v26.4s, #0\n"
                            "movi v27.4s, #0\n"
                            "movi v28.4s, #0\n"
                            "movi v29.4s, #0\n"
                            "movi v30.4s, #0\n"
                            "movi v31.4s, #0\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            ".inst 0x4f82e219 // sdot v25.4s, v16.16b, v2.4b[0]\n"
                            ".inst 0x4f84e21a // sdot v26.4s, v16.16b, v4.4b[0]\n"
                            ".inst 0x4f86e21b // sdot v27.4s, v16.16b, v6.4b[0]\n"
                            ".inst 0x4f88e21c // sdot v28.4s, v16.16b, v8.4b[0]\n"
                            ".inst 0x4f8ae21d // sdot v29.4s, v16.16b, v10.4b[0]\n"
                            ".inst 0x4f8ce21e // sdot v30.4s, v16.16b, v12.4b[0]\n"
                            ".inst 0x4f8ee21f // sdot v31.4s, v16.16b, v14.4b[0]\n"
                            ".inst 0x4fa0e238 // sdot v24.4s, v17.16b, v0.4b[1]\n"
                            ".inst 0x4fa2e239 // sdot v25.4s, v17.16b, v2.4b[1]\n"
                            ".inst 0x4fa4e23a // sdot v26.4s, v17.16b, v4.4b[1]\n"
                            ".inst 0x4fa6e23b // sdot v27.4s, v17.16b, v6.4b[1]\n"
                            ".inst 0x4fa8e23c // sdot v28.4s, v17.16b, v8.4b[1]\n"
                            ".inst 0x4faae23d // sdot v29.4s, v17.16b, v10.4b[1]\n"
                            ".inst 0x4face23e // sdot v30.4s, v17.16b, v12.4b[1]\n"
                            ".inst 0x4faee23f // sdot v31.4s, v17.16b, v14.4b[1]\n"
                            ".inst 0x4f80ea58 // sdot v24.4s, v18.16b, v0.4b[2]\n"
                            ".inst 0x4f82ea59 // sdot v25.4s, v18.16b, v2.4b[2]\n"
                            ".inst 0x4f84ea5a // sdot v26.4s, v18.16b, v4.4b[2]\n"
                            ".inst 0x4f86ea5b // sdot v27.4s, v18.16b, v6.4b[2]\n"
                            ".inst 0x4f88ea5c // sdot v28.4s, v18.16b, v8.4b[2]\n"
                            ".inst 0x4f8aea5d // sdot v29.4s, v18.16b, v10.4b[2]\n"
                            ".inst 0x4f8cea5e // sdot v30.4s, v18.16b, v12.4b[2]\n"
                            ".inst 0x4f8eea5f // sdot v31.4s, v18.16b, v14.4b[2]\n"
                            ".inst 0x4fa0ea78 // sdot v24.4s, v19.16b, v0.4b[3]\n"
                            ".inst 0x4fa2ea79 // sdot v25.4s, v19.16b, v2.4b[3]\n"
                            ".inst 0x4fa4ea7a // sdot v26.4s, v19.16b, v4.4b[3]\n"
                            ".inst 0x4fa6ea7b // sdot v27.4s, v19.16b, v6.4b[3]\n"
                            ".inst 0x4fa8ea7c // sdot v28.4s, v19.16b, v8.4b[3]\n"
                            ".inst 0x4faaea7d // sdot v29.4s, v19.16b, v10.4b[3]\n"
                            ".inst 0x4facea7e // sdot v30.4s, v19.16b, v12.4b[3]\n"
                            ".inst 0x4faeea7f // sdot v31.4s, v19.16b, v14.4b[3]\n"
                            ".inst 0x4f81e298 // sdot v24.4s, v20.16b, v1.4b[0]\n"
                            ".inst 0x4f83e299 // sdot v25.4s, v20.16b, v3.4b[0]\n"
                            ".inst 0x4f85e29a // sdot v26.4s, v20.16b, v5.4b[0]\n"
                            ".inst 0x4f87e29b // sdot v27.4s, v20.16b, v7.4b[0]\n"
                            ".inst 0x4f89e29c // sdot v28.4s, v20.16b, v9.4b[0]\n"
                            ".inst 0x4f8be29d // sdot v29.4s, v20.16b, v11.4b[0]\n"
                            ".inst 0x4f8de29e // sdot v30.4s, v20.16b, v13.4b[0]\n"
                            ".inst 0x4f8fe29f // sdot v31.4s, v20.16b, v15.4b[0]\n"
                            "b.eq 7f\n"
                            "8:\n"
                            "str q24, [%[c_ptr0]]\n"
                            "subs %[loops], %[loops], #0x1\n"
                            "movi v24.4s, #0\n"
                            "ldr q16, [%[b_ptr0]]\n"
                            "ldr q17, [%[b_ptr0], #0x10]\n"
                            "add %[c_ptr0], %[c_ptr0], #0x10\n"
                            "str q25, [c_ptr1]\n"
                            "add c_ptr1, c_ptr1, #0x10\n"
                            "movi v25.4s, #0\n"
                            "ldr q18, [%[b_ptr0], #0x20]\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            "str q26, [c_ptr2]\n"
                            "movi v26.4s, #0\n"
                            "ldr q19, [%[b_ptr0], #0x30]\n"
                            "ldr q20, [%[b_ptr0], #0x40]\n"
                            "add c_ptr2, c_ptr2, #0x10\n"
                            ".inst 0x4f82e219 // sdot v25.4s, v16.16b, v2.4b[0]\n"
                            "str q27, [c_ptr3]\n"
                            "movi v27.4s, #0\n"
                            "add c_ptr3, c_ptr3, #0x10\n"
                            ".inst 0x4f84e21a // sdot v26.4s, v16.16b, v4.4b[0]\n"
                            "str q28, [c_ptr4]\n"
                            "movi v28.4s, #0\n"
                            "add c_ptr4, c_ptr4, #0x10\n"
                            ".inst 0x4f86e21b // sdot v27.4s, v16.16b, v6.4b[0]\n"
                            "str q29, [c_ptr5]\n"
                            "movi v29.4s, #0\n"
                            "add c_ptr5, c_ptr5, #0x10\n"
                            ".inst 0x4f88e21c // sdot v28.4s, v16.16b, v8.4b[0]\n"
                            "str q30, [c_ptr6]\n"
                            "movi v30.4s, #0\n"
                            "add c_ptr6, c_ptr6, #0x10\n"
                            ".inst 0x4f8ae21d // sdot v29.4s, v16.16b, v10.4b[0]\n"
                            "str q31, [c_ptr7]\n"
                            "movi v31.4s, #0\n"
                            "add c_ptr7, c_ptr7, #0x10\n"
                            ".inst 0x4f8ce21e // sdot v30.4s, v16.16b, v12.4b[0]\n"
                            "add %[b_ptr0], %[b_ptr0], #0x50\n"
                            ".inst 0x4f8ee21f // sdot v31.4s, v16.16b, v14.4b[0]\n"
                            "prfm PSTL1KEEP, [%[c_ptr0], #0x40]\n"
                            ".inst 0x4fa0e238 // sdot v24.4s, v17.16b, v0.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr1, #0x40]\n"
                            ".inst 0x4fa2e239 // sdot v25.4s, v17.16b, v2.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr2, #0x40]\n"
                            ".inst 0x4fa4e23a // sdot v26.4s, v17.16b, v4.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr3, #0x40]\n"
                            ".inst 0x4fa6e23b // sdot v27.4s, v17.16b, v6.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr4, #0x40]\n"
                            ".inst 0x4fa8e23c // sdot v28.4s, v17.16b, v8.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr5, #0x40]\n"
                            ".inst 0x4faae23d // sdot v29.4s, v17.16b, v10.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr6, #0x40]\n"
                            ".inst 0x4face23e // sdot v30.4s, v17.16b, v12.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr7, #0x40]\n"
                            ".inst 0x4faee23f // sdot v31.4s, v17.16b, v14.4b[1]\n"
                            ".inst 0x4f80ea58 // sdot v24.4s, v18.16b, v0.4b[2]\n"
                            ".inst 0x4f82ea59 // sdot v25.4s, v18.16b, v2.4b[2]\n"
                            ".inst 0x4f84ea5a // sdot v26.4s, v18.16b, v4.4b[2]\n"
                            ".inst 0x4f86ea5b // sdot v27.4s, v18.16b, v6.4b[2]\n"
                            ".inst 0x4f88ea5c // sdot v28.4s, v18.16b, v8.4b[2]\n"
                            ".inst 0x4f8aea5d // sdot v29.4s, v18.16b, v10.4b[2]\n"
                            ".inst 0x4f8cea5e // sdot v30.4s, v18.16b, v12.4b[2]\n"
                            ".inst 0x4f8eea5f // sdot v31.4s, v18.16b, v14.4b[2]\n"
                            ".inst 0x4fa0ea78 // sdot v24.4s, v19.16b, v0.4b[3]\n"
                            ".inst 0x4fa2ea79 // sdot v25.4s, v19.16b, v2.4b[3]\n"
                            ".inst 0x4fa4ea7a // sdot v26.4s, v19.16b, v4.4b[3]\n"
                            ".inst 0x4fa6ea7b // sdot v27.4s, v19.16b, v6.4b[3]\n"
                            ".inst 0x4fa8ea7c // sdot v28.4s, v19.16b, v8.4b[3]\n"
                            ".inst 0x4faaea7d // sdot v29.4s, v19.16b, v10.4b[3]\n"
                            ".inst 0x4facea7e // sdot v30.4s, v19.16b, v12.4b[3]\n"
                            ".inst 0x4faeea7f // sdot v31.4s, v19.16b, v14.4b[3]\n"
                            ".inst 0x4f81e298 // sdot v24.4s, v20.16b, v1.4b[0]\n"
                            ".inst 0x4f83e299 // sdot v25.4s, v20.16b, v3.4b[0]\n"
                            ".inst 0x4f85e29a // sdot v26.4s, v20.16b, v5.4b[0]\n"
                            ".inst 0x4f87e29b // sdot v27.4s, v20.16b, v7.4b[0]\n"
                            ".inst 0x4f89e29c // sdot v28.4s, v20.16b, v9.4b[0]\n"
                            ".inst 0x4f8be29d // sdot v29.4s, v20.16b, v11.4b[0]\n"
                            ".inst 0x4f8de29e // sdot v30.4s, v20.16b, v13.4b[0]\n"
                            ".inst 0x4f8fe29f // sdot v31.4s, v20.16b, v15.4b[0]\n"
                            "b.ne 8b\n"
                            "7:\n"
                            "str q24, [%[c_ptr0]]\n"
                            "add %[c_ptr0], %[c_ptr0], #0x10\n"
                            "movi v24.4s, #0\n"
                            "ldr q16, [%[b_ptr0]]\n"
                            "ldr q17, [%[b_ptr0], #0x10]\n"
                            "str q25, [c_ptr1]\n"
                            "add c_ptr1, c_ptr1, #0x10\n"
                            "movi v25.4s, #0\n"
                            "ldr q18, [%[b_ptr0], #0x20]\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            "str q26, [c_ptr2]\n"
                            "movi v26.4s, #0\n"
                            "ldr q19, [%[b_ptr0], #0x30]\n"
                            "ldr q20, [%[b_ptr0], #0x40]\n"
                            "add c_ptr2, c_ptr2, #0x10\n"
                            ".inst 0x4f82e219 // sdot v25.4s, v16.16b, v2.4b[0]\n"
                            "str q27, [c_ptr3]\n"
                            "movi v27.4s, #0\n"
                            "add c_ptr3, c_ptr3, #0x10\n"
                            ".inst 0x4f84e21a // sdot v26.4s, v16.16b, v4.4b[0]\n"
                            "str q28, [c_ptr4]\n"
                            "movi v28.4s, #0\n"
                            "add c_ptr4, c_ptr4, #0x10\n"
                            ".inst 0x4f86e21b // sdot v27.4s, v16.16b, v6.4b[0]\n"
                            "str q29, [c_ptr5]\n"
                            "movi v29.4s, #0\n"
                            "add c_ptr5, c_ptr5, #0x10\n"
                            ".inst 0x4f88e21c // sdot v28.4s, v16.16b, v8.4b[0]\n"
                            "str q30, [c_ptr6]\n"
                            "movi v30.4s, #0\n"
                            "add c_ptr6, c_ptr6, #0x10\n"
                            ".inst 0x4f8ae21d // sdot v29.4s, v16.16b, v10.4b[0]\n"
                            "str q31, [c_ptr7]\n"
                            "movi v31.4s, #0\n"
                            "add c_ptr7, c_ptr7, #0x10\n"
                            ".inst 0x4f8ce21e // sdot v30.4s, v16.16b, v12.4b[0]\n"
                            "add %[b_ptr0], %[b_ptr0], #0x50\n"
                            ".inst 0x4f8ee21f // sdot v31.4s, v16.16b, v14.4b[0]\n"
                            ".inst 0x4fa0e238 // sdot v24.4s, v17.16b, v0.4b[1]\n"
                            ".inst 0x4fa2e239 // sdot v25.4s, v17.16b, v2.4b[1]\n"
                            ".inst 0x4fa4e23a // sdot v26.4s, v17.16b, v4.4b[1]\n"
                            ".inst 0x4fa6e23b // sdot v27.4s, v17.16b, v6.4b[1]\n"
                            ".inst 0x4fa8e23c // sdot v28.4s, v17.16b, v8.4b[1]\n"
                            ".inst 0x4faae23d // sdot v29.4s, v17.16b, v10.4b[1]\n"
                            ".inst 0x4face23e // sdot v30.4s, v17.16b, v12.4b[1]\n"
                            ".inst 0x4faee23f // sdot v31.4s, v17.16b, v14.4b[1]\n"
                            ".inst 0x4f80ea58 // sdot v24.4s, v18.16b, v0.4b[2]\n"
                            ".inst 0x4f82ea59 // sdot v25.4s, v18.16b, v2.4b[2]\n"
                            ".inst 0x4f84ea5a // sdot v26.4s, v18.16b, v4.4b[2]\n"
                            ".inst 0x4f86ea5b // sdot v27.4s, v18.16b, v6.4b[2]\n"
                            ".inst 0x4f88ea5c // sdot v28.4s, v18.16b, v8.4b[2]\n"
                            ".inst 0x4f8aea5d // sdot v29.4s, v18.16b, v10.4b[2]\n"
                            ".inst 0x4f8cea5e // sdot v30.4s, v18.16b, v12.4b[2]\n"
                            ".inst 0x4f8eea5f // sdot v31.4s, v18.16b, v14.4b[2]\n"
                            ".inst 0x4fa0ea78 // sdot v24.4s, v19.16b, v0.4b[3]\n"
                            ".inst 0x4fa2ea79 // sdot v25.4s, v19.16b, v2.4b[3]\n"
                            ".inst 0x4fa4ea7a // sdot v26.4s, v19.16b, v4.4b[3]\n"
                            ".inst 0x4fa6ea7b // sdot v27.4s, v19.16b, v6.4b[3]\n"
                            ".inst 0x4fa8ea7c // sdot v28.4s, v19.16b, v8.4b[3]\n"
                            ".inst 0x4faaea7d // sdot v29.4s, v19.16b, v10.4b[3]\n"
                            ".inst 0x4facea7e // sdot v30.4s, v19.16b, v12.4b[3]\n"
                            ".inst 0x4faeea7f // sdot v31.4s, v19.16b, v14.4b[3]\n"
                            ".inst 0x4f81e298 // sdot v24.4s, v20.16b, v1.4b[0]\n"
                            ".inst 0x4f83e299 // sdot v25.4s, v20.16b, v3.4b[0]\n"
                            ".inst 0x4f85e29a // sdot v26.4s, v20.16b, v5.4b[0]\n"
                            ".inst 0x4f87e29b // sdot v27.4s, v20.16b, v7.4b[0]\n"
                            ".inst 0x4f89e29c // sdot v28.4s, v20.16b, v9.4b[0]\n"
                            ".inst 0x4f8be29d // sdot v29.4s, v20.16b, v11.4b[0]\n"
                            ".inst 0x4f8de29e // sdot v30.4s, v20.16b, v13.4b[0]\n"
                            ".inst 0x4f8fe29f // sdot v31.4s, v20.16b, v15.4b[0]\n"
                            "b 9f\n"
                            "6:\n"
                            "movi v24.4s, #0\n"
                            "movi v25.4s, #0\n"
                            "movi v26.4s, #0\n"
                            "movi v27.4s, #0\n"
                            "movi v28.4s, #0\n"
                            "movi v29.4s, #0\n"
                            "movi v30.4s, #0\n"
                            "movi v31.4s, #0\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            ".inst 0x4f82e219 // sdot v25.4s, v16.16b, v2.4b[0]\n"
                            ".inst 0x4f84e21a // sdot v26.4s, v16.16b, v4.4b[0]\n"
                            ".inst 0x4f86e21b // sdot v27.4s, v16.16b, v6.4b[0]\n"
                            ".inst 0x4f88e21c // sdot v28.4s, v16.16b, v8.4b[0]\n"
                            ".inst 0x4f8ae21d // sdot v29.4s, v16.16b, v10.4b[0]\n"
                            ".inst 0x4f8ce21e // sdot v30.4s, v16.16b, v12.4b[0]\n"
                            ".inst 0x4f8ee21f // sdot v31.4s, v16.16b, v14.4b[0]\n"
                            ".inst 0x4fa0e238 // sdot v24.4s, v17.16b, v0.4b[1]\n"
                            ".inst 0x4fa2e239 // sdot v25.4s, v17.16b, v2.4b[1]\n"
                            ".inst 0x4fa4e23a // sdot v26.4s, v17.16b, v4.4b[1]\n"
                            ".inst 0x4fa6e23b // sdot v27.4s, v17.16b, v6.4b[1]\n"
                            ".inst 0x4fa8e23c // sdot v28.4s, v17.16b, v8.4b[1]\n"
                            ".inst 0x4faae23d // sdot v29.4s, v17.16b, v10.4b[1]\n"
                            ".inst 0x4face23e // sdot v30.4s, v17.16b, v12.4b[1]\n"
                            ".inst 0x4faee23f // sdot v31.4s, v17.16b, v14.4b[1]\n"
                            ".inst 0x4f80ea58 // sdot v24.4s, v18.16b, v0.4b[2]\n"
                            ".inst 0x4f82ea59 // sdot v25.4s, v18.16b, v2.4b[2]\n"
                            ".inst 0x4f84ea5a // sdot v26.4s, v18.16b, v4.4b[2]\n"
                            ".inst 0x4f86ea5b // sdot v27.4s, v18.16b, v6.4b[2]\n"
                            ".inst 0x4f88ea5c // sdot v28.4s, v18.16b, v8.4b[2]\n"
                            ".inst 0x4f8aea5d // sdot v29.4s, v18.16b, v10.4b[2]\n"
                            ".inst 0x4f8cea5e // sdot v30.4s, v18.16b, v12.4b[2]\n"
                            ".inst 0x4f8eea5f // sdot v31.4s, v18.16b, v14.4b[2]\n"
                            ".inst 0x4fa0ea78 // sdot v24.4s, v19.16b, v0.4b[3]\n"
                            ".inst 0x4fa2ea79 // sdot v25.4s, v19.16b, v2.4b[3]\n"
                            ".inst 0x4fa4ea7a // sdot v26.4s, v19.16b, v4.4b[3]\n"
                            ".inst 0x4fa6ea7b // sdot v27.4s, v19.16b, v6.4b[3]\n"
                            ".inst 0x4fa8ea7c // sdot v28.4s, v19.16b, v8.4b[3]\n"
                            ".inst 0x4faaea7d // sdot v29.4s, v19.16b, v10.4b[3]\n"
                            ".inst 0x4facea7e // sdot v30.4s, v19.16b, v12.4b[3]\n"
                            ".inst 0x4faeea7f // sdot v31.4s, v19.16b, v14.4b[3]\n"
                            ".inst 0x4f81e298 // sdot v24.4s, v20.16b, v1.4b[0]\n"
                            ".inst 0x4f83e299 // sdot v25.4s, v20.16b, v3.4b[0]\n"
                            ".inst 0x4f85e29a // sdot v26.4s, v20.16b, v5.4b[0]\n"
                            ".inst 0x4f87e29b // sdot v27.4s, v20.16b, v7.4b[0]\n"
                            ".inst 0x4f89e29c // sdot v28.4s, v20.16b, v9.4b[0]\n"
                            ".inst 0x4f8be29d // sdot v29.4s, v20.16b, v11.4b[0]\n"
                            ".inst 0x4f8de29e // sdot v30.4s, v20.16b, v13.4b[0]\n"
                            ".inst 0x4f8fe29f // sdot v31.4s, v20.16b, v15.4b[0]\n"
                            "9:\n"
                            "str q24, [%[c_ptr0]]\n"
                            "add %[c_ptr0], %[c_ptr0], #0x10\n"
                            "str q25, [c_ptr1]\n"
                            "str q26, [c_ptr2]\n"
                            "str q27, [c_ptr3]\n"
                            "str q28, [c_ptr4]\n"
                            "str q29, [c_ptr5]\n"
                            "str q30, [c_ptr6]\n"
                            "str q31, [c_ptr7]\n"
                            ".unreq a_ptr1\n"
                            ".unreq a_ptr2\n"
                            ".unreq a_ptr3\n"
                            ".unreq a_ptr4\n"
                            ".unreq a_ptr5\n"
                            ".unreq a_ptr6\n"
                            ".unreq a_ptr7\n"
                            ".unreq c_ptr1\n"
                            ".unreq c_ptr2\n"
                            ".unreq c_ptr3\n"
                            ".unreq c_ptr4\n"
                            ".unreq c_ptr5\n"
                            ".unreq c_ptr6\n"
                            ".unreq c_ptr7\n"
                            : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (
                                loops),
                            [oob_rows] "+r" (oob_rows), [odds] "+r" (odds)
                            : [lda] "r" (ldab), [ldc] "r" (ldcb)
                            : "x0", "x1", "x2", "x3", "x4", "x5", "x6", "x7", "x8", "x9", "x10", "x11", "x12", "x13",
                            "v0",
                            "v1", "v2", "v3", "v4", "v5", "v6", "v7", "v8", "v9", "v10", "v11", "v12", "v13", "v14",
                            "v15",
                            "v16", "v17", "v18", "v19", "v20", "v21", "v22", "v23", "v24", "v25", "v26", "v27", "v28",
                            "v29"
                            , "v30", "v31", "cc", "memory"
                        );
                        break;
                    case 6:
                        __asm __volatile (
                            "a_ptr1 .req X0\n"
                            "a_ptr2 .req X1\n"
                            "a_ptr3 .req X2\n"
                            "a_ptr4 .req X3\n"
                            "a_ptr5 .req X4\n"
                            "a_ptr6 .req X5\n"
                            "a_ptr7 .req X6\n"
                            "c_ptr1 .req X7\n"
                            "c_ptr2 .req X8\n"
                            "c_ptr3 .req X9\n"
                            "c_ptr4 .req X10\n"
                            "c_ptr5 .req X11\n"
                            "c_ptr6 .req X12\n"
                            "c_ptr7 .req X13\n"
                            "add a_ptr1, %[a_ptr0], %[lda]\n"
                            "add c_ptr1, %[c_ptr0], %[ldc]\n"
                            "add a_ptr2, a_ptr1, %[lda]\n"
                            "add c_ptr2, c_ptr1, %[ldc]\n"
                            "add a_ptr3, a_ptr2, %[lda]\n"
                            "add c_ptr3, c_ptr2, %[ldc]\n"
                            "add a_ptr4, a_ptr3, %[lda]\n"
                            "add c_ptr4, c_ptr3, %[ldc]\n"
                            "add a_ptr5, a_ptr4, %[lda]\n"
                            "add c_ptr5, c_ptr4, %[ldc]\n"
                            "add a_ptr6, a_ptr5, %[lda]\n"
                            "add c_ptr6, c_ptr5, %[ldc]\n"
                            "add a_ptr7, a_ptr6, %[lda]\n"
                            "add c_ptr7, c_ptr6, %[ldc]\n"
                            "cbz %[oob_rows], 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr7, %[c_ptr0], #0x0\n"
                            "add a_ptr7, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr6, %[c_ptr0], #0x0\n"
                            "add a_ptr6, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr5, %[c_ptr0], #0x0\n"
                            "add a_ptr5, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr4, %[c_ptr0], #0x0\n"
                            "add a_ptr4, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr3, %[c_ptr0], #0x0\n"
                            "add a_ptr3, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr2, %[c_ptr0], #0x0\n"
                            "add a_ptr2, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr1, %[c_ptr0], #0x0\n"
                            "add a_ptr1, %[a_ptr0], #0x0\n"
                            "1:\n"
                            "cbnz %[odds], 2f\n"
                            "ldr q0, [%[a_ptr0]], #0x10\n"
                            "ldr q2, [a_ptr1], #0x10\n"
                            "ldr q4, [a_ptr2], #0x10\n"
                            "ldr q6, [a_ptr3], #0x10\n"
                            "ldr d1, [%[a_ptr0]]\n"
                            "ldr q8, [a_ptr4], #0x10\n"
                            "ldr d3, [a_ptr1]\n"
                            "ldr q10, [a_ptr5], #0x10\n"
                            "ldr d5, [a_ptr2]\n"
                            "ldr q12, [a_ptr6], #0x10\n"
                            "ldr d7, [a_ptr3]\n"
                            "ldr q14, [a_ptr7], #0x10\n"
                            "ldr d9, [a_ptr4]\n"
                            "ldr d11, [a_ptr5]\n"
                            "ldr d13, [a_ptr6]\n"
                            "ldr d15, [a_ptr7]\n"
                            "b 3f\n"
                            "2:\n"
                            "ldr q0, [%[a_ptr0]], #0x10\n"
                            "subs %[odds], %[odds], #0x1\n"
                            "ldr q2, [a_ptr1], #0x10\n"
                            "ldr q4, [a_ptr2], #0x10\n"
                            "ldr s1, [%[a_ptr0]], #0x4\n"
                            "ldr q6, [a_ptr3], #0x10\n"
                            "ldr s3, [a_ptr1], #0x4\n"
                            "ldr q8, [a_ptr4], #0x10\n"
                            "ldr s5, [a_ptr2], #0x4\n"
                            "ldr q10, [a_ptr5], #0x10\n"
                            "ldr s7, [a_ptr3], #0x4\n"
                            "ldr q12, [a_ptr6], #0x10\n"
                            "ldr s9, [a_ptr4], #0x4\n"
                            "ldr q14, [a_ptr7], #0x10\n"
                            "ldr s11, [a_ptr5], #0x4\n"
                            "ldr s13, [a_ptr6], #0x4\n"
                            "ldr s15, [a_ptr7], #0x4\n"
                            "b.ne 4f\n"
                            "ld1 {v1.b}[4], [%[a_ptr0]]\n"
                            "ld1 {v3.b}[4], [a_ptr1]\n"
                            "ld1 {v5.b}[4], [a_ptr2]\n"
                            "ld1 {v7.b}[4], [a_ptr3]\n"
                            "ld1 {v9.b}[4], [a_ptr4]\n"
                            "ld1 {v11.b}[4], [a_ptr5]\n"
                            "ld1 {v13.b}[4], [a_ptr6]\n"
                            "ld1 {v15.b}[4], [a_ptr7]\n"
                            "b 3f\n"
                            "4:\n"
                            "ld1 {v1.h}[2], [%[a_ptr0]], #2\n"
                            "ld1 {v3.h}[2], [a_ptr1], #2\n"
                            "ld1 {v5.h}[2], [a_ptr2], #2\n"
                            "ld1 {v7.h}[2], [a_ptr3], #2\n"
                            "ld1 {v9.h}[2], [a_ptr4], #2\n"
                            "ld1 {v11.h}[2], [a_ptr5], #2\n"
                            "ld1 {v13.h}[2], [a_ptr6], #2\n"
                            "ld1 {v15.h}[2], [a_ptr7], #2\n"
                            "subs %[odds], %[odds], #0x1\n"
                            "b.ne 5f\n"
                            "b 3f\n"
                            "5:\n"
                            "ld1 {v1.b}[6], [%[a_ptr0]]\n"
                            "ld1 {v3.b}[6], [a_ptr1]\n"
                            "ld1 {v5.b}[6], [a_ptr2]\n"
                            "ld1 {v7.b}[6], [a_ptr3]\n"
                            "ld1 {v9.b}[6], [a_ptr4]\n"
                            "ld1 {v11.b}[6], [a_ptr5]\n"
                            "ld1 {v13.b}[6], [a_ptr6]\n"
                            "ld1 {v15.b}[6], [a_ptr7]\n"
                            "3:\n"
                            "ldr q16, [%[b_ptr0]]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x40]\n"
                            "ldr q17, [%[b_ptr0], #0x10]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x80]\n"
                            "ldr q18, [%[b_ptr0], #0x20]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0xc0]\n"
                            "ldr q19, [%[b_ptr0], #0x30]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x100]\n"
                            "ldr q20, [%[b_ptr0], #0x40]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x140]\n"
                            "ldr q21, [%[b_ptr0], #0x50]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x180]\n"
                            "add %[b_ptr0], %[b_ptr0], #0x60\n"
                            "cbz %[loops], 6f\n"
                            "movi v24.4s, #0\n"
                            "subs %[loops], %[loops], #0x1\n"
                            "movi v25.4s, #0\n"
                            "movi v26.4s, #0\n"
                            "movi v27.4s, #0\n"
                            "movi v28.4s, #0\n"
                            "movi v29.4s, #0\n"
                            "movi v30.4s, #0\n"
                            "movi v31.4s, #0\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            ".inst 0x4f82e219 // sdot v25.4s, v16.16b, v2.4b[0]\n"
                            ".inst 0x4f84e21a // sdot v26.4s, v16.16b, v4.4b[0]\n"
                            ".inst 0x4f86e21b // sdot v27.4s, v16.16b, v6.4b[0]\n"
                            ".inst 0x4f88e21c // sdot v28.4s, v16.16b, v8.4b[0]\n"
                            ".inst 0x4f8ae21d // sdot v29.4s, v16.16b, v10.4b[0]\n"
                            ".inst 0x4f8ce21e // sdot v30.4s, v16.16b, v12.4b[0]\n"
                            ".inst 0x4f8ee21f // sdot v31.4s, v16.16b, v14.4b[0]\n"
                            ".inst 0x4fa0e238 // sdot v24.4s, v17.16b, v0.4b[1]\n"
                            ".inst 0x4fa2e239 // sdot v25.4s, v17.16b, v2.4b[1]\n"
                            ".inst 0x4fa4e23a // sdot v26.4s, v17.16b, v4.4b[1]\n"
                            ".inst 0x4fa6e23b // sdot v27.4s, v17.16b, v6.4b[1]\n"
                            ".inst 0x4fa8e23c // sdot v28.4s, v17.16b, v8.4b[1]\n"
                            ".inst 0x4faae23d // sdot v29.4s, v17.16b, v10.4b[1]\n"
                            ".inst 0x4face23e // sdot v30.4s, v17.16b, v12.4b[1]\n"
                            ".inst 0x4faee23f // sdot v31.4s, v17.16b, v14.4b[1]\n"
                            ".inst 0x4f80ea58 // sdot v24.4s, v18.16b, v0.4b[2]\n"
                            ".inst 0x4f82ea59 // sdot v25.4s, v18.16b, v2.4b[2]\n"
                            ".inst 0x4f84ea5a // sdot v26.4s, v18.16b, v4.4b[2]\n"
                            ".inst 0x4f86ea5b // sdot v27.4s, v18.16b, v6.4b[2]\n"
                            ".inst 0x4f88ea5c // sdot v28.4s, v18.16b, v8.4b[2]\n"
                            ".inst 0x4f8aea5d // sdot v29.4s, v18.16b, v10.4b[2]\n"
                            ".inst 0x4f8cea5e // sdot v30.4s, v18.16b, v12.4b[2]\n"
                            ".inst 0x4f8eea5f // sdot v31.4s, v18.16b, v14.4b[2]\n"
                            ".inst 0x4fa0ea78 // sdot v24.4s, v19.16b, v0.4b[3]\n"
                            ".inst 0x4fa2ea79 // sdot v25.4s, v19.16b, v2.4b[3]\n"
                            ".inst 0x4fa4ea7a // sdot v26.4s, v19.16b, v4.4b[3]\n"
                            ".inst 0x4fa6ea7b // sdot v27.4s, v19.16b, v6.4b[3]\n"
                            ".inst 0x4fa8ea7c // sdot v28.4s, v19.16b, v8.4b[3]\n"
                            ".inst 0x4faaea7d // sdot v29.4s, v19.16b, v10.4b[3]\n"
                            ".inst 0x4facea7e // sdot v30.4s, v19.16b, v12.4b[3]\n"
                            ".inst 0x4faeea7f // sdot v31.4s, v19.16b, v14.4b[3]\n"
                            ".inst 0x4f81e298 // sdot v24.4s, v20.16b, v1.4b[0]\n"
                            ".inst 0x4f83e299 // sdot v25.4s, v20.16b, v3.4b[0]\n"
                            ".inst 0x4f85e29a // sdot v26.4s, v20.16b, v5.4b[0]\n"
                            ".inst 0x4f87e29b // sdot v27.4s, v20.16b, v7.4b[0]\n"
                            ".inst 0x4f89e29c // sdot v28.4s, v20.16b, v9.4b[0]\n"
                            ".inst 0x4f8be29d // sdot v29.4s, v20.16b, v11.4b[0]\n"
                            ".inst 0x4f8de29e // sdot v30.4s, v20.16b, v13.4b[0]\n"
                            ".inst 0x4f8fe29f // sdot v31.4s, v20.16b, v15.4b[0]\n"
                            ".inst 0x4fa1e2b8 // sdot v24.4s, v21.16b, v1.4b[1]\n"
                            ".inst 0x4fa3e2b9 // sdot v25.4s, v21.16b, v3.4b[1]\n"
                            ".inst 0x4fa5e2ba // sdot v26.4s, v21.16b, v5.4b[1]\n"
                            ".inst 0x4fa7e2bb // sdot v27.4s, v21.16b, v7.4b[1]\n"
                            ".inst 0x4fa9e2bc // sdot v28.4s, v21.16b, v9.4b[1]\n"
                            ".inst 0x4fabe2bd // sdot v29.4s, v21.16b, v11.4b[1]\n"
                            ".inst 0x4fade2be // sdot v30.4s, v21.16b, v13.4b[1]\n"
                            ".inst 0x4fafe2bf // sdot v31.4s, v21.16b, v15.4b[1]\n"
                            "b.eq 7f\n"
                            "8:\n"
                            "str q24, [%[c_ptr0]]\n"
                            "subs %[loops], %[loops], #0x1\n"
                            "movi v24.4s, #0\n"
                            "ldr q16, [%[b_ptr0]]\n"
                            "ldr q17, [%[b_ptr0], #0x10]\n"
                            "add %[c_ptr0], %[c_ptr0], #0x10\n"
                            "str q25, [c_ptr1]\n"
                            "add c_ptr1, c_ptr1, #0x10\n"
                            "movi v25.4s, #0\n"
                            "ldr q18, [%[b_ptr0], #0x20]\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            "str q26, [c_ptr2]\n"
                            "movi v26.4s, #0\n"
                            "ldr q19, [%[b_ptr0], #0x30]\n"
                            "ldr q20, [%[b_ptr0], #0x40]\n"
                            "add c_ptr2, c_ptr2, #0x10\n"
                            ".inst 0x4f82e219 // sdot v25.4s, v16.16b, v2.4b[0]\n"
                            "str q27, [c_ptr3]\n"
                            "movi v27.4s, #0\n"
                            "ldr q21, [%[b_ptr0], #0x50]\n"
                            ".inst 0x4f84e21a // sdot v26.4s, v16.16b, v4.4b[0]\n"
                            "add c_ptr3, c_ptr3, #0x10\n"
                            ".inst 0x4fa0e238 // sdot v24.4s, v17.16b, v0.4b[1]\n"
                            "str q28, [c_ptr4]\n"
                            "movi v28.4s, #0\n"
                            "add c_ptr4, c_ptr4, #0x10\n"
                            ".inst 0x4f86e21b // sdot v27.4s, v16.16b, v6.4b[0]\n"
                            "str q29, [c_ptr5]\n"
                            "movi v29.4s, #0\n"
                            "add c_ptr5, c_ptr5, #0x10\n"
                            ".inst 0x4f88e21c // sdot v28.4s, v16.16b, v8.4b[0]\n"
                            "str q30, [c_ptr6]\n"
                            "movi v30.4s, #0\n"
                            "add c_ptr6, c_ptr6, #0x10\n"
                            ".inst 0x4f8ae21d // sdot v29.4s, v16.16b, v10.4b[0]\n"
                            "str q31, [c_ptr7]\n"
                            "movi v31.4s, #0\n"
                            "add c_ptr7, c_ptr7, #0x10\n"
                            ".inst 0x4f8ce21e // sdot v30.4s, v16.16b, v12.4b[0]\n"
                            "add %[b_ptr0], %[b_ptr0], #0x60\n"
                            ".inst 0x4f8ee21f // sdot v31.4s, v16.16b, v14.4b[0]\n"
                            "prfm PSTL1KEEP, [%[c_ptr0], #0x40]\n"
                            ".inst 0x4fa2e239 // sdot v25.4s, v17.16b, v2.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr1, #0x40]\n"
                            ".inst 0x4fa4e23a // sdot v26.4s, v17.16b, v4.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr2, #0x40]\n"
                            ".inst 0x4fa6e23b // sdot v27.4s, v17.16b, v6.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr3, #0x40]\n"
                            ".inst 0x4fa8e23c // sdot v28.4s, v17.16b, v8.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr4, #0x40]\n"
                            ".inst 0x4faae23d // sdot v29.4s, v17.16b, v10.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr5, #0x40]\n"
                            ".inst 0x4face23e // sdot v30.4s, v17.16b, v12.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr6, #0x40]\n"
                            ".inst 0x4faee23f // sdot v31.4s, v17.16b, v14.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr7, #0x40]\n"
                            ".inst 0x4f80ea58 // sdot v24.4s, v18.16b, v0.4b[2]\n"
                            ".inst 0x4f82ea59 // sdot v25.4s, v18.16b, v2.4b[2]\n"
                            ".inst 0x4f84ea5a // sdot v26.4s, v18.16b, v4.4b[2]\n"
                            ".inst 0x4f86ea5b // sdot v27.4s, v18.16b, v6.4b[2]\n"
                            ".inst 0x4f88ea5c // sdot v28.4s, v18.16b, v8.4b[2]\n"
                            ".inst 0x4f8aea5d // sdot v29.4s, v18.16b, v10.4b[2]\n"
                            ".inst 0x4f8cea5e // sdot v30.4s, v18.16b, v12.4b[2]\n"
                            ".inst 0x4f8eea5f // sdot v31.4s, v18.16b, v14.4b[2]\n"
                            ".inst 0x4fa0ea78 // sdot v24.4s, v19.16b, v0.4b[3]\n"
                            ".inst 0x4fa2ea79 // sdot v25.4s, v19.16b, v2.4b[3]\n"
                            ".inst 0x4fa4ea7a // sdot v26.4s, v19.16b, v4.4b[3]\n"
                            ".inst 0x4fa6ea7b // sdot v27.4s, v19.16b, v6.4b[3]\n"
                            ".inst 0x4fa8ea7c // sdot v28.4s, v19.16b, v8.4b[3]\n"
                            ".inst 0x4faaea7d // sdot v29.4s, v19.16b, v10.4b[3]\n"
                            ".inst 0x4facea7e // sdot v30.4s, v19.16b, v12.4b[3]\n"
                            ".inst 0x4faeea7f // sdot v31.4s, v19.16b, v14.4b[3]\n"
                            ".inst 0x4f81e298 // sdot v24.4s, v20.16b, v1.4b[0]\n"
                            ".inst 0x4f83e299 // sdot v25.4s, v20.16b, v3.4b[0]\n"
                            ".inst 0x4f85e29a // sdot v26.4s, v20.16b, v5.4b[0]\n"
                            ".inst 0x4f87e29b // sdot v27.4s, v20.16b, v7.4b[0]\n"
                            ".inst 0x4f89e29c // sdot v28.4s, v20.16b, v9.4b[0]\n"
                            ".inst 0x4f8be29d // sdot v29.4s, v20.16b, v11.4b[0]\n"
                            ".inst 0x4f8de29e // sdot v30.4s, v20.16b, v13.4b[0]\n"
                            ".inst 0x4f8fe29f // sdot v31.4s, v20.16b, v15.4b[0]\n"
                            ".inst 0x4fa1e2b8 // sdot v24.4s, v21.16b, v1.4b[1]\n"
                            ".inst 0x4fa3e2b9 // sdot v25.4s, v21.16b, v3.4b[1]\n"
                            ".inst 0x4fa5e2ba // sdot v26.4s, v21.16b, v5.4b[1]\n"
                            ".inst 0x4fa7e2bb // sdot v27.4s, v21.16b, v7.4b[1]\n"
                            ".inst 0x4fa9e2bc // sdot v28.4s, v21.16b, v9.4b[1]\n"
                            ".inst 0x4fabe2bd // sdot v29.4s, v21.16b, v11.4b[1]\n"
                            ".inst 0x4fade2be // sdot v30.4s, v21.16b, v13.4b[1]\n"
                            ".inst 0x4fafe2bf // sdot v31.4s, v21.16b, v15.4b[1]\n"
                            "b.ne 8b\n"
                            "7:\n"
                            "str q24, [%[c_ptr0]]\n"
                            "add %[c_ptr0], %[c_ptr0], #0x10\n"
                            "movi v24.4s, #0\n"
                            "ldr q16, [%[b_ptr0]]\n"
                            "ldr q17, [%[b_ptr0], #0x10]\n"
                            "str q25, [c_ptr1]\n"
                            "add c_ptr1, c_ptr1, #0x10\n"
                            "movi v25.4s, #0\n"
                            "ldr q18, [%[b_ptr0], #0x20]\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            "str q26, [c_ptr2]\n"
                            "movi v26.4s, #0\n"
                            "ldr q19, [%[b_ptr0], #0x30]\n"
                            "ldr q20, [%[b_ptr0], #0x40]\n"
                            "add c_ptr2, c_ptr2, #0x10\n"
                            ".inst 0x4f82e219 // sdot v25.4s, v16.16b, v2.4b[0]\n"
                            "str q27, [c_ptr3]\n"
                            "movi v27.4s, #0\n"
                            "ldr q21, [%[b_ptr0], #0x50]\n"
                            ".inst 0x4f84e21a // sdot v26.4s, v16.16b, v4.4b[0]\n"
                            "add c_ptr3, c_ptr3, #0x10\n"
                            ".inst 0x4fa0e238 // sdot v24.4s, v17.16b, v0.4b[1]\n"
                            "str q28, [c_ptr4]\n"
                            "movi v28.4s, #0\n"
                            "add c_ptr4, c_ptr4, #0x10\n"
                            ".inst 0x4f86e21b // sdot v27.4s, v16.16b, v6.4b[0]\n"
                            "str q29, [c_ptr5]\n"
                            "movi v29.4s, #0\n"
                            "add c_ptr5, c_ptr5, #0x10\n"
                            ".inst 0x4f88e21c // sdot v28.4s, v16.16b, v8.4b[0]\n"
                            "str q30, [c_ptr6]\n"
                            "movi v30.4s, #0\n"
                            "add c_ptr6, c_ptr6, #0x10\n"
                            ".inst 0x4f8ae21d // sdot v29.4s, v16.16b, v10.4b[0]\n"
                            "str q31, [c_ptr7]\n"
                            "movi v31.4s, #0\n"
                            "add c_ptr7, c_ptr7, #0x10\n"
                            ".inst 0x4f8ce21e // sdot v30.4s, v16.16b, v12.4b[0]\n"
                            "add %[b_ptr0], %[b_ptr0], #0x60\n"
                            ".inst 0x4f8ee21f // sdot v31.4s, v16.16b, v14.4b[0]\n"
                            ".inst 0x4fa2e239 // sdot v25.4s, v17.16b, v2.4b[1]\n"
                            ".inst 0x4fa4e23a // sdot v26.4s, v17.16b, v4.4b[1]\n"
                            ".inst 0x4fa6e23b // sdot v27.4s, v17.16b, v6.4b[1]\n"
                            ".inst 0x4fa8e23c // sdot v28.4s, v17.16b, v8.4b[1]\n"
                            ".inst 0x4faae23d // sdot v29.4s, v17.16b, v10.4b[1]\n"
                            ".inst 0x4face23e // sdot v30.4s, v17.16b, v12.4b[1]\n"
                            ".inst 0x4faee23f // sdot v31.4s, v17.16b, v14.4b[1]\n"
                            ".inst 0x4f80ea58 // sdot v24.4s, v18.16b, v0.4b[2]\n"
                            ".inst 0x4f82ea59 // sdot v25.4s, v18.16b, v2.4b[2]\n"
                            ".inst 0x4f84ea5a // sdot v26.4s, v18.16b, v4.4b[2]\n"
                            ".inst 0x4f86ea5b // sdot v27.4s, v18.16b, v6.4b[2]\n"
                            ".inst 0x4f88ea5c // sdot v28.4s, v18.16b, v8.4b[2]\n"
                            ".inst 0x4f8aea5d // sdot v29.4s, v18.16b, v10.4b[2]\n"
                            ".inst 0x4f8cea5e // sdot v30.4s, v18.16b, v12.4b[2]\n"
                            ".inst 0x4f8eea5f // sdot v31.4s, v18.16b, v14.4b[2]\n"
                            ".inst 0x4fa0ea78 // sdot v24.4s, v19.16b, v0.4b[3]\n"
                            ".inst 0x4fa2ea79 // sdot v25.4s, v19.16b, v2.4b[3]\n"
                            ".inst 0x4fa4ea7a // sdot v26.4s, v19.16b, v4.4b[3]\n"
                            ".inst 0x4fa6ea7b // sdot v27.4s, v19.16b, v6.4b[3]\n"
                            ".inst 0x4fa8ea7c // sdot v28.4s, v19.16b, v8.4b[3]\n"
                            ".inst 0x4faaea7d // sdot v29.4s, v19.16b, v10.4b[3]\n"
                            ".inst 0x4facea7e // sdot v30.4s, v19.16b, v12.4b[3]\n"
                            ".inst 0x4faeea7f // sdot v31.4s, v19.16b, v14.4b[3]\n"
                            ".inst 0x4f81e298 // sdot v24.4s, v20.16b, v1.4b[0]\n"
                            ".inst 0x4f83e299 // sdot v25.4s, v20.16b, v3.4b[0]\n"
                            ".inst 0x4f85e29a // sdot v26.4s, v20.16b, v5.4b[0]\n"
                            ".inst 0x4f87e29b // sdot v27.4s, v20.16b, v7.4b[0]\n"
                            ".inst 0x4f89e29c // sdot v28.4s, v20.16b, v9.4b[0]\n"
                            ".inst 0x4f8be29d // sdot v29.4s, v20.16b, v11.4b[0]\n"
                            ".inst 0x4f8de29e // sdot v30.4s, v20.16b, v13.4b[0]\n"
                            ".inst 0x4f8fe29f // sdot v31.4s, v20.16b, v15.4b[0]\n"
                            ".inst 0x4fa1e2b8 // sdot v24.4s, v21.16b, v1.4b[1]\n"
                            ".inst 0x4fa3e2b9 // sdot v25.4s, v21.16b, v3.4b[1]\n"
                            ".inst 0x4fa5e2ba // sdot v26.4s, v21.16b, v5.4b[1]\n"
                            ".inst 0x4fa7e2bb // sdot v27.4s, v21.16b, v7.4b[1]\n"
                            ".inst 0x4fa9e2bc // sdot v28.4s, v21.16b, v9.4b[1]\n"
                            ".inst 0x4fabe2bd // sdot v29.4s, v21.16b, v11.4b[1]\n"
                            ".inst 0x4fade2be // sdot v30.4s, v21.16b, v13.4b[1]\n"
                            ".inst 0x4fafe2bf // sdot v31.4s, v21.16b, v15.4b[1]\n"
                            "b 9f\n"
                            "6:\n"
                            "movi v24.4s, #0\n"
                            "movi v25.4s, #0\n"
                            "movi v26.4s, #0\n"
                            "movi v27.4s, #0\n"
                            "movi v28.4s, #0\n"
                            "movi v29.4s, #0\n"
                            "movi v30.4s, #0\n"
                            "movi v31.4s, #0\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            ".inst 0x4f82e219 // sdot v25.4s, v16.16b, v2.4b[0]\n"
                            ".inst 0x4f84e21a // sdot v26.4s, v16.16b, v4.4b[0]\n"
                            ".inst 0x4f86e21b // sdot v27.4s, v16.16b, v6.4b[0]\n"
                            ".inst 0x4f88e21c // sdot v28.4s, v16.16b, v8.4b[0]\n"
                            ".inst 0x4f8ae21d // sdot v29.4s, v16.16b, v10.4b[0]\n"
                            ".inst 0x4f8ce21e // sdot v30.4s, v16.16b, v12.4b[0]\n"
                            ".inst 0x4f8ee21f // sdot v31.4s, v16.16b, v14.4b[0]\n"
                            ".inst 0x4fa0e238 // sdot v24.4s, v17.16b, v0.4b[1]\n"
                            ".inst 0x4fa2e239 // sdot v25.4s, v17.16b, v2.4b[1]\n"
                            ".inst 0x4fa4e23a // sdot v26.4s, v17.16b, v4.4b[1]\n"
                            ".inst 0x4fa6e23b // sdot v27.4s, v17.16b, v6.4b[1]\n"
                            ".inst 0x4fa8e23c // sdot v28.4s, v17.16b, v8.4b[1]\n"
                            ".inst 0x4faae23d // sdot v29.4s, v17.16b, v10.4b[1]\n"
                            ".inst 0x4face23e // sdot v30.4s, v17.16b, v12.4b[1]\n"
                            ".inst 0x4faee23f // sdot v31.4s, v17.16b, v14.4b[1]\n"
                            ".inst 0x4f80ea58 // sdot v24.4s, v18.16b, v0.4b[2]\n"
                            ".inst 0x4f82ea59 // sdot v25.4s, v18.16b, v2.4b[2]\n"
                            ".inst 0x4f84ea5a // sdot v26.4s, v18.16b, v4.4b[2]\n"
                            ".inst 0x4f86ea5b // sdot v27.4s, v18.16b, v6.4b[2]\n"
                            ".inst 0x4f88ea5c // sdot v28.4s, v18.16b, v8.4b[2]\n"
                            ".inst 0x4f8aea5d // sdot v29.4s, v18.16b, v10.4b[2]\n"
                            ".inst 0x4f8cea5e // sdot v30.4s, v18.16b, v12.4b[2]\n"
                            ".inst 0x4f8eea5f // sdot v31.4s, v18.16b, v14.4b[2]\n"
                            ".inst 0x4fa0ea78 // sdot v24.4s, v19.16b, v0.4b[3]\n"
                            ".inst 0x4fa2ea79 // sdot v25.4s, v19.16b, v2.4b[3]\n"
                            ".inst 0x4fa4ea7a // sdot v26.4s, v19.16b, v4.4b[3]\n"
                            ".inst 0x4fa6ea7b // sdot v27.4s, v19.16b, v6.4b[3]\n"
                            ".inst 0x4fa8ea7c // sdot v28.4s, v19.16b, v8.4b[3]\n"
                            ".inst 0x4faaea7d // sdot v29.4s, v19.16b, v10.4b[3]\n"
                            ".inst 0x4facea7e // sdot v30.4s, v19.16b, v12.4b[3]\n"
                            ".inst 0x4faeea7f // sdot v31.4s, v19.16b, v14.4b[3]\n"
                            ".inst 0x4f81e298 // sdot v24.4s, v20.16b, v1.4b[0]\n"
                            ".inst 0x4f83e299 // sdot v25.4s, v20.16b, v3.4b[0]\n"
                            ".inst 0x4f85e29a // sdot v26.4s, v20.16b, v5.4b[0]\n"
                            ".inst 0x4f87e29b // sdot v27.4s, v20.16b, v7.4b[0]\n"
                            ".inst 0x4f89e29c // sdot v28.4s, v20.16b, v9.4b[0]\n"
                            ".inst 0x4f8be29d // sdot v29.4s, v20.16b, v11.4b[0]\n"
                            ".inst 0x4f8de29e // sdot v30.4s, v20.16b, v13.4b[0]\n"
                            ".inst 0x4f8fe29f // sdot v31.4s, v20.16b, v15.4b[0]\n"
                            ".inst 0x4fa1e2b8 // sdot v24.4s, v21.16b, v1.4b[1]\n"
                            ".inst 0x4fa3e2b9 // sdot v25.4s, v21.16b, v3.4b[1]\n"
                            ".inst 0x4fa5e2ba // sdot v26.4s, v21.16b, v5.4b[1]\n"
                            ".inst 0x4fa7e2bb // sdot v27.4s, v21.16b, v7.4b[1]\n"
                            ".inst 0x4fa9e2bc // sdot v28.4s, v21.16b, v9.4b[1]\n"
                            ".inst 0x4fabe2bd // sdot v29.4s, v21.16b, v11.4b[1]\n"
                            ".inst 0x4fade2be // sdot v30.4s, v21.16b, v13.4b[1]\n"
                            ".inst 0x4fafe2bf // sdot v31.4s, v21.16b, v15.4b[1]\n"
                            "9:\n"
                            "str q24, [%[c_ptr0]]\n"
                            "add %[c_ptr0], %[c_ptr0], #0x10\n"
                            "str q25, [c_ptr1]\n"
                            "str q26, [c_ptr2]\n"
                            "str q27, [c_ptr3]\n"
                            "str q28, [c_ptr4]\n"
                            "str q29, [c_ptr5]\n"
                            "str q30, [c_ptr6]\n"
                            "str q31, [c_ptr7]\n"
                            ".unreq a_ptr1\n"
                            ".unreq a_ptr2\n"
                            ".unreq a_ptr3\n"
                            ".unreq a_ptr4\n"
                            ".unreq a_ptr5\n"
                            ".unreq a_ptr6\n"
                            ".unreq a_ptr7\n"
                            ".unreq c_ptr1\n"
                            ".unreq c_ptr2\n"
                            ".unreq c_ptr3\n"
                            ".unreq c_ptr4\n"
                            ".unreq c_ptr5\n"
                            ".unreq c_ptr6\n"
                            ".unreq c_ptr7\n"
                            : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (
                                loops),
                            [oob_rows] "+r" (oob_rows), [odds] "+r" (odds)
                            : [lda] "r" (ldab), [ldc] "r" (ldcb)
                            : "x0", "x1", "x2", "x3", "x4", "x5", "x6", "x7", "x8", "x9", "x10", "x11", "x12", "x13",
                            "v0",
                            "v1", "v2", "v3", "v4", "v5", "v6", "v7", "v8", "v9", "v10", "v11", "v12", "v13", "v14",
                            "v15",
                            "v16", "v17", "v18", "v19", "v20", "v21", "v22", "v23", "v24", "v25", "v26", "v27", "v28",
                            "v29"
                            , "v30", "v31", "cc", "memory"
                        );
                        break;
                    case 7:
                        __asm __volatile (
                            "a_ptr1 .req X0\n"
                            "a_ptr2 .req X1\n"
                            "a_ptr3 .req X2\n"
                            "a_ptr4 .req X3\n"
                            "a_ptr5 .req X4\n"
                            "a_ptr6 .req X5\n"
                            "a_ptr7 .req X6\n"
                            "c_ptr1 .req X7\n"
                            "c_ptr2 .req X8\n"
                            "c_ptr3 .req X9\n"
                            "c_ptr4 .req X10\n"
                            "c_ptr5 .req X11\n"
                            "c_ptr6 .req X12\n"
                            "c_ptr7 .req X13\n"
                            "add a_ptr1, %[a_ptr0], %[lda]\n"
                            "add c_ptr1, %[c_ptr0], %[ldc]\n"
                            "add a_ptr2, a_ptr1, %[lda]\n"
                            "add c_ptr2, c_ptr1, %[ldc]\n"
                            "add a_ptr3, a_ptr2, %[lda]\n"
                            "add c_ptr3, c_ptr2, %[ldc]\n"
                            "add a_ptr4, a_ptr3, %[lda]\n"
                            "add c_ptr4, c_ptr3, %[ldc]\n"
                            "add a_ptr5, a_ptr4, %[lda]\n"
                            "add c_ptr5, c_ptr4, %[ldc]\n"
                            "add a_ptr6, a_ptr5, %[lda]\n"
                            "add c_ptr6, c_ptr5, %[ldc]\n"
                            "add a_ptr7, a_ptr6, %[lda]\n"
                            "add c_ptr7, c_ptr6, %[ldc]\n"
                            "cbz %[oob_rows], 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr7, %[c_ptr0], #0x0\n"
                            "add a_ptr7, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr6, %[c_ptr0], #0x0\n"
                            "add a_ptr6, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr5, %[c_ptr0], #0x0\n"
                            "add a_ptr5, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr4, %[c_ptr0], #0x0\n"
                            "add a_ptr4, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr3, %[c_ptr0], #0x0\n"
                            "add a_ptr3, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr2, %[c_ptr0], #0x0\n"
                            "add a_ptr2, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr1, %[c_ptr0], #0x0\n"
                            "add a_ptr1, %[a_ptr0], #0x0\n"
                            "1:\n"
                            "ldr q0, [%[a_ptr0]], #0x10\n"
                            "ldr q2, [a_ptr1], #0x10\n"
                            "ldr q4, [a_ptr2], #0x10\n"
                            "ldr q6, [a_ptr3], #0x10\n"
                            "ldr d1, [%[a_ptr0]], #0x8\n"
                            "ldr q8, [a_ptr4], #0x10\n"
                            "ldr d3, [a_ptr1], #0x8\n"
                            "ldr q10, [a_ptr5], #0x10\n"
                            "ldr d5, [a_ptr2], #0x8\n"
                            "ldr q12, [a_ptr6], #0x10\n"
                            "ldr d7, [a_ptr3], #0x8\n"
                            "ldr q14, [a_ptr7], #0x10\n"
                            "ldr d9, [a_ptr4], #0x8\n"
                            "ldr d11, [a_ptr5], #0x8\n"
                            "ldr d13, [a_ptr6], #0x8\n"
                            "ldr d15, [a_ptr7], #0x8\n"
                            "cbnz %[odds], 2f\n"
                            "ld1 {v1.s}[2], [%[a_ptr0]]\n"
                            "ld1 {v3.s}[2], [a_ptr1]\n"
                            "ld1 {v5.s}[2], [a_ptr2]\n"
                            "ld1 {v7.s}[2], [a_ptr3]\n"
                            "ld1 {v9.s}[2], [a_ptr4]\n"
                            "ld1 {v11.s}[2], [a_ptr5]\n"
                            "ld1 {v13.s}[2], [a_ptr6]\n"
                            "ld1 {v15.s}[2], [a_ptr7]\n"
                            "b 3f\n"
                            "2:\n"
                            "subs %[odds], %[odds], #0x1\n"
                            "b.ne 4f\n"
                            "ld1 {v1.b}[8], [%[a_ptr0]]\n"
                            "ld1 {v3.b}[8], [a_ptr1]\n"
                            "ld1 {v5.b}[8], [a_ptr2]\n"
                            "ld1 {v7.b}[8], [a_ptr3]\n"
                            "ld1 {v9.b}[8], [a_ptr4]\n"
                            "ld1 {v11.b}[8], [a_ptr5]\n"
                            "ld1 {v13.b}[8], [a_ptr6]\n"
                            "ld1 {v15.b}[8], [a_ptr7]\n"
                            "b 3f\n"
                            "4:\n"
                            "ld1 {v1.h}[4], [%[a_ptr0]], #2\n"
                            "ld1 {v3.h}[4], [a_ptr1], #2\n"
                            "ld1 {v5.h}[4], [a_ptr2], #2\n"
                            "ld1 {v7.h}[4], [a_ptr3], #2\n"
                            "ld1 {v9.h}[4], [a_ptr4], #2\n"
                            "ld1 {v11.h}[4], [a_ptr5], #2\n"
                            "ld1 {v13.h}[4], [a_ptr6], #2\n"
                            "ld1 {v15.h}[4], [a_ptr7], #2\n"
                            "subs %[odds], %[odds], #0x1\n"
                            "b.ne 5f\n"
                            "b 3f\n"
                            "5:\n"
                            "ld1 {v1.b}[10], [%[a_ptr0]]\n"
                            "ld1 {v3.b}[10], [a_ptr1]\n"
                            "ld1 {v5.b}[10], [a_ptr2]\n"
                            "ld1 {v7.b}[10], [a_ptr3]\n"
                            "ld1 {v9.b}[10], [a_ptr4]\n"
                            "ld1 {v11.b}[10], [a_ptr5]\n"
                            "ld1 {v13.b}[10], [a_ptr6]\n"
                            "ld1 {v15.b}[10], [a_ptr7]\n"
                            "3:\n"
                            "ldr q16, [%[b_ptr0]]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x40]\n"
                            "ldr q17, [%[b_ptr0], #0x10]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x80]\n"
                            "ldr q18, [%[b_ptr0], #0x20]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0xc0]\n"
                            "ldr q19, [%[b_ptr0], #0x30]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x100]\n"
                            "ldr q20, [%[b_ptr0], #0x40]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x140]\n"
                            "ldr q21, [%[b_ptr0], #0x50]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x180]\n"
                            "ldr q22, [%[b_ptr0], #0x60]\n"
                            "add %[b_ptr0], %[b_ptr0], #0x70\n"
                            "cbz %[loops], 6f\n"
                            "movi v24.4s, #0\n"
                            "subs %[loops], %[loops], #0x1\n"
                            "movi v25.4s, #0\n"
                            "movi v26.4s, #0\n"
                            "movi v27.4s, #0\n"
                            "movi v28.4s, #0\n"
                            "movi v29.4s, #0\n"
                            "movi v30.4s, #0\n"
                            "movi v31.4s, #0\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            ".inst 0x4f82e219 // sdot v25.4s, v16.16b, v2.4b[0]\n"
                            ".inst 0x4f84e21a // sdot v26.4s, v16.16b, v4.4b[0]\n"
                            ".inst 0x4f86e21b // sdot v27.4s, v16.16b, v6.4b[0]\n"
                            ".inst 0x4f88e21c // sdot v28.4s, v16.16b, v8.4b[0]\n"
                            ".inst 0x4f8ae21d // sdot v29.4s, v16.16b, v10.4b[0]\n"
                            ".inst 0x4f8ce21e // sdot v30.4s, v16.16b, v12.4b[0]\n"
                            ".inst 0x4f8ee21f // sdot v31.4s, v16.16b, v14.4b[0]\n"
                            ".inst 0x4fa0e238 // sdot v24.4s, v17.16b, v0.4b[1]\n"
                            ".inst 0x4fa2e239 // sdot v25.4s, v17.16b, v2.4b[1]\n"
                            ".inst 0x4fa4e23a // sdot v26.4s, v17.16b, v4.4b[1]\n"
                            ".inst 0x4fa6e23b // sdot v27.4s, v17.16b, v6.4b[1]\n"
                            ".inst 0x4fa8e23c // sdot v28.4s, v17.16b, v8.4b[1]\n"
                            ".inst 0x4faae23d // sdot v29.4s, v17.16b, v10.4b[1]\n"
                            ".inst 0x4face23e // sdot v30.4s, v17.16b, v12.4b[1]\n"
                            ".inst 0x4faee23f // sdot v31.4s, v17.16b, v14.4b[1]\n"
                            ".inst 0x4f80ea58 // sdot v24.4s, v18.16b, v0.4b[2]\n"
                            ".inst 0x4f82ea59 // sdot v25.4s, v18.16b, v2.4b[2]\n"
                            ".inst 0x4f84ea5a // sdot v26.4s, v18.16b, v4.4b[2]\n"
                            ".inst 0x4f86ea5b // sdot v27.4s, v18.16b, v6.4b[2]\n"
                            ".inst 0x4f88ea5c // sdot v28.4s, v18.16b, v8.4b[2]\n"
                            ".inst 0x4f8aea5d // sdot v29.4s, v18.16b, v10.4b[2]\n"
                            ".inst 0x4f8cea5e // sdot v30.4s, v18.16b, v12.4b[2]\n"
                            ".inst 0x4f8eea5f // sdot v31.4s, v18.16b, v14.4b[2]\n"
                            ".inst 0x4fa0ea78 // sdot v24.4s, v19.16b, v0.4b[3]\n"
                            ".inst 0x4fa2ea79 // sdot v25.4s, v19.16b, v2.4b[3]\n"
                            ".inst 0x4fa4ea7a // sdot v26.4s, v19.16b, v4.4b[3]\n"
                            ".inst 0x4fa6ea7b // sdot v27.4s, v19.16b, v6.4b[3]\n"
                            ".inst 0x4fa8ea7c // sdot v28.4s, v19.16b, v8.4b[3]\n"
                            ".inst 0x4faaea7d // sdot v29.4s, v19.16b, v10.4b[3]\n"
                            ".inst 0x4facea7e // sdot v30.4s, v19.16b, v12.4b[3]\n"
                            ".inst 0x4faeea7f // sdot v31.4s, v19.16b, v14.4b[3]\n"
                            ".inst 0x4f81e298 // sdot v24.4s, v20.16b, v1.4b[0]\n"
                            ".inst 0x4f83e299 // sdot v25.4s, v20.16b, v3.4b[0]\n"
                            ".inst 0x4f85e29a // sdot v26.4s, v20.16b, v5.4b[0]\n"
                            ".inst 0x4f87e29b // sdot v27.4s, v20.16b, v7.4b[0]\n"
                            ".inst 0x4f89e29c // sdot v28.4s, v20.16b, v9.4b[0]\n"
                            ".inst 0x4f8be29d // sdot v29.4s, v20.16b, v11.4b[0]\n"
                            ".inst 0x4f8de29e // sdot v30.4s, v20.16b, v13.4b[0]\n"
                            ".inst 0x4f8fe29f // sdot v31.4s, v20.16b, v15.4b[0]\n"
                            ".inst 0x4fa1e2b8 // sdot v24.4s, v21.16b, v1.4b[1]\n"
                            ".inst 0x4fa3e2b9 // sdot v25.4s, v21.16b, v3.4b[1]\n"
                            ".inst 0x4fa5e2ba // sdot v26.4s, v21.16b, v5.4b[1]\n"
                            ".inst 0x4fa7e2bb // sdot v27.4s, v21.16b, v7.4b[1]\n"
                            ".inst 0x4fa9e2bc // sdot v28.4s, v21.16b, v9.4b[1]\n"
                            ".inst 0x4fabe2bd // sdot v29.4s, v21.16b, v11.4b[1]\n"
                            ".inst 0x4fade2be // sdot v30.4s, v21.16b, v13.4b[1]\n"
                            ".inst 0x4fafe2bf // sdot v31.4s, v21.16b, v15.4b[1]\n"
                            ".inst 0x4f81ead8 // sdot v24.4s, v22.16b, v1.4b[2]\n"
                            ".inst 0x4f83ead9 // sdot v25.4s, v22.16b, v3.4b[2]\n"
                            ".inst 0x4f85eada // sdot v26.4s, v22.16b, v5.4b[2]\n"
                            ".inst 0x4f87eadb // sdot v27.4s, v22.16b, v7.4b[2]\n"
                            ".inst 0x4f89eadc // sdot v28.4s, v22.16b, v9.4b[2]\n"
                            ".inst 0x4f8beadd // sdot v29.4s, v22.16b, v11.4b[2]\n"
                            ".inst 0x4f8deade // sdot v30.4s, v22.16b, v13.4b[2]\n"
                            ".inst 0x4f8feadf // sdot v31.4s, v22.16b, v15.4b[2]\n"
                            "b.eq 7f\n"
                            "8:\n"
                            "str q24, [%[c_ptr0]]\n"
                            "subs %[loops], %[loops], #0x1\n"
                            "movi v24.4s, #0\n"
                            "ldr q16, [%[b_ptr0]]\n"
                            "ldr q17, [%[b_ptr0], #0x10]\n"
                            "add %[c_ptr0], %[c_ptr0], #0x10\n"
                            "str q25, [c_ptr1]\n"
                            "add c_ptr1, c_ptr1, #0x10\n"
                            "movi v25.4s, #0\n"
                            "ldr q18, [%[b_ptr0], #0x20]\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            "str q26, [c_ptr2]\n"
                            "movi v26.4s, #0\n"
                            "ldr q19, [%[b_ptr0], #0x30]\n"
                            "ldr q20, [%[b_ptr0], #0x40]\n"
                            "add c_ptr2, c_ptr2, #0x10\n"
                            ".inst 0x4f82e219 // sdot v25.4s, v16.16b, v2.4b[0]\n"
                            "str q27, [c_ptr3]\n"
                            "movi v27.4s, #0\n"
                            "ldr q21, [%[b_ptr0], #0x50]\n"
                            ".inst 0x4f84e21a // sdot v26.4s, v16.16b, v4.4b[0]\n"
                            "ldr q22, [%[b_ptr0], #0x60]\n"
                            ".inst 0x4fa0e238 // sdot v24.4s, v17.16b, v0.4b[1]\n"
                            "str q28, [c_ptr4]\n"
                            "movi v28.4s, #0\n"
                            "add c_ptr3, c_ptr3, #0x10\n"
                            ".inst 0x4f86e21b // sdot v27.4s, v16.16b, v6.4b[0]\n"
                            "str q29, [c_ptr5]\n"
                            "movi v29.4s, #0\n"
                            "add c_ptr4, c_ptr4, #0x10\n"
                            ".inst 0x4f88e21c // sdot v28.4s, v16.16b, v8.4b[0]\n"
                            "str q30, [c_ptr6]\n"
                            "movi v30.4s, #0\n"
                            "add c_ptr5, c_ptr5, #0x10\n"
                            ".inst 0x4f8ae21d // sdot v29.4s, v16.16b, v10.4b[0]\n"
                            "str q31, [c_ptr7]\n"
                            "movi v31.4s, #0\n"
                            "add c_ptr6, c_ptr6, #0x10\n"
                            ".inst 0x4f8ce21e // sdot v30.4s, v16.16b, v12.4b[0]\n"
                            "add c_ptr7, c_ptr7, #0x10\n"
                            ".inst 0x4f8ee21f // sdot v31.4s, v16.16b, v14.4b[0]\n"
                            "add %[b_ptr0], %[b_ptr0], #0x70\n"
                            ".inst 0x4fa2e239 // sdot v25.4s, v17.16b, v2.4b[1]\n"
                            "prfm PSTL1KEEP, [%[c_ptr0], #0x40]\n"
                            ".inst 0x4fa4e23a // sdot v26.4s, v17.16b, v4.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr1, #0x40]\n"
                            ".inst 0x4fa6e23b // sdot v27.4s, v17.16b, v6.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr2, #0x40]\n"
                            ".inst 0x4fa8e23c // sdot v28.4s, v17.16b, v8.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr3, #0x40]\n"
                            ".inst 0x4faae23d // sdot v29.4s, v17.16b, v10.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr4, #0x40]\n"
                            ".inst 0x4face23e // sdot v30.4s, v17.16b, v12.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr5, #0x40]\n"
                            ".inst 0x4faee23f // sdot v31.4s, v17.16b, v14.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr6, #0x40]\n"
                            ".inst 0x4f80ea58 // sdot v24.4s, v18.16b, v0.4b[2]\n"
                            "prfm PSTL1KEEP, [c_ptr7, #0x40]\n"
                            ".inst 0x4f82ea59 // sdot v25.4s, v18.16b, v2.4b[2]\n"
                            ".inst 0x4f84ea5a // sdot v26.4s, v18.16b, v4.4b[2]\n"
                            ".inst 0x4f86ea5b // sdot v27.4s, v18.16b, v6.4b[2]\n"
                            ".inst 0x4f88ea5c // sdot v28.4s, v18.16b, v8.4b[2]\n"
                            ".inst 0x4f8aea5d // sdot v29.4s, v18.16b, v10.4b[2]\n"
                            ".inst 0x4f8cea5e // sdot v30.4s, v18.16b, v12.4b[2]\n"
                            ".inst 0x4f8eea5f // sdot v31.4s, v18.16b, v14.4b[2]\n"
                            ".inst 0x4fa0ea78 // sdot v24.4s, v19.16b, v0.4b[3]\n"
                            ".inst 0x4fa2ea79 // sdot v25.4s, v19.16b, v2.4b[3]\n"
                            ".inst 0x4fa4ea7a // sdot v26.4s, v19.16b, v4.4b[3]\n"
                            ".inst 0x4fa6ea7b // sdot v27.4s, v19.16b, v6.4b[3]\n"
                            ".inst 0x4fa8ea7c // sdot v28.4s, v19.16b, v8.4b[3]\n"
                            ".inst 0x4faaea7d // sdot v29.4s, v19.16b, v10.4b[3]\n"
                            ".inst 0x4facea7e // sdot v30.4s, v19.16b, v12.4b[3]\n"
                            ".inst 0x4faeea7f // sdot v31.4s, v19.16b, v14.4b[3]\n"
                            ".inst 0x4f81e298 // sdot v24.4s, v20.16b, v1.4b[0]\n"
                            ".inst 0x4f83e299 // sdot v25.4s, v20.16b, v3.4b[0]\n"
                            ".inst 0x4f85e29a // sdot v26.4s, v20.16b, v5.4b[0]\n"
                            ".inst 0x4f87e29b // sdot v27.4s, v20.16b, v7.4b[0]\n"
                            ".inst 0x4f89e29c // sdot v28.4s, v20.16b, v9.4b[0]\n"
                            ".inst 0x4f8be29d // sdot v29.4s, v20.16b, v11.4b[0]\n"
                            ".inst 0x4f8de29e // sdot v30.4s, v20.16b, v13.4b[0]\n"
                            ".inst 0x4f8fe29f // sdot v31.4s, v20.16b, v15.4b[0]\n"
                            ".inst 0x4fa1e2b8 // sdot v24.4s, v21.16b, v1.4b[1]\n"
                            ".inst 0x4fa3e2b9 // sdot v25.4s, v21.16b, v3.4b[1]\n"
                            ".inst 0x4fa5e2ba // sdot v26.4s, v21.16b, v5.4b[1]\n"
                            ".inst 0x4fa7e2bb // sdot v27.4s, v21.16b, v7.4b[1]\n"
                            ".inst 0x4fa9e2bc // sdot v28.4s, v21.16b, v9.4b[1]\n"
                            ".inst 0x4fabe2bd // sdot v29.4s, v21.16b, v11.4b[1]\n"
                            ".inst 0x4fade2be // sdot v30.4s, v21.16b, v13.4b[1]\n"
                            ".inst 0x4fafe2bf // sdot v31.4s, v21.16b, v15.4b[1]\n"
                            ".inst 0x4f81ead8 // sdot v24.4s, v22.16b, v1.4b[2]\n"
                            ".inst 0x4f83ead9 // sdot v25.4s, v22.16b, v3.4b[2]\n"
                            ".inst 0x4f85eada // sdot v26.4s, v22.16b, v5.4b[2]\n"
                            ".inst 0x4f87eadb // sdot v27.4s, v22.16b, v7.4b[2]\n"
                            ".inst 0x4f89eadc // sdot v28.4s, v22.16b, v9.4b[2]\n"
                            ".inst 0x4f8beadd // sdot v29.4s, v22.16b, v11.4b[2]\n"
                            ".inst 0x4f8deade // sdot v30.4s, v22.16b, v13.4b[2]\n"
                            ".inst 0x4f8feadf // sdot v31.4s, v22.16b, v15.4b[2]\n"
                            "b.ne 8b\n"
                            "7:\n"
                            "str q24, [%[c_ptr0]]\n"
                            "add %[c_ptr0], %[c_ptr0], #0x10\n"
                            "movi v24.4s, #0\n"
                            "ldr q16, [%[b_ptr0]]\n"
                            "ldr q17, [%[b_ptr0], #0x10]\n"
                            "str q25, [c_ptr1]\n"
                            "add c_ptr1, c_ptr1, #0x10\n"
                            "movi v25.4s, #0\n"
                            "ldr q18, [%[b_ptr0], #0x20]\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            "str q26, [c_ptr2]\n"
                            "movi v26.4s, #0\n"
                            "ldr q19, [%[b_ptr0], #0x30]\n"
                            "ldr q20, [%[b_ptr0], #0x40]\n"
                            "add c_ptr2, c_ptr2, #0x10\n"
                            ".inst 0x4f82e219 // sdot v25.4s, v16.16b, v2.4b[0]\n"
                            "str q27, [c_ptr3]\n"
                            "movi v27.4s, #0\n"
                            "ldr q21, [%[b_ptr0], #0x50]\n"
                            ".inst 0x4f84e21a // sdot v26.4s, v16.16b, v4.4b[0]\n"
                            "ldr q22, [%[b_ptr0], #0x60]\n"
                            ".inst 0x4fa0e238 // sdot v24.4s, v17.16b, v0.4b[1]\n"
                            "str q28, [c_ptr4]\n"
                            "movi v28.4s, #0\n"
                            "add c_ptr3, c_ptr3, #0x10\n"
                            ".inst 0x4f86e21b // sdot v27.4s, v16.16b, v6.4b[0]\n"
                            "str q29, [c_ptr5]\n"
                            "movi v29.4s, #0\n"
                            "add c_ptr4, c_ptr4, #0x10\n"
                            ".inst 0x4f88e21c // sdot v28.4s, v16.16b, v8.4b[0]\n"
                            "str q30, [c_ptr6]\n"
                            "movi v30.4s, #0\n"
                            "add c_ptr5, c_ptr5, #0x10\n"
                            ".inst 0x4f8ae21d // sdot v29.4s, v16.16b, v10.4b[0]\n"
                            "str q31, [c_ptr7]\n"
                            "movi v31.4s, #0\n"
                            "add c_ptr6, c_ptr6, #0x10\n"
                            ".inst 0x4f8ce21e // sdot v30.4s, v16.16b, v12.4b[0]\n"
                            "add c_ptr7, c_ptr7, #0x10\n"
                            ".inst 0x4f8ee21f // sdot v31.4s, v16.16b, v14.4b[0]\n"
                            "add %[b_ptr0], %[b_ptr0], #0x70\n"
                            ".inst 0x4fa2e239 // sdot v25.4s, v17.16b, v2.4b[1]\n"
                            ".inst 0x4fa4e23a // sdot v26.4s, v17.16b, v4.4b[1]\n"
                            ".inst 0x4fa6e23b // sdot v27.4s, v17.16b, v6.4b[1]\n"
                            ".inst 0x4fa8e23c // sdot v28.4s, v17.16b, v8.4b[1]\n"
                            ".inst 0x4faae23d // sdot v29.4s, v17.16b, v10.4b[1]\n"
                            ".inst 0x4face23e // sdot v30.4s, v17.16b, v12.4b[1]\n"
                            ".inst 0x4faee23f // sdot v31.4s, v17.16b, v14.4b[1]\n"
                            ".inst 0x4f80ea58 // sdot v24.4s, v18.16b, v0.4b[2]\n"
                            ".inst 0x4f82ea59 // sdot v25.4s, v18.16b, v2.4b[2]\n"
                            ".inst 0x4f84ea5a // sdot v26.4s, v18.16b, v4.4b[2]\n"
                            ".inst 0x4f86ea5b // sdot v27.4s, v18.16b, v6.4b[2]\n"
                            ".inst 0x4f88ea5c // sdot v28.4s, v18.16b, v8.4b[2]\n"
                            ".inst 0x4f8aea5d // sdot v29.4s, v18.16b, v10.4b[2]\n"
                            ".inst 0x4f8cea5e // sdot v30.4s, v18.16b, v12.4b[2]\n"
                            ".inst 0x4f8eea5f // sdot v31.4s, v18.16b, v14.4b[2]\n"
                            ".inst 0x4fa0ea78 // sdot v24.4s, v19.16b, v0.4b[3]\n"
                            ".inst 0x4fa2ea79 // sdot v25.4s, v19.16b, v2.4b[3]\n"
                            ".inst 0x4fa4ea7a // sdot v26.4s, v19.16b, v4.4b[3]\n"
                            ".inst 0x4fa6ea7b // sdot v27.4s, v19.16b, v6.4b[3]\n"
                            ".inst 0x4fa8ea7c // sdot v28.4s, v19.16b, v8.4b[3]\n"
                            ".inst 0x4faaea7d // sdot v29.4s, v19.16b, v10.4b[3]\n"
                            ".inst 0x4facea7e // sdot v30.4s, v19.16b, v12.4b[3]\n"
                            ".inst 0x4faeea7f // sdot v31.4s, v19.16b, v14.4b[3]\n"
                            ".inst 0x4f81e298 // sdot v24.4s, v20.16b, v1.4b[0]\n"
                            ".inst 0x4f83e299 // sdot v25.4s, v20.16b, v3.4b[0]\n"
                            ".inst 0x4f85e29a // sdot v26.4s, v20.16b, v5.4b[0]\n"
                            ".inst 0x4f87e29b // sdot v27.4s, v20.16b, v7.4b[0]\n"
                            ".inst 0x4f89e29c // sdot v28.4s, v20.16b, v9.4b[0]\n"
                            ".inst 0x4f8be29d // sdot v29.4s, v20.16b, v11.4b[0]\n"
                            ".inst 0x4f8de29e // sdot v30.4s, v20.16b, v13.4b[0]\n"
                            ".inst 0x4f8fe29f // sdot v31.4s, v20.16b, v15.4b[0]\n"
                            ".inst 0x4fa1e2b8 // sdot v24.4s, v21.16b, v1.4b[1]\n"
                            ".inst 0x4fa3e2b9 // sdot v25.4s, v21.16b, v3.4b[1]\n"
                            ".inst 0x4fa5e2ba // sdot v26.4s, v21.16b, v5.4b[1]\n"
                            ".inst 0x4fa7e2bb // sdot v27.4s, v21.16b, v7.4b[1]\n"
                            ".inst 0x4fa9e2bc // sdot v28.4s, v21.16b, v9.4b[1]\n"
                            ".inst 0x4fabe2bd // sdot v29.4s, v21.16b, v11.4b[1]\n"
                            ".inst 0x4fade2be // sdot v30.4s, v21.16b, v13.4b[1]\n"
                            ".inst 0x4fafe2bf // sdot v31.4s, v21.16b, v15.4b[1]\n"
                            ".inst 0x4f81ead8 // sdot v24.4s, v22.16b, v1.4b[2]\n"
                            ".inst 0x4f83ead9 // sdot v25.4s, v22.16b, v3.4b[2]\n"
                            ".inst 0x4f85eada // sdot v26.4s, v22.16b, v5.4b[2]\n"
                            ".inst 0x4f87eadb // sdot v27.4s, v22.16b, v7.4b[2]\n"
                            ".inst 0x4f89eadc // sdot v28.4s, v22.16b, v9.4b[2]\n"
                            ".inst 0x4f8beadd // sdot v29.4s, v22.16b, v11.4b[2]\n"
                            ".inst 0x4f8deade // sdot v30.4s, v22.16b, v13.4b[2]\n"
                            ".inst 0x4f8feadf // sdot v31.4s, v22.16b, v15.4b[2]\n"
                            "b 9f\n"
                            "6:\n"
                            "movi v24.4s, #0\n"
                            "movi v25.4s, #0\n"
                            "movi v26.4s, #0\n"
                            "movi v27.4s, #0\n"
                            "movi v28.4s, #0\n"
                            "movi v29.4s, #0\n"
                            "movi v30.4s, #0\n"
                            "movi v31.4s, #0\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            ".inst 0x4f82e219 // sdot v25.4s, v16.16b, v2.4b[0]\n"
                            ".inst 0x4f84e21a // sdot v26.4s, v16.16b, v4.4b[0]\n"
                            ".inst 0x4f86e21b // sdot v27.4s, v16.16b, v6.4b[0]\n"
                            ".inst 0x4f88e21c // sdot v28.4s, v16.16b, v8.4b[0]\n"
                            ".inst 0x4f8ae21d // sdot v29.4s, v16.16b, v10.4b[0]\n"
                            ".inst 0x4f8ce21e // sdot v30.4s, v16.16b, v12.4b[0]\n"
                            ".inst 0x4f8ee21f // sdot v31.4s, v16.16b, v14.4b[0]\n"
                            ".inst 0x4fa0e238 // sdot v24.4s, v17.16b, v0.4b[1]\n"
                            ".inst 0x4fa2e239 // sdot v25.4s, v17.16b, v2.4b[1]\n"
                            ".inst 0x4fa4e23a // sdot v26.4s, v17.16b, v4.4b[1]\n"
                            ".inst 0x4fa6e23b // sdot v27.4s, v17.16b, v6.4b[1]\n"
                            ".inst 0x4fa8e23c // sdot v28.4s, v17.16b, v8.4b[1]\n"
                            ".inst 0x4faae23d // sdot v29.4s, v17.16b, v10.4b[1]\n"
                            ".inst 0x4face23e // sdot v30.4s, v17.16b, v12.4b[1]\n"
                            ".inst 0x4faee23f // sdot v31.4s, v17.16b, v14.4b[1]\n"
                            ".inst 0x4f80ea58 // sdot v24.4s, v18.16b, v0.4b[2]\n"
                            ".inst 0x4f82ea59 // sdot v25.4s, v18.16b, v2.4b[2]\n"
                            ".inst 0x4f84ea5a // sdot v26.4s, v18.16b, v4.4b[2]\n"
                            ".inst 0x4f86ea5b // sdot v27.4s, v18.16b, v6.4b[2]\n"
                            ".inst 0x4f88ea5c // sdot v28.4s, v18.16b, v8.4b[2]\n"
                            ".inst 0x4f8aea5d // sdot v29.4s, v18.16b, v10.4b[2]\n"
                            ".inst 0x4f8cea5e // sdot v30.4s, v18.16b, v12.4b[2]\n"
                            ".inst 0x4f8eea5f // sdot v31.4s, v18.16b, v14.4b[2]\n"
                            ".inst 0x4fa0ea78 // sdot v24.4s, v19.16b, v0.4b[3]\n"
                            ".inst 0x4fa2ea79 // sdot v25.4s, v19.16b, v2.4b[3]\n"
                            ".inst 0x4fa4ea7a // sdot v26.4s, v19.16b, v4.4b[3]\n"
                            ".inst 0x4fa6ea7b // sdot v27.4s, v19.16b, v6.4b[3]\n"
                            ".inst 0x4fa8ea7c // sdot v28.4s, v19.16b, v8.4b[3]\n"
                            ".inst 0x4faaea7d // sdot v29.4s, v19.16b, v10.4b[3]\n"
                            ".inst 0x4facea7e // sdot v30.4s, v19.16b, v12.4b[3]\n"
                            ".inst 0x4faeea7f // sdot v31.4s, v19.16b, v14.4b[3]\n"
                            ".inst 0x4f81e298 // sdot v24.4s, v20.16b, v1.4b[0]\n"
                            ".inst 0x4f83e299 // sdot v25.4s, v20.16b, v3.4b[0]\n"
                            ".inst 0x4f85e29a // sdot v26.4s, v20.16b, v5.4b[0]\n"
                            ".inst 0x4f87e29b // sdot v27.4s, v20.16b, v7.4b[0]\n"
                            ".inst 0x4f89e29c // sdot v28.4s, v20.16b, v9.4b[0]\n"
                            ".inst 0x4f8be29d // sdot v29.4s, v20.16b, v11.4b[0]\n"
                            ".inst 0x4f8de29e // sdot v30.4s, v20.16b, v13.4b[0]\n"
                            ".inst 0x4f8fe29f // sdot v31.4s, v20.16b, v15.4b[0]\n"
                            ".inst 0x4fa1e2b8 // sdot v24.4s, v21.16b, v1.4b[1]\n"
                            ".inst 0x4fa3e2b9 // sdot v25.4s, v21.16b, v3.4b[1]\n"
                            ".inst 0x4fa5e2ba // sdot v26.4s, v21.16b, v5.4b[1]\n"
                            ".inst 0x4fa7e2bb // sdot v27.4s, v21.16b, v7.4b[1]\n"
                            ".inst 0x4fa9e2bc // sdot v28.4s, v21.16b, v9.4b[1]\n"
                            ".inst 0x4fabe2bd // sdot v29.4s, v21.16b, v11.4b[1]\n"
                            ".inst 0x4fade2be // sdot v30.4s, v21.16b, v13.4b[1]\n"
                            ".inst 0x4fafe2bf // sdot v31.4s, v21.16b, v15.4b[1]\n"
                            ".inst 0x4f81ead8 // sdot v24.4s, v22.16b, v1.4b[2]\n"
                            ".inst 0x4f83ead9 // sdot v25.4s, v22.16b, v3.4b[2]\n"
                            ".inst 0x4f85eada // sdot v26.4s, v22.16b, v5.4b[2]\n"
                            ".inst 0x4f87eadb // sdot v27.4s, v22.16b, v7.4b[2]\n"
                            ".inst 0x4f89eadc // sdot v28.4s, v22.16b, v9.4b[2]\n"
                            ".inst 0x4f8beadd // sdot v29.4s, v22.16b, v11.4b[2]\n"
                            ".inst 0x4f8deade // sdot v30.4s, v22.16b, v13.4b[2]\n"
                            ".inst 0x4f8feadf // sdot v31.4s, v22.16b, v15.4b[2]\n"
                            "9:\n"
                            "str q24, [%[c_ptr0]]\n"
                            "add %[c_ptr0], %[c_ptr0], #0x10\n"
                            "str q25, [c_ptr1]\n"
                            "str q26, [c_ptr2]\n"
                            "str q27, [c_ptr3]\n"
                            "str q28, [c_ptr4]\n"
                            "str q29, [c_ptr5]\n"
                            "str q30, [c_ptr6]\n"
                            "str q31, [c_ptr7]\n"
                            ".unreq a_ptr1\n"
                            ".unreq a_ptr2\n"
                            ".unreq a_ptr3\n"
                            ".unreq a_ptr4\n"
                            ".unreq a_ptr5\n"
                            ".unreq a_ptr6\n"
                            ".unreq a_ptr7\n"
                            ".unreq c_ptr1\n"
                            ".unreq c_ptr2\n"
                            ".unreq c_ptr3\n"
                            ".unreq c_ptr4\n"
                            ".unreq c_ptr5\n"
                            ".unreq c_ptr6\n"
                            ".unreq c_ptr7\n"
                            : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (
                                loops),
                            [oob_rows] "+r" (oob_rows), [odds] "+r" (odds)
                            : [lda] "r" (ldab), [ldc] "r" (ldcb)
                            : "x0", "x1", "x2", "x3", "x4", "x5", "x6", "x7", "x8", "x9", "x10", "x11", "x12", "x13",
                            "v0",
                            "v1", "v2", "v3", "v4", "v5", "v6", "v7", "v8", "v9", "v10", "v11", "v12", "v13", "v14",
                            "v15",
                            "v16", "v17", "v18", "v19", "v20", "v21", "v22", "v23", "v24", "v25", "v26", "v27", "v28",
                            "v29"
                            , "v30", "v31", "cc", "memory"
                        );
                        break;
                    default:
                    case 8:
                        __asm __volatile (
                            "a_ptr1 .req X0\n"
                            "a_ptr2 .req X1\n"
                            "a_ptr3 .req X2\n"
                            "a_ptr4 .req X3\n"
                            "a_ptr5 .req X4\n"
                            "a_ptr6 .req X5\n"
                            "a_ptr7 .req X6\n"
                            "c_ptr1 .req X7\n"
                            "c_ptr2 .req X8\n"
                            "c_ptr3 .req X9\n"
                            "c_ptr4 .req X10\n"
                            "c_ptr5 .req X11\n"
                            "c_ptr6 .req X12\n"
                            "c_ptr7 .req X13\n"
                            "add a_ptr1, %[a_ptr0], %[lda]\n"
                            "add c_ptr1, %[c_ptr0], %[ldc]\n"
                            "add a_ptr2, a_ptr1, %[lda]\n"
                            "add c_ptr2, c_ptr1, %[ldc]\n"
                            "add a_ptr3, a_ptr2, %[lda]\n"
                            "add c_ptr3, c_ptr2, %[ldc]\n"
                            "add a_ptr4, a_ptr3, %[lda]\n"
                            "add c_ptr4, c_ptr3, %[ldc]\n"
                            "add a_ptr5, a_ptr4, %[lda]\n"
                            "add c_ptr5, c_ptr4, %[ldc]\n"
                            "add a_ptr6, a_ptr5, %[lda]\n"
                            "add c_ptr6, c_ptr5, %[ldc]\n"
                            "add a_ptr7, a_ptr6, %[lda]\n"
                            "add c_ptr7, c_ptr6, %[ldc]\n"
                            "cbz %[oob_rows], 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr7, %[c_ptr0], #0x0\n"
                            "add a_ptr7, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr6, %[c_ptr0], #0x0\n"
                            "add a_ptr6, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr5, %[c_ptr0], #0x0\n"
                            "add a_ptr5, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr4, %[c_ptr0], #0x0\n"
                            "add a_ptr4, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr3, %[c_ptr0], #0x0\n"
                            "add a_ptr3, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr2, %[c_ptr0], #0x0\n"
                            "add a_ptr2, %[a_ptr0], #0x0\n"
                            "b.eq 1f\n"
                            "subs %[oob_rows], %[oob_rows], #0x1\n"
                            "add c_ptr1, %[c_ptr0], #0x0\n"
                            "add a_ptr1, %[a_ptr0], #0x0\n"
                            "1:\n"
                            "cbnz %[odds], 2f\n"
                            "ldr q0, [%[a_ptr0]], #0x10\n"
                            "ldr q2, [a_ptr1], #0x10\n"
                            "ldr q4, [a_ptr2], #0x10\n"
                            "ldr q6, [a_ptr3], #0x10\n"
                            "ldr q8, [a_ptr4], #0x10\n"
                            "ldr q10, [a_ptr5], #0x10\n"
                            "ldr q12, [a_ptr6], #0x10\n"
                            "ldr q14, [a_ptr7], #0x10\n"
                            "ldr q1, [%[a_ptr0]]\n"
                            "ldr q3, [a_ptr1]\n"
                            "ldr q5, [a_ptr2]\n"
                            "ldr q7, [a_ptr3]\n"
                            "ldr q9, [a_ptr4]\n"
                            "ldr q11, [a_ptr5]\n"
                            "ldr q13, [a_ptr6]\n"
                            "ldr q15, [a_ptr7]\n"
                            "b 3f\n"
                            "2:\n"
                            "ldr q0, [%[a_ptr0]], #0x10\n"
                            "subs %[odds], %[odds], #0x1\n"
                            "ldr q2, [a_ptr1], #0x10\n"
                            "ldr q4, [a_ptr2], #0x10\n"
                            "ldr d1, [%[a_ptr0]], #0x8\n"
                            "ldr q6, [a_ptr3], #0x10\n"
                            "ldr d3, [a_ptr1], #0x8\n"
                            "ldr q8, [a_ptr4], #0x10\n"
                            "ldr d5, [a_ptr2], #0x8\n"
                            "ldr q10, [a_ptr5], #0x10\n"
                            "ldr d7, [a_ptr3], #0x8\n"
                            "ldr q12, [a_ptr6], #0x10\n"
                            "ldr d9, [a_ptr4], #0x8\n"
                            "ldr q14, [a_ptr7], #0x10\n"
                            "ldr d11, [a_ptr5], #0x8\n"
                            "ldr d13, [a_ptr6], #0x8\n"
                            "ld1 {v1.s}[2], [%[a_ptr0]], #4\n"
                            "ldr d15, [a_ptr7], #0x8\n"
                            "ld1 {v3.s}[2], [a_ptr1], #4\n"
                            "ld1 {v5.s}[2], [a_ptr2], #4\n"
                            "ld1 {v7.s}[2], [a_ptr3], #4\n"
                            "ld1 {v9.s}[2], [a_ptr4], #4\n"
                            "ld1 {v11.s}[2], [a_ptr5], #4\n"
                            "ld1 {v13.s}[2], [a_ptr6], #4\n"
                            "ld1 {v15.s}[2], [a_ptr7], #4\n"
                            "b.ne 4f\n"
                            "ld1 {v1.b}[12], [%[a_ptr0]]\n"
                            "ld1 {v3.b}[12], [a_ptr1]\n"
                            "ld1 {v5.b}[12], [a_ptr2]\n"
                            "ld1 {v7.b}[12], [a_ptr3]\n"
                            "ld1 {v9.b}[12], [a_ptr4]\n"
                            "ld1 {v11.b}[12], [a_ptr5]\n"
                            "ld1 {v13.b}[12], [a_ptr6]\n"
                            "ld1 {v15.b}[12], [a_ptr7]\n"
                            "b 3f\n"
                            "4:\n"
                            "ld1 {v1.h}[6], [%[a_ptr0]], #2\n"
                            "ld1 {v3.h}[6], [a_ptr1], #2\n"
                            "ld1 {v5.h}[6], [a_ptr2], #2\n"
                            "ld1 {v7.h}[6], [a_ptr3], #2\n"
                            "ld1 {v9.h}[6], [a_ptr4], #2\n"
                            "ld1 {v11.h}[6], [a_ptr5], #2\n"
                            "ld1 {v13.h}[6], [a_ptr6], #2\n"
                            "ld1 {v15.h}[6], [a_ptr7], #2\n"
                            "subs %[odds], %[odds], #0x1\n"
                            "b.ne 5f\n"
                            "b 3f\n"
                            "5:\n"
                            "ld1 {v1.b}[14], [%[a_ptr0]]\n"
                            "ld1 {v3.b}[14], [a_ptr1]\n"
                            "ld1 {v5.b}[14], [a_ptr2]\n"
                            "ld1 {v7.b}[14], [a_ptr3]\n"
                            "ld1 {v9.b}[14], [a_ptr4]\n"
                            "ld1 {v11.b}[14], [a_ptr5]\n"
                            "ld1 {v13.b}[14], [a_ptr6]\n"
                            "ld1 {v15.b}[14], [a_ptr7]\n"
                            "3:\n"
                            "ldr q16, [%[b_ptr0]]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x40]\n"
                            "ldr q17, [%[b_ptr0], #0x10]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x80]\n"
                            "ldr q18, [%[b_ptr0], #0x20]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0xc0]\n"
                            "ldr q19, [%[b_ptr0], #0x30]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x100]\n"
                            "ldr q20, [%[b_ptr0], #0x40]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x140]\n"
                            "ldr q21, [%[b_ptr0], #0x50]\n"
                            "prfm PLDL1KEEP, [a_ptr7, #0x180]\n"
                            "ldr q22, [%[b_ptr0], #0x60]\n"
                            "ldr q23, [%[b_ptr0], #0x70]\n"
                            "add %[b_ptr0], %[b_ptr0], #0x80\n"
                            "cbz %[loops], 6f\n"
                            "movi v24.4s, #0\n"
                            "subs %[loops], %[loops], #0x1\n"
                            "movi v25.4s, #0\n"
                            "movi v26.4s, #0\n"
                            "movi v27.4s, #0\n"
                            "movi v28.4s, #0\n"
                            "movi v29.4s, #0\n"
                            "movi v30.4s, #0\n"
                            "movi v31.4s, #0\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            ".inst 0x4f82e219 // sdot v25.4s, v16.16b, v2.4b[0]\n"
                            ".inst 0x4f84e21a // sdot v26.4s, v16.16b, v4.4b[0]\n"
                            ".inst 0x4f86e21b // sdot v27.4s, v16.16b, v6.4b[0]\n"
                            ".inst 0x4f88e21c // sdot v28.4s, v16.16b, v8.4b[0]\n"
                            ".inst 0x4f8ae21d // sdot v29.4s, v16.16b, v10.4b[0]\n"
                            ".inst 0x4f8ce21e // sdot v30.4s, v16.16b, v12.4b[0]\n"
                            ".inst 0x4f8ee21f // sdot v31.4s, v16.16b, v14.4b[0]\n"
                            ".inst 0x4fa0e238 // sdot v24.4s, v17.16b, v0.4b[1]\n"
                            ".inst 0x4fa2e239 // sdot v25.4s, v17.16b, v2.4b[1]\n"
                            ".inst 0x4fa4e23a // sdot v26.4s, v17.16b, v4.4b[1]\n"
                            ".inst 0x4fa6e23b // sdot v27.4s, v17.16b, v6.4b[1]\n"
                            ".inst 0x4fa8e23c // sdot v28.4s, v17.16b, v8.4b[1]\n"
                            ".inst 0x4faae23d // sdot v29.4s, v17.16b, v10.4b[1]\n"
                            ".inst 0x4face23e // sdot v30.4s, v17.16b, v12.4b[1]\n"
                            ".inst 0x4faee23f // sdot v31.4s, v17.16b, v14.4b[1]\n"
                            ".inst 0x4f80ea58 // sdot v24.4s, v18.16b, v0.4b[2]\n"
                            ".inst 0x4f82ea59 // sdot v25.4s, v18.16b, v2.4b[2]\n"
                            ".inst 0x4f84ea5a // sdot v26.4s, v18.16b, v4.4b[2]\n"
                            ".inst 0x4f86ea5b // sdot v27.4s, v18.16b, v6.4b[2]\n"
                            ".inst 0x4f88ea5c // sdot v28.4s, v18.16b, v8.4b[2]\n"
                            ".inst 0x4f8aea5d // sdot v29.4s, v18.16b, v10.4b[2]\n"
                            ".inst 0x4f8cea5e // sdot v30.4s, v18.16b, v12.4b[2]\n"
                            ".inst 0x4f8eea5f // sdot v31.4s, v18.16b, v14.4b[2]\n"
                            ".inst 0x4fa0ea78 // sdot v24.4s, v19.16b, v0.4b[3]\n"
                            ".inst 0x4fa2ea79 // sdot v25.4s, v19.16b, v2.4b[3]\n"
                            ".inst 0x4fa4ea7a // sdot v26.4s, v19.16b, v4.4b[3]\n"
                            ".inst 0x4fa6ea7b // sdot v27.4s, v19.16b, v6.4b[3]\n"
                            ".inst 0x4fa8ea7c // sdot v28.4s, v19.16b, v8.4b[3]\n"
                            ".inst 0x4faaea7d // sdot v29.4s, v19.16b, v10.4b[3]\n"
                            ".inst 0x4facea7e // sdot v30.4s, v19.16b, v12.4b[3]\n"
                            ".inst 0x4faeea7f // sdot v31.4s, v19.16b, v14.4b[3]\n"
                            ".inst 0x4f81e298 // sdot v24.4s, v20.16b, v1.4b[0]\n"
                            ".inst 0x4f83e299 // sdot v25.4s, v20.16b, v3.4b[0]\n"
                            ".inst 0x4f85e29a // sdot v26.4s, v20.16b, v5.4b[0]\n"
                            ".inst 0x4f87e29b // sdot v27.4s, v20.16b, v7.4b[0]\n"
                            ".inst 0x4f89e29c // sdot v28.4s, v20.16b, v9.4b[0]\n"
                            ".inst 0x4f8be29d // sdot v29.4s, v20.16b, v11.4b[0]\n"
                            ".inst 0x4f8de29e // sdot v30.4s, v20.16b, v13.4b[0]\n"
                            ".inst 0x4f8fe29f // sdot v31.4s, v20.16b, v15.4b[0]\n"
                            ".inst 0x4fa1e2b8 // sdot v24.4s, v21.16b, v1.4b[1]\n"
                            ".inst 0x4fa3e2b9 // sdot v25.4s, v21.16b, v3.4b[1]\n"
                            ".inst 0x4fa5e2ba // sdot v26.4s, v21.16b, v5.4b[1]\n"
                            ".inst 0x4fa7e2bb // sdot v27.4s, v21.16b, v7.4b[1]\n"
                            ".inst 0x4fa9e2bc // sdot v28.4s, v21.16b, v9.4b[1]\n"
                            ".inst 0x4fabe2bd // sdot v29.4s, v21.16b, v11.4b[1]\n"
                            ".inst 0x4fade2be // sdot v30.4s, v21.16b, v13.4b[1]\n"
                            ".inst 0x4fafe2bf // sdot v31.4s, v21.16b, v15.4b[1]\n"
                            ".inst 0x4f81ead8 // sdot v24.4s, v22.16b, v1.4b[2]\n"
                            ".inst 0x4f83ead9 // sdot v25.4s, v22.16b, v3.4b[2]\n"
                            ".inst 0x4f85eada // sdot v26.4s, v22.16b, v5.4b[2]\n"
                            ".inst 0x4f87eadb // sdot v27.4s, v22.16b, v7.4b[2]\n"
                            ".inst 0x4f89eadc // sdot v28.4s, v22.16b, v9.4b[2]\n"
                            ".inst 0x4f8beadd // sdot v29.4s, v22.16b, v11.4b[2]\n"
                            ".inst 0x4f8deade // sdot v30.4s, v22.16b, v13.4b[2]\n"
                            ".inst 0x4f8feadf // sdot v31.4s, v22.16b, v15.4b[2]\n"
                            ".inst 0x4fa1eaf8 // sdot v24.4s, v23.16b, v1.4b[3]\n"
                            ".inst 0x4fa3eaf9 // sdot v25.4s, v23.16b, v3.4b[3]\n"
                            ".inst 0x4fa5eafa // sdot v26.4s, v23.16b, v5.4b[3]\n"
                            ".inst 0x4fa7eafb // sdot v27.4s, v23.16b, v7.4b[3]\n"
                            ".inst 0x4fa9eafc // sdot v28.4s, v23.16b, v9.4b[3]\n"
                            ".inst 0x4fabeafd // sdot v29.4s, v23.16b, v11.4b[3]\n"
                            ".inst 0x4fadeafe // sdot v30.4s, v23.16b, v13.4b[3]\n"
                            ".inst 0x4fafeaff // sdot v31.4s, v23.16b, v15.4b[3]\n"
                            "b.eq 7f\n"
                            "8:\n"
                            "str q24, [%[c_ptr0]]\n"
                            "subs %[loops], %[loops], #0x1\n"
                            "movi v24.4s, #0\n"
                            "ldr q16, [%[b_ptr0]]\n"
                            "ldr q17, [%[b_ptr0], #0x10]\n"
                            "add %[c_ptr0], %[c_ptr0], #0x10\n"
                            "str q25, [c_ptr1]\n"
                            "add c_ptr1, c_ptr1, #0x10\n"
                            "movi v25.4s, #0\n"
                            "ldr q18, [%[b_ptr0], #0x20]\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            "str q26, [c_ptr2]\n"
                            "movi v26.4s, #0\n"
                            "ldr q19, [%[b_ptr0], #0x30]\n"
                            "ldr q20, [%[b_ptr0], #0x40]\n"
                            "add c_ptr2, c_ptr2, #0x10\n"
                            ".inst 0x4f82e219 // sdot v25.4s, v16.16b, v2.4b[0]\n"
                            "str q27, [c_ptr3]\n"
                            "movi v27.4s, #0\n"
                            "ldr q21, [%[b_ptr0], #0x50]\n"
                            ".inst 0x4f84e21a // sdot v26.4s, v16.16b, v4.4b[0]\n"
                            "ldr q22, [%[b_ptr0], #0x60]\n"
                            ".inst 0x4fa0e238 // sdot v24.4s, v17.16b, v0.4b[1]\n"
                            "str q28, [c_ptr4]\n"
                            "movi v28.4s, #0\n"
                            "ldr q23, [%[b_ptr0], #0x70]\n"
                            ".inst 0x4f86e21b // sdot v27.4s, v16.16b, v6.4b[0]\n"
                            "add c_ptr3, c_ptr3, #0x10\n"
                            ".inst 0x4fa2e239 // sdot v25.4s, v17.16b, v2.4b[1]\n"
                            "str q29, [c_ptr5]\n"
                            "movi v29.4s, #0\n"
                            "add c_ptr4, c_ptr4, #0x10\n"
                            ".inst 0x4f88e21c // sdot v28.4s, v16.16b, v8.4b[0]\n"
                            "str q30, [c_ptr6]\n"
                            "movi v30.4s, #0\n"
                            "add c_ptr5, c_ptr5, #0x10\n"
                            ".inst 0x4f8ae21d // sdot v29.4s, v16.16b, v10.4b[0]\n"
                            "str q31, [c_ptr7]\n"
                            "movi v31.4s, #0\n"
                            "add c_ptr6, c_ptr6, #0x10\n"
                            ".inst 0x4f8ce21e // sdot v30.4s, v16.16b, v12.4b[0]\n"
                            "add c_ptr7, c_ptr7, #0x10\n"
                            ".inst 0x4f8ee21f // sdot v31.4s, v16.16b, v14.4b[0]\n"
                            "add %[b_ptr0], %[b_ptr0], #0x80\n"
                            ".inst 0x4fa4e23a // sdot v26.4s, v17.16b, v4.4b[1]\n"
                            "prfm PSTL1KEEP, [%[c_ptr0], #0x40]\n"
                            ".inst 0x4fa6e23b // sdot v27.4s, v17.16b, v6.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr1, #0x40]\n"
                            ".inst 0x4fa8e23c // sdot v28.4s, v17.16b, v8.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr2, #0x40]\n"
                            ".inst 0x4faae23d // sdot v29.4s, v17.16b, v10.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr3, #0x40]\n"
                            ".inst 0x4face23e // sdot v30.4s, v17.16b, v12.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr4, #0x40]\n"
                            ".inst 0x4faee23f // sdot v31.4s, v17.16b, v14.4b[1]\n"
                            "prfm PSTL1KEEP, [c_ptr5, #0x40]\n"
                            ".inst 0x4f80ea58 // sdot v24.4s, v18.16b, v0.4b[2]\n"
                            "prfm PSTL1KEEP, [c_ptr6, #0x40]\n"
                            ".inst 0x4f82ea59 // sdot v25.4s, v18.16b, v2.4b[2]\n"
                            "prfm PSTL1KEEP, [c_ptr7, #0x40]\n"
                            ".inst 0x4f84ea5a // sdot v26.4s, v18.16b, v4.4b[2]\n"
                            ".inst 0x4f86ea5b // sdot v27.4s, v18.16b, v6.4b[2]\n"
                            ".inst 0x4f88ea5c // sdot v28.4s, v18.16b, v8.4b[2]\n"
                            ".inst 0x4f8aea5d // sdot v29.4s, v18.16b, v10.4b[2]\n"
                            ".inst 0x4f8cea5e // sdot v30.4s, v18.16b, v12.4b[2]\n"
                            ".inst 0x4f8eea5f // sdot v31.4s, v18.16b, v14.4b[2]\n"
                            ".inst 0x4fa0ea78 // sdot v24.4s, v19.16b, v0.4b[3]\n"
                            ".inst 0x4fa2ea79 // sdot v25.4s, v19.16b, v2.4b[3]\n"
                            ".inst 0x4fa4ea7a // sdot v26.4s, v19.16b, v4.4b[3]\n"
                            ".inst 0x4fa6ea7b // sdot v27.4s, v19.16b, v6.4b[3]\n"
                            ".inst 0x4fa8ea7c // sdot v28.4s, v19.16b, v8.4b[3]\n"
                            ".inst 0x4faaea7d // sdot v29.4s, v19.16b, v10.4b[3]\n"
                            ".inst 0x4facea7e // sdot v30.4s, v19.16b, v12.4b[3]\n"
                            ".inst 0x4faeea7f // sdot v31.4s, v19.16b, v14.4b[3]\n"
                            ".inst 0x4f81e298 // sdot v24.4s, v20.16b, v1.4b[0]\n"
                            ".inst 0x4f83e299 // sdot v25.4s, v20.16b, v3.4b[0]\n"
                            ".inst 0x4f85e29a // sdot v26.4s, v20.16b, v5.4b[0]\n"
                            ".inst 0x4f87e29b // sdot v27.4s, v20.16b, v7.4b[0]\n"
                            ".inst 0x4f89e29c // sdot v28.4s, v20.16b, v9.4b[0]\n"
                            ".inst 0x4f8be29d // sdot v29.4s, v20.16b, v11.4b[0]\n"
                            ".inst 0x4f8de29e // sdot v30.4s, v20.16b, v13.4b[0]\n"
                            ".inst 0x4f8fe29f // sdot v31.4s, v20.16b, v15.4b[0]\n"
                            ".inst 0x4fa1e2b8 // sdot v24.4s, v21.16b, v1.4b[1]\n"
                            ".inst 0x4fa3e2b9 // sdot v25.4s, v21.16b, v3.4b[1]\n"
                            ".inst 0x4fa5e2ba // sdot v26.4s, v21.16b, v5.4b[1]\n"
                            ".inst 0x4fa7e2bb // sdot v27.4s, v21.16b, v7.4b[1]\n"
                            ".inst 0x4fa9e2bc // sdot v28.4s, v21.16b, v9.4b[1]\n"
                            ".inst 0x4fabe2bd // sdot v29.4s, v21.16b, v11.4b[1]\n"
                            ".inst 0x4fade2be // sdot v30.4s, v21.16b, v13.4b[1]\n"
                            ".inst 0x4fafe2bf // sdot v31.4s, v21.16b, v15.4b[1]\n"
                            ".inst 0x4f81ead8 // sdot v24.4s, v22.16b, v1.4b[2]\n"
                            ".inst 0x4f83ead9 // sdot v25.4s, v22.16b, v3.4b[2]\n"
                            ".inst 0x4f85eada // sdot v26.4s, v22.16b, v5.4b[2]\n"
                            ".inst 0x4f87eadb // sdot v27.4s, v22.16b, v7.4b[2]\n"
                            ".inst 0x4f89eadc // sdot v28.4s, v22.16b, v9.4b[2]\n"
                            ".inst 0x4f8beadd // sdot v29.4s, v22.16b, v11.4b[2]\n"
                            ".inst 0x4f8deade // sdot v30.4s, v22.16b, v13.4b[2]\n"
                            ".inst 0x4f8feadf // sdot v31.4s, v22.16b, v15.4b[2]\n"
                            ".inst 0x4fa1eaf8 // sdot v24.4s, v23.16b, v1.4b[3]\n"
                            ".inst 0x4fa3eaf9 // sdot v25.4s, v23.16b, v3.4b[3]\n"
                            ".inst 0x4fa5eafa // sdot v26.4s, v23.16b, v5.4b[3]\n"
                            ".inst 0x4fa7eafb // sdot v27.4s, v23.16b, v7.4b[3]\n"
                            ".inst 0x4fa9eafc // sdot v28.4s, v23.16b, v9.4b[3]\n"
                            ".inst 0x4fabeafd // sdot v29.4s, v23.16b, v11.4b[3]\n"
                            ".inst 0x4fadeafe // sdot v30.4s, v23.16b, v13.4b[3]\n"
                            ".inst 0x4fafeaff // sdot v31.4s, v23.16b, v15.4b[3]\n"
                            "b.ne 8b\n"
                            "7:\n"
                            "str q24, [%[c_ptr0]]\n"
                            "add %[c_ptr0], %[c_ptr0], #0x10\n"
                            "movi v24.4s, #0\n"
                            "ldr q16, [%[b_ptr0]]\n"
                            "ldr q17, [%[b_ptr0], #0x10]\n"
                            "str q25, [c_ptr1]\n"
                            "add c_ptr1, c_ptr1, #0x10\n"
                            "movi v25.4s, #0\n"
                            "ldr q18, [%[b_ptr0], #0x20]\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            "str q26, [c_ptr2]\n"
                            "movi v26.4s, #0\n"
                            "ldr q19, [%[b_ptr0], #0x30]\n"
                            "ldr q20, [%[b_ptr0], #0x40]\n"
                            "add c_ptr2, c_ptr2, #0x10\n"
                            ".inst 0x4f82e219 // sdot v25.4s, v16.16b, v2.4b[0]\n"
                            "str q27, [c_ptr3]\n"
                            "movi v27.4s, #0\n"
                            "ldr q21, [%[b_ptr0], #0x50]\n"
                            ".inst 0x4f84e21a // sdot v26.4s, v16.16b, v4.4b[0]\n"
                            "ldr q22, [%[b_ptr0], #0x60]\n"
                            ".inst 0x4fa0e238 // sdot v24.4s, v17.16b, v0.4b[1]\n"
                            "str q28, [c_ptr4]\n"
                            "movi v28.4s, #0\n"
                            "ldr q23, [%[b_ptr0], #0x70]\n"
                            ".inst 0x4f86e21b // sdot v27.4s, v16.16b, v6.4b[0]\n"
                            "add c_ptr3, c_ptr3, #0x10\n"
                            ".inst 0x4fa2e239 // sdot v25.4s, v17.16b, v2.4b[1]\n"
                            "str q29, [c_ptr5]\n"
                            "movi v29.4s, #0\n"
                            "add c_ptr4, c_ptr4, #0x10\n"
                            ".inst 0x4f88e21c // sdot v28.4s, v16.16b, v8.4b[0]\n"
                            "str q30, [c_ptr6]\n"
                            "movi v30.4s, #0\n"
                            "add c_ptr5, c_ptr5, #0x10\n"
                            ".inst 0x4f8ae21d // sdot v29.4s, v16.16b, v10.4b[0]\n"
                            "str q31, [c_ptr7]\n"
                            "movi v31.4s, #0\n"
                            "add c_ptr6, c_ptr6, #0x10\n"
                            ".inst 0x4f8ce21e // sdot v30.4s, v16.16b, v12.4b[0]\n"
                            "add c_ptr7, c_ptr7, #0x10\n"
                            ".inst 0x4f8ee21f // sdot v31.4s, v16.16b, v14.4b[0]\n"
                            "add %[b_ptr0], %[b_ptr0], #0x80\n"
                            ".inst 0x4fa4e23a // sdot v26.4s, v17.16b, v4.4b[1]\n"
                            ".inst 0x4fa6e23b // sdot v27.4s, v17.16b, v6.4b[1]\n"
                            ".inst 0x4fa8e23c // sdot v28.4s, v17.16b, v8.4b[1]\n"
                            ".inst 0x4faae23d // sdot v29.4s, v17.16b, v10.4b[1]\n"
                            ".inst 0x4face23e // sdot v30.4s, v17.16b, v12.4b[1]\n"
                            ".inst 0x4faee23f // sdot v31.4s, v17.16b, v14.4b[1]\n"
                            ".inst 0x4f80ea58 // sdot v24.4s, v18.16b, v0.4b[2]\n"
                            ".inst 0x4f82ea59 // sdot v25.4s, v18.16b, v2.4b[2]\n"
                            ".inst 0x4f84ea5a // sdot v26.4s, v18.16b, v4.4b[2]\n"
                            ".inst 0x4f86ea5b // sdot v27.4s, v18.16b, v6.4b[2]\n"
                            ".inst 0x4f88ea5c // sdot v28.4s, v18.16b, v8.4b[2]\n"
                            ".inst 0x4f8aea5d // sdot v29.4s, v18.16b, v10.4b[2]\n"
                            ".inst 0x4f8cea5e // sdot v30.4s, v18.16b, v12.4b[2]\n"
                            ".inst 0x4f8eea5f // sdot v31.4s, v18.16b, v14.4b[2]\n"
                            ".inst 0x4fa0ea78 // sdot v24.4s, v19.16b, v0.4b[3]\n"
                            ".inst 0x4fa2ea79 // sdot v25.4s, v19.16b, v2.4b[3]\n"
                            ".inst 0x4fa4ea7a // sdot v26.4s, v19.16b, v4.4b[3]\n"
                            ".inst 0x4fa6ea7b // sdot v27.4s, v19.16b, v6.4b[3]\n"
                            ".inst 0x4fa8ea7c // sdot v28.4s, v19.16b, v8.4b[3]\n"
                            ".inst 0x4faaea7d // sdot v29.4s, v19.16b, v10.4b[3]\n"
                            ".inst 0x4facea7e // sdot v30.4s, v19.16b, v12.4b[3]\n"
                            ".inst 0x4faeea7f // sdot v31.4s, v19.16b, v14.4b[3]\n"
                            ".inst 0x4f81e298 // sdot v24.4s, v20.16b, v1.4b[0]\n"
                            ".inst 0x4f83e299 // sdot v25.4s, v20.16b, v3.4b[0]\n"
                            ".inst 0x4f85e29a // sdot v26.4s, v20.16b, v5.4b[0]\n"
                            ".inst 0x4f87e29b // sdot v27.4s, v20.16b, v7.4b[0]\n"
                            ".inst 0x4f89e29c // sdot v28.4s, v20.16b, v9.4b[0]\n"
                            ".inst 0x4f8be29d // sdot v29.4s, v20.16b, v11.4b[0]\n"
                            ".inst 0x4f8de29e // sdot v30.4s, v20.16b, v13.4b[0]\n"
                            ".inst 0x4f8fe29f // sdot v31.4s, v20.16b, v15.4b[0]\n"
                            ".inst 0x4fa1e2b8 // sdot v24.4s, v21.16b, v1.4b[1]\n"
                            ".inst 0x4fa3e2b9 // sdot v25.4s, v21.16b, v3.4b[1]\n"
                            ".inst 0x4fa5e2ba // sdot v26.4s, v21.16b, v5.4b[1]\n"
                            ".inst 0x4fa7e2bb // sdot v27.4s, v21.16b, v7.4b[1]\n"
                            ".inst 0x4fa9e2bc // sdot v28.4s, v21.16b, v9.4b[1]\n"
                            ".inst 0x4fabe2bd // sdot v29.4s, v21.16b, v11.4b[1]\n"
                            ".inst 0x4fade2be // sdot v30.4s, v21.16b, v13.4b[1]\n"
                            ".inst 0x4fafe2bf // sdot v31.4s, v21.16b, v15.4b[1]\n"
                            ".inst 0x4f81ead8 // sdot v24.4s, v22.16b, v1.4b[2]\n"
                            ".inst 0x4f83ead9 // sdot v25.4s, v22.16b, v3.4b[2]\n"
                            ".inst 0x4f85eada // sdot v26.4s, v22.16b, v5.4b[2]\n"
                            ".inst 0x4f87eadb // sdot v27.4s, v22.16b, v7.4b[2]\n"
                            ".inst 0x4f89eadc // sdot v28.4s, v22.16b, v9.4b[2]\n"
                            ".inst 0x4f8beadd // sdot v29.4s, v22.16b, v11.4b[2]\n"
                            ".inst 0x4f8deade // sdot v30.4s, v22.16b, v13.4b[2]\n"
                            ".inst 0x4f8feadf // sdot v31.4s, v22.16b, v15.4b[2]\n"
                            ".inst 0x4fa1eaf8 // sdot v24.4s, v23.16b, v1.4b[3]\n"
                            ".inst 0x4fa3eaf9 // sdot v25.4s, v23.16b, v3.4b[3]\n"
                            ".inst 0x4fa5eafa // sdot v26.4s, v23.16b, v5.4b[3]\n"
                            ".inst 0x4fa7eafb // sdot v27.4s, v23.16b, v7.4b[3]\n"
                            ".inst 0x4fa9eafc // sdot v28.4s, v23.16b, v9.4b[3]\n"
                            ".inst 0x4fabeafd // sdot v29.4s, v23.16b, v11.4b[3]\n"
                            ".inst 0x4fadeafe // sdot v30.4s, v23.16b, v13.4b[3]\n"
                            ".inst 0x4fafeaff // sdot v31.4s, v23.16b, v15.4b[3]\n"
                            "b 9f\n"
                            "6:\n"
                            "movi v24.4s, #0\n"
                            "movi v25.4s, #0\n"
                            "movi v26.4s, #0\n"
                            "movi v27.4s, #0\n"
                            "movi v28.4s, #0\n"
                            "movi v29.4s, #0\n"
                            "movi v30.4s, #0\n"
                            "movi v31.4s, #0\n"
                            ".inst 0x4f80e218 // sdot v24.4s, v16.16b, v0.4b[0]\n"
                            ".inst 0x4f82e219 // sdot v25.4s, v16.16b, v2.4b[0]\n"
                            ".inst 0x4f84e21a // sdot v26.4s, v16.16b, v4.4b[0]\n"
                            ".inst 0x4f86e21b // sdot v27.4s, v16.16b, v6.4b[0]\n"
                            ".inst 0x4f88e21c // sdot v28.4s, v16.16b, v8.4b[0]\n"
                            ".inst 0x4f8ae21d // sdot v29.4s, v16.16b, v10.4b[0]\n"
                            ".inst 0x4f8ce21e // sdot v30.4s, v16.16b, v12.4b[0]\n"
                            ".inst 0x4f8ee21f // sdot v31.4s, v16.16b, v14.4b[0]\n"
                            ".inst 0x4fa0e238 // sdot v24.4s, v17.16b, v0.4b[1]\n"
                            ".inst 0x4fa2e239 // sdot v25.4s, v17.16b, v2.4b[1]\n"
                            ".inst 0x4fa4e23a // sdot v26.4s, v17.16b, v4.4b[1]\n"
                            ".inst 0x4fa6e23b // sdot v27.4s, v17.16b, v6.4b[1]\n"
                            ".inst 0x4fa8e23c // sdot v28.4s, v17.16b, v8.4b[1]\n"
                            ".inst 0x4faae23d // sdot v29.4s, v17.16b, v10.4b[1]\n"
                            ".inst 0x4face23e // sdot v30.4s, v17.16b, v12.4b[1]\n"
                            ".inst 0x4faee23f // sdot v31.4s, v17.16b, v14.4b[1]\n"
                            ".inst 0x4f80ea58 // sdot v24.4s, v18.16b, v0.4b[2]\n"
                            ".inst 0x4f82ea59 // sdot v25.4s, v18.16b, v2.4b[2]\n"
                            ".inst 0x4f84ea5a // sdot v26.4s, v18.16b, v4.4b[2]\n"
                            ".inst 0x4f86ea5b // sdot v27.4s, v18.16b, v6.4b[2]\n"
                            ".inst 0x4f88ea5c // sdot v28.4s, v18.16b, v8.4b[2]\n"
                            ".inst 0x4f8aea5d // sdot v29.4s, v18.16b, v10.4b[2]\n"
                            ".inst 0x4f8cea5e // sdot v30.4s, v18.16b, v12.4b[2]\n"
                            ".inst 0x4f8eea5f // sdot v31.4s, v18.16b, v14.4b[2]\n"
                            ".inst 0x4fa0ea78 // sdot v24.4s, v19.16b, v0.4b[3]\n"
                            ".inst 0x4fa2ea79 // sdot v25.4s, v19.16b, v2.4b[3]\n"
                            ".inst 0x4fa4ea7a // sdot v26.4s, v19.16b, v4.4b[3]\n"
                            ".inst 0x4fa6ea7b // sdot v27.4s, v19.16b, v6.4b[3]\n"
                            ".inst 0x4fa8ea7c // sdot v28.4s, v19.16b, v8.4b[3]\n"
                            ".inst 0x4faaea7d // sdot v29.4s, v19.16b, v10.4b[3]\n"
                            ".inst 0x4facea7e // sdot v30.4s, v19.16b, v12.4b[3]\n"
                            ".inst 0x4faeea7f // sdot v31.4s, v19.16b, v14.4b[3]\n"
                            ".inst 0x4f81e298 // sdot v24.4s, v20.16b, v1.4b[0]\n"
                            ".inst 0x4f83e299 // sdot v25.4s, v20.16b, v3.4b[0]\n"
                            ".inst 0x4f85e29a // sdot v26.4s, v20.16b, v5.4b[0]\n"
                            ".inst 0x4f87e29b // sdot v27.4s, v20.16b, v7.4b[0]\n"
                            ".inst 0x4f89e29c // sdot v28.4s, v20.16b, v9.4b[0]\n"
                            ".inst 0x4f8be29d // sdot v29.4s, v20.16b, v11.4b[0]\n"
                            ".inst 0x4f8de29e // sdot v30.4s, v20.16b, v13.4b[0]\n"
                            ".inst 0x4f8fe29f // sdot v31.4s, v20.16b, v15.4b[0]\n"
                            ".inst 0x4fa1e2b8 // sdot v24.4s, v21.16b, v1.4b[1]\n"
                            ".inst 0x4fa3e2b9 // sdot v25.4s, v21.16b, v3.4b[1]\n"
                            ".inst 0x4fa5e2ba // sdot v26.4s, v21.16b, v5.4b[1]\n"
                            ".inst 0x4fa7e2bb // sdot v27.4s, v21.16b, v7.4b[1]\n"
                            ".inst 0x4fa9e2bc // sdot v28.4s, v21.16b, v9.4b[1]\n"
                            ".inst 0x4fabe2bd // sdot v29.4s, v21.16b, v11.4b[1]\n"
                            ".inst 0x4fade2be // sdot v30.4s, v21.16b, v13.4b[1]\n"
                            ".inst 0x4fafe2bf // sdot v31.4s, v21.16b, v15.4b[1]\n"
                            ".inst 0x4f81ead8 // sdot v24.4s, v22.16b, v1.4b[2]\n"
                            ".inst 0x4f83ead9 // sdot v25.4s, v22.16b, v3.4b[2]\n"
                            ".inst 0x4f85eada // sdot v26.4s, v22.16b, v5.4b[2]\n"
                            ".inst 0x4f87eadb // sdot v27.4s, v22.16b, v7.4b[2]\n"
                            ".inst 0x4f89eadc // sdot v28.4s, v22.16b, v9.4b[2]\n"
                            ".inst 0x4f8beadd // sdot v29.4s, v22.16b, v11.4b[2]\n"
                            ".inst 0x4f8deade // sdot v30.4s, v22.16b, v13.4b[2]\n"
                            ".inst 0x4f8feadf // sdot v31.4s, v22.16b, v15.4b[2]\n"
                            ".inst 0x4fa1eaf8 // sdot v24.4s, v23.16b, v1.4b[3]\n"
                            ".inst 0x4fa3eaf9 // sdot v25.4s, v23.16b, v3.4b[3]\n"
                            ".inst 0x4fa5eafa // sdot v26.4s, v23.16b, v5.4b[3]\n"
                            ".inst 0x4fa7eafb // sdot v27.4s, v23.16b, v7.4b[3]\n"
                            ".inst 0x4fa9eafc // sdot v28.4s, v23.16b, v9.4b[3]\n"
                            ".inst 0x4fabeafd // sdot v29.4s, v23.16b, v11.4b[3]\n"
                            ".inst 0x4fadeafe // sdot v30.4s, v23.16b, v13.4b[3]\n"
                            ".inst 0x4fafeaff // sdot v31.4s, v23.16b, v15.4b[3]\n"
                            "9:\n"
                            "str q24, [%[c_ptr0]]\n"
                            "add %[c_ptr0], %[c_ptr0], #0x10\n"
                            "str q25, [c_ptr1]\n"
                            "str q26, [c_ptr2]\n"
                            "str q27, [c_ptr3]\n"
                            "str q28, [c_ptr4]\n"
                            "str q29, [c_ptr5]\n"
                            "str q30, [c_ptr6]\n"
                            "str q31, [c_ptr7]\n"
                            ".unreq a_ptr1\n"
                            ".unreq a_ptr2\n"
                            ".unreq a_ptr3\n"
                            ".unreq a_ptr4\n"
                            ".unreq a_ptr5\n"
                            ".unreq a_ptr6\n"
                            ".unreq a_ptr7\n"
                            ".unreq c_ptr1\n"
                            ".unreq c_ptr2\n"
                            ".unreq c_ptr3\n"
                            ".unreq c_ptr4\n"
                            ".unreq c_ptr5\n"
                            ".unreq c_ptr6\n"
                            ".unreq c_ptr7\n"
                            : [a_ptr0] "+r" (a_ptr0), [b_ptr0] "+r" (b_ptr0), [c_ptr0] "+r" (c_ptr0), [loops] "+r" (
                                loops),
                            [oob_rows] "+r" (oob_rows), [odds] "+r" (odds)
                            : [lda] "r" (ldab), [ldc] "r" (ldcb)
                            : "x0", "x1", "x2", "x3", "x4", "x5", "x6", "x7", "x8", "x9", "x10", "x11", "x12", "x13",
                            "v0",
                            "v1", "v2", "v3", "v4", "v5", "v6", "v7", "v8", "v9", "v10", "v11", "v12", "v13", "v14",
                            "v15",
                            "v16", "v17", "v18", "v19", "v20", "v21", "v22", "v23", "v24", "v25", "v26", "v27", "v28",
                            "v29"
                            , "v30", "v31", "cc", "memory"
                        );
                        break;
                }
                // std::cout << "执行" << std::endl;
            }
        }


        void a64_transpose_interleave_4_1x4(uint8_t *out, const uint8_t *in, size_t width, size_t in_stride,
                                            size_t height) {
            uint8_t *pad_row = reinterpret_cast<uint8_t *>(alloca(width * sizeof(uint8_t)));

            if (height % 4) {
                memset(pad_row, 0, width * sizeof(uint8_t));
            }

            size_t out_stride = 4 * roundup<size_t>(height, 4) * sizeof(uint8_t);

            __asm__ __volatile__(
                "cmp %x[height], #0x10\n"
                "blt 8f\n"
                "1:" // Main row loop: Head
                "mov x17, %x[in]\n"
                "mov x16, %x[width]\n"
                "mov x15, %x[out]\n"
                "sub %x[height], %x[height], #0x10\n"
                "add x14, x17, %x[in_stride]\n"
                "add x13, x14, %x[in_stride]\n"
                "add x12, x13, %x[in_stride]\n"
                "cmp x16, #0x10\n"
                "add x11, x12, %x[in_stride]\n"
                "add x10, x11, %x[in_stride]\n"
                "add x9, x10, %x[in_stride]\n"
                "add x28, x9, %x[in_stride]\n"
                "add x27, x28, %x[in_stride]\n"
                "add x26, x27, %x[in_stride]\n"
                "add x25, x26, %x[in_stride]\n"
                "add x24, x25, %x[in_stride]\n"
                "add x23, x24, %x[in_stride]\n"
                "add x22, x23, %x[in_stride]\n"
                "add x21, x22, %x[in_stride]\n"
                "add x20, x21, %x[in_stride]\n"
                "add %x[in], x20, %x[in_stride]\n"
                "blt 3f\n"
                "2:" // Main row loop: Unroll column loop
                "ldr q19, [x17], #0x10\n"
                "ldr q18, [x14], #0x10\n"
                "sub x16, x16, #0x10\n"
                "ldr q17, [x13], #0x10\n"
                "ldr q16, [x12], #0x10\n"
                "cmp x16, #0x10\n"
                "ldr q27, [x11], #0x10\n"
                "ldr q26, [x10], #0x10\n"
                "ldr q25, [x9], #0x10\n"
                "ldr q24, [x28], #0x10\n"
                "ldr q23, [x27], #0x10\n"
                "ldr q22, [x26], #0x10\n"
                "zip1 v5.16b, v19.16b, v17.16b\n"
                "zip1 v4.16b, v18.16b, v16.16b\n"
                "ldr q21, [x25], #0x10\n"
                "ldr q20, [x24], #0x10\n"
                "zip2 v3.16b, v19.16b, v17.16b\n"
                "zip2 v2.16b, v18.16b, v16.16b\n"
                "ldr q19, [x23], #0x10\n"
                "ldr q18, [x22], #0x10\n"
                "zip1 v1.16b, v27.16b, v25.16b\n"
                "zip1 v0.16b, v26.16b, v24.16b\n"
                "ldr q17, [x21], #0x10\n"
                "ldr q16, [x20], #0x10\n"
                "zip2 v31.16b, v27.16b, v25.16b\n"
                "zip2 v30.16b, v26.16b, v24.16b\n"
                "zip1 v25.16b, v23.16b, v21.16b\n"
                "zip1 v24.16b, v22.16b, v20.16b\n"
                "zip2 v29.16b, v23.16b, v21.16b\n"
                "zip2 v28.16b, v22.16b, v20.16b\n"
                "zip1 v23.16b, v19.16b, v17.16b\n"
                "zip1 v22.16b, v18.16b, v16.16b\n"
                "zip2 v27.16b, v19.16b, v17.16b\n"
                "zip2 v26.16b, v18.16b, v16.16b\n"
                "zip1 v21.16b, v5.16b, v4.16b\n"
                "zip1 v20.16b, v1.16b, v0.16b\n"
                "zip1 v19.16b, v25.16b, v24.16b\n"
                "zip1 v18.16b, v23.16b, v22.16b\n"
                "zip2 v17.16b, v5.16b, v4.16b\n"
                "zip2 v16.16b, v1.16b, v0.16b\n"
                "str q21, [x15, #0x0]\n"
                "str q20, [x15, #0x10]\n"
                "zip2 v25.16b, v25.16b, v24.16b\n"
                "zip2 v24.16b, v23.16b, v22.16b\n"
                "str q19, [x15, #0x20]\n"
                "zip1 v23.16b, v3.16b, v2.16b\n"
                "zip1 v22.16b, v31.16b, v30.16b\n"
                "str q18, [x15, #0x30]\n"
                "add x15, x15, %x[out_stride]\n"
                "zip1 v21.16b, v29.16b, v28.16b\n"
                "zip1 v20.16b, v27.16b, v26.16b\n"
                "str q17, [x15, #0x0]\n"
                "zip2 v19.16b, v3.16b, v2.16b\n"
                "zip2 v18.16b, v31.16b, v30.16b\n"
                "str q16, [x15, #0x10]\n"
                "zip2 v17.16b, v29.16b, v28.16b\n"
                "zip2 v16.16b, v27.16b, v26.16b\n"
                "str q25, [x15, #0x20]\n"
                "str q24, [x15, #0x30]\n"
                "add x15, x15, %x[out_stride]\n"
                "str q23, [x15, #0x0]\n"
                "str q22, [x15, #0x10]\n"
                "str q21, [x15, #0x20]\n"
                "str q20, [x15, #0x30]\n"
                "add x15, x15, %x[out_stride]\n"
                "str q19, [x15, #0x0]\n"
                "str q18, [x15, #0x10]\n"
                "str q17, [x15, #0x20]\n"
                "str q16, [x15, #0x30]\n"
                "add x15, x15, %x[out_stride]\n"
                "bge 2b\n"
                "3:" // Main row loop: Unroll column loop skip
                "cmp x16, #0x4\n"
                "blt 5f\n"
                "4:" // Main row loop: Column loop
                "ldr s23, [x17], #0x4\n"
                "ldr s21, [x14], #0x4\n"
                "sub x16, x16, #0x4\n"
                "ldr s20, [x13], #0x4\n"
                "ldr s17, [x12], #0x4\n"
                "cmp x16, #0x4\n"
                "ldr s22, [x11], #0x4\n"
                "ldr s19, [x10], #0x4\n"
                "ldr s18, [x9], #0x4\n"
                "ldr s16, [x28], #0x4\n"
                "ldr s27, [x27], #0x4\n"
                "ldr s26, [x26], #0x4\n"
                "zip1 v25.16b, v23.16b, v20.16b\n"
                "zip1 v21.16b, v21.16b, v17.16b\n"
                "ldr s20, [x25], #0x4\n"
                "ldr s17, [x24], #0x4\n"
                "ldr s24, [x23], #0x4\n"
                "ldr s23, [x22], #0x4\n"
                "zip1 v22.16b, v22.16b, v18.16b\n"
                "zip1 v19.16b, v19.16b, v16.16b\n"
                "ldr s18, [x21], #0x4\n"
                "ldr s16, [x20], #0x4\n"
                "zip1 v21.16b, v25.16b, v21.16b\n"
                "zip1 v20.16b, v27.16b, v20.16b\n"
                "zip1 v17.16b, v26.16b, v17.16b\n"
                "zip1 v19.16b, v22.16b, v19.16b\n"
                "zip1 v18.16b, v24.16b, v18.16b\n"
                "zip1 v16.16b, v23.16b, v16.16b\n"
                "str q21, [x15, #0x0]\n"
                "zip1 v17.16b, v20.16b, v17.16b\n"
                "str q19, [x15, #0x10]\n"
                "zip1 v16.16b, v18.16b, v16.16b\n"
                "str q17, [x15, #0x20]\n"
                "str q16, [x15, #0x30]\n"
                "add x15, x15, %x[out_stride]\n"
                "bge 4b\n"
                "5:" // Main row loop: Column loop skip
                "cbz x16, 7f\n"
                "movi v16.16b, #0x0\n"
                "str q16, [x15, #0x0]\n"
                "str q16, [x15, #0x10]\n"
                "str q16, [x15, #0x20]\n"
                "str q16, [x15, #0x30]\n"
                "6:" // Main row loop: width 1 loop: loop
                "ldr b23, [x17], #0x1\n"
                "ldr b21, [x14], #0x1\n"
                "sub x16, x16, #0x1\n"
                "ldr b20, [x13], #0x1\n"
                "ldr b19, [x12], #0x1\n"
                "cmp x16, #0x1\n"
                "ldr b22, [x11], #0x1\n"
                "ldr b18, [x10], #0x1\n"
                "ldr b17, [x9], #0x1\n"
                "ldr b16, [x28], #0x1\n"
                "ldr b27, [x27], #0x1\n"
                "ldr b26, [x26], #0x1\n"
                "zip1 v25.16b, v23.16b, v20.16b\n"
                "zip1 v21.16b, v21.16b, v19.16b\n"
                "ldr b20, [x25], #0x1\n"
                "ldr b19, [x24], #0x1\n"
                "ldr b24, [x23], #0x1\n"
                "ldr b23, [x22], #0x1\n"
                "zip1 v22.16b, v22.16b, v17.16b\n"
                "zip1 v17.16b, v18.16b, v16.16b\n"
                "ldr b18, [x21], #0x1\n"
                "ldr b16, [x20], #0x1\n"
                "zip1 v21.16b, v25.16b, v21.16b\n"
                "zip1 v20.16b, v27.16b, v20.16b\n"
                "zip1 v19.16b, v26.16b, v19.16b\n"
                "zip1 v17.16b, v22.16b, v17.16b\n"
                "zip1 v18.16b, v24.16b, v18.16b\n"
                "zip1 v16.16b, v23.16b, v16.16b\n"
                "str s21, [x15, #0x0]\n"
                "str s17, [x15, #0x10]\n"
                "zip1 v17.16b, v20.16b, v19.16b\n"
                "zip1 v16.16b, v18.16b, v16.16b\n"
                "str s17, [x15, #0x20]\n"
                "str s16, [x15, #0x30]\n"
                "add x15, x15, #0x4\n"
                "bge 6b\n"
                "7:" // Main row loop: odd col skip
                "cmp %x[height], #0x10\n"
                "add %x[out], %x[out], #0x40\n"
                "bge 1b\n"
                "cbz %x[height], 16f\n"
                "8:" // Main loop skip
                "9:" // Tail row loop: Head
                "mov x17, %x[in]\n"
                "mov x20, %x[width]\n"
                "cmp %x[height], #0x3\n"
                "mov x15, %x[out]\n"
                "add x14, x17, %x[in_stride]\n"
                "add x13, x14, %x[in_stride]\n"
                "add x12, x13, %x[in_stride]\n"
                "csel x13, x13, %x[pad_row], GE\n"
                "add %x[in], x12, %x[in_stride]\n"
                "csel x12, x12, %x[pad_row], GT\n"
                "cmp %x[height], #0x1\n"
                "sub %x[height], %x[height], #0x4\n"
                "csel x14, x14, %x[pad_row], GT\n"
                "cmp x20, #0x10\n"
                "blt 11f\n"
                "10:" // Tail row loop: Unroll column loop
                "ldr q20, [x17], #0x10\n"
                "ldr q21, [x14], #0x10\n"
                "sub x20, x20, #0x10\n"
                "ldr q19, [x13], #0x10\n"
                "ldr q16, [x12], #0x10\n"
                "cmp x20, #0x10\n"
                "zip1 v18.16b, v20.16b, v19.16b\n"
                "zip1 v17.16b, v21.16b, v16.16b\n"
                "zip2 v20.16b, v20.16b, v19.16b\n"
                "zip2 v19.16b, v21.16b, v16.16b\n"
                "zip1 v16.16b, v18.16b, v17.16b\n"
                "zip2 v18.16b, v18.16b, v17.16b\n"
                "str q16, [x15, #0x0]\n"
                "add x15, x15, %x[out_stride]\n"
                "zip1 v17.16b, v20.16b, v19.16b\n"
                "zip2 v16.16b, v20.16b, v19.16b\n"
                "str q18, [x15, #0x0]\n"
                "add x15, x15, %x[out_stride]\n"
                "str q17, [x15, #0x0]\n"
                "add x15, x15, %x[out_stride]\n"
                "str q16, [x15, #0x0]\n"
                "add x15, x15, %x[out_stride]\n"
                "bge 10b\n"
                "11:" // Tail row loop: Unroll column loop skip
                "cmp x20, #0x4\n"
                "blt 13f\n"
                "12:" // Tail row loop: Column loop
                "ldr s19, [x17], #0x4\n"
                "ldr s18, [x14], #0x4\n"
                "sub x20, x20, #0x4\n"
                "ldr s17, [x13], #0x4\n"
                "ldr s16, [x12], #0x4\n"
                "cmp x20, #0x4\n"
                "zip1 v17.16b, v19.16b, v17.16b\n"
                "zip1 v16.16b, v18.16b, v16.16b\n"
                "zip1 v16.16b, v17.16b, v16.16b\n"
                "str q16, [x15, #0x0]\n"
                "add x15, x15, %x[out_stride]\n"
                "bge 12b\n"
                "13:" // Tail row loop: Column loop skip
                "cbz x20, 15f\n"
                "movi v16.16b, #0x0\n"
                "str q16, [x15, #0x0]\n"
                "14:" // Tail row loop: width 1 loop: loop
                "ldr b19, [x17], #0x1\n"
                "ldr b18, [x14], #0x1\n"
                "sub x20, x20, #0x1\n"
                "ldr b17, [x13], #0x1\n"
                "ldr b16, [x12], #0x1\n"
                "cmp x20, #0x1\n"
                "zip1 v17.16b, v19.16b, v17.16b\n"
                "zip1 v16.16b, v18.16b, v16.16b\n"
                "zip1 v16.16b, v17.16b, v16.16b\n"
                "str s16, [x15, #0x0]\n"
                "add x15, x15, #0x4\n"
                "bge 14b\n"
                "15:" // Tail row loop: odd col skip
                "cmp %x[height], #0x1\n"
                "add %x[out], %x[out], #0x10\n"
                "bge 9b\n"
                "16:" // Done
                : [height] "+&r" (height), [in] "+&r" (in), [out] "+&r" (out)
                : [in_stride] "r" (in_stride), [out_stride] "r" (out_stride), [pad_row] "r" (pad_row), [width] "r" (
                    width)
                : "cc", "memory", "v0", "v1", "v2", "v3", "v4", "v5", "v16", "v17", "v18", "v19", "v20", "v21", "v22",
                "v23", "v24", "v25", "v26", "v27", "v28", "v29", "v30", "v31", "x9", "x10", "x11", "x12", "x13", "x14",
                "x15", "x16", "x17", "x20", "x21", "x22", "x23", "x24", "x25", "x26", "x27", "x28"
            );
        }

        void a64_transpose_interleave_16_1x4(uint8_t *out, const uint8_t *in, size_t width, size_t in_stride,
                                             size_t height) {
            uint8_t *pad_row = reinterpret_cast<uint8_t *>(alloca(width * sizeof(uint8_t)));

            if (height % 4) {
                memset(pad_row, 0, width * sizeof(uint8_t));
            }

            size_t out_stride = 16 * roundup<size_t>(height, 4) * sizeof(uint8_t);

            __asm__ __volatile__(
                "cmp %x[height], #0x10\n"
                "blt 9f\n"
                "1:" // Main row loop: Head
                "mov x17, %x[in]\n"
                "mov x16, %x[width]\n"
                "mov x15, %x[out]\n"
                "sub %x[height], %x[height], #0x10\n"
                "add x14, x17, %x[in_stride]\n"
                "add x13, x14, %x[in_stride]\n"
                "add x12, x13, %x[in_stride]\n"
                "cmp x16, #0x10\n"
                "add x11, x12, %x[in_stride]\n"
                "add x10, x11, %x[in_stride]\n"
                "add x9, x10, %x[in_stride]\n"
                "add x28, x9, %x[in_stride]\n"
                "add x27, x28, %x[in_stride]\n"
                "add x26, x27, %x[in_stride]\n"
                "add x25, x26, %x[in_stride]\n"
                "add x24, x25, %x[in_stride]\n"
                "add x23, x24, %x[in_stride]\n"
                "add x22, x23, %x[in_stride]\n"
                "add x21, x22, %x[in_stride]\n"
                "add x20, x21, %x[in_stride]\n"
                "add %x[in], x20, %x[in_stride]\n"
                "blt 3f\n"
                "2:" // Main row loop: Column loop
                "ldr q19, [x17], #0x10\n"
                "ldr q18, [x14], #0x10\n"
                "sub x16, x16, #0x10\n"
                "ldr q17, [x13], #0x10\n"
                "ldr q16, [x12], #0x10\n"
                "cmp x16, #0x10\n"
                "ldr q24, [x11], #0x10\n"
                "ldr q23, [x10], #0x10\n"
                "ldr q22, [x9], #0x10\n"
                "ldr q21, [x28], #0x10\n"
                "ldr q30, [x27], #0x10\n"
                "ldr q29, [x26], #0x10\n"
                "zip1 v3.16b, v19.16b, v17.16b\n"
                "zip1 v2.16b, v18.16b, v16.16b\n"
                "ldr q28, [x25], #0x10\n"
                "ldr q20, [x24], #0x10\n"
                "zip2 v1.16b, v19.16b, v17.16b\n"
                "zip2 v27.16b, v18.16b, v16.16b\n"
                "ldr q19, [x23], #0x10\n"
                "ldr q18, [x22], #0x10\n"
                "zip1 v26.16b, v24.16b, v22.16b\n"
                "zip1 v25.16b, v23.16b, v21.16b\n"
                "ldr q17, [x21], #0x10\n"
                "ldr q16, [x20], #0x10\n"
                "zip2 v24.16b, v24.16b, v22.16b\n"
                "zip2 v23.16b, v23.16b, v21.16b\n"
                "zip1 v22.16b, v30.16b, v28.16b\n"
                "zip1 v21.16b, v29.16b, v20.16b\n"
                "zip2 v0.16b, v30.16b, v28.16b\n"
                "zip2 v20.16b, v29.16b, v20.16b\n"
                "zip1 v31.16b, v19.16b, v17.16b\n"
                "zip1 v30.16b, v18.16b, v16.16b\n"
                "zip2 v29.16b, v19.16b, v17.16b\n"
                "zip2 v28.16b, v18.16b, v16.16b\n"
                "zip1 v19.16b, v3.16b, v2.16b\n"
                "zip2 v18.16b, v3.16b, v2.16b\n"
                "zip1 v17.16b, v1.16b, v27.16b\n"
                "zip2 v16.16b, v1.16b, v27.16b\n"
                "zip1 v27.16b, v26.16b, v25.16b\n"
                "zip2 v26.16b, v26.16b, v25.16b\n"
                "zip1 v25.16b, v24.16b, v23.16b\n"
                "zip2 v24.16b, v24.16b, v23.16b\n"
                "str q19, [x15, #0x0]\n"
                "zip1 v23.16b, v22.16b, v21.16b\n"
                "zip2 v22.16b, v22.16b, v21.16b\n"
                "str q18, [x15, #0x10]\n"
                "zip1 v21.16b, v0.16b, v20.16b\n"
                "zip2 v20.16b, v0.16b, v20.16b\n"
                "str q17, [x15, #0x20]\n"
                "zip1 v19.16b, v31.16b, v30.16b\n"
                "zip2 v18.16b, v31.16b, v30.16b\n"
                "str q16, [x15, #0x30]\n"
                "zip1 v17.16b, v29.16b, v28.16b\n"
                "zip2 v16.16b, v29.16b, v28.16b\n"
                "str q27, [x15, #0x40]\n"
                "str q26, [x15, #0x50]\n"
                "str q25, [x15, #0x60]\n"
                "str q24, [x15, #0x70]\n"
                "str q23, [x15, #0x80]\n"
                "str q22, [x15, #0x90]\n"
                "str q21, [x15, #0xa0]\n"
                "str q20, [x15, #0xb0]\n"
                "str q19, [x15, #0xc0]\n"
                "str q18, [x15, #0xd0]\n"
                "str q17, [x15, #0xe0]\n"
                "str q16, [x15, #0xf0]\n"
                "add x15, x15, %x[out_stride]\n"
                "bge 2b\n"
                "3:" // Main row loop: Column loop skip
                "cbz x16, 8f\n"
                "cmp x16, #0x4\n"
                "movi v16.16b, #0x0\n"
                "str q16, [x15, #0x0]\n"
                "str q16, [x15, #0x10]\n"
                "str q16, [x15, #0x20]\n"
                "str q16, [x15, #0x30]\n"
                "str q16, [x15, #0x40]\n"
                "str q16, [x15, #0x50]\n"
                "str q16, [x15, #0x60]\n"
                "str q16, [x15, #0x70]\n"
                "str q16, [x15, #0x80]\n"
                "str q16, [x15, #0x90]\n"
                "str q16, [x15, #0xa0]\n"
                "str q16, [x15, #0xb0]\n"
                "str q16, [x15, #0xc0]\n"
                "str q16, [x15, #0xd0]\n"
                "str q16, [x15, #0xe0]\n"
                "str q16, [x15, #0xf0]\n"
                "blt 5f\n"
                "4:" // Main row loop: width 4 loop: loop
                "ldr s23, [x17], #0x4\n"
                "ldr s21, [x14], #0x4\n"
                "sub x16, x16, #0x4\n"
                "ldr s20, [x13], #0x4\n"
                "ldr s19, [x12], #0x4\n"
                "cmp x16, #0x4\n"
                "ldr s22, [x11], #0x4\n"
                "ldr s18, [x10], #0x4\n"
                "ldr s17, [x9], #0x4\n"
                "ldr s16, [x28], #0x4\n"
                "ldr s27, [x27], #0x4\n"
                "ldr s26, [x26], #0x4\n"
                "zip1 v25.16b, v23.16b, v20.16b\n"
                "zip1 v21.16b, v21.16b, v19.16b\n"
                "ldr s20, [x25], #0x4\n"
                "ldr s19, [x24], #0x4\n"
                "ldr s24, [x23], #0x4\n"
                "ldr s23, [x22], #0x4\n"
                "zip1 v22.16b, v22.16b, v17.16b\n"
                "zip1 v17.16b, v18.16b, v16.16b\n"
                "ldr s18, [x21], #0x4\n"
                "ldr s16, [x20], #0x4\n"
                "zip1 v21.16b, v25.16b, v21.16b\n"
                "zip1 v20.16b, v27.16b, v20.16b\n"
                "zip1 v19.16b, v26.16b, v19.16b\n"
                "zip1 v17.16b, v22.16b, v17.16b\n"
                "zip1 v18.16b, v24.16b, v18.16b\n"
                "zip1 v16.16b, v23.16b, v16.16b\n"
                "str q21, [x15, #0x0]\n"
                "str q17, [x15, #0x40]\n"
                "zip1 v17.16b, v20.16b, v19.16b\n"
                "zip1 v16.16b, v18.16b, v16.16b\n"
                "str q17, [x15, #0x80]\n"
                "str q16, [x15, #0xc0]\n"
                "add x15, x15, #0x10\n"
                "bge 4b\n"
                "5:" // Main row loop: width 4 loop: skip
                "cmp x16, #0x1\n"
                "blt 7f\n"
                "6:" // Main row loop: width 1 loop: loop
                "ldr b23, [x17], #0x1\n"
                "ldr b21, [x14], #0x1\n"
                "sub x16, x16, #0x1\n"
                "ldr b20, [x13], #0x1\n"
                "ldr b19, [x12], #0x1\n"
                "cmp x16, #0x1\n"
                "ldr b22, [x11], #0x1\n"
                "ldr b18, [x10], #0x1\n"
                "ldr b17, [x9], #0x1\n"
                "ldr b16, [x28], #0x1\n"
                "ldr b27, [x27], #0x1\n"
                "ldr b26, [x26], #0x1\n"
                "zip1 v25.16b, v23.16b, v20.16b\n"
                "zip1 v21.16b, v21.16b, v19.16b\n"
                "ldr b20, [x25], #0x1\n"
                "ldr b19, [x24], #0x1\n"
                "ldr b24, [x23], #0x1\n"
                "ldr b23, [x22], #0x1\n"
                "zip1 v22.16b, v22.16b, v17.16b\n"
                "zip1 v17.16b, v18.16b, v16.16b\n"
                "ldr b18, [x21], #0x1\n"
                "ldr b16, [x20], #0x1\n"
                "zip1 v21.16b, v25.16b, v21.16b\n"
                "zip1 v20.16b, v27.16b, v20.16b\n"
                "zip1 v19.16b, v26.16b, v19.16b\n"
                "zip1 v17.16b, v22.16b, v17.16b\n"
                "zip1 v18.16b, v24.16b, v18.16b\n"
                "zip1 v16.16b, v23.16b, v16.16b\n"
                "str s21, [x15, #0x0]\n"
                "str s17, [x15, #0x40]\n"
                "zip1 v17.16b, v20.16b, v19.16b\n"
                "zip1 v16.16b, v18.16b, v16.16b\n"
                "str s17, [x15, #0x80]\n"
                "str s16, [x15, #0xc0]\n"
                "add x15, x15, #0x4\n"
                "bge 6b\n"
                "7:" // Main row loop: width 1 loop: skip
                "8:" // Main row loop: odd col skip
                "cmp %x[height], #0x10\n"
                "add %x[out], %x[out], #0x100\n"
                "bge 1b\n"
                "cbz %x[height], 18f\n"
                "9:" // Main loop skip
                "10:" // Tail row loop: Head
                "mov x17, %x[in]\n"
                "mov x20, %x[width]\n"
                "cmp %x[height], #0x3\n"
                "mov x15, %x[out]\n"
                "add x14, x17, %x[in_stride]\n"
                "add x13, x14, %x[in_stride]\n"
                "add x12, x13, %x[in_stride]\n"
                "csel x13, x13, %x[pad_row], GE\n"
                "add %x[in], x12, %x[in_stride]\n"
                "csel x12, x12, %x[pad_row], GT\n"
                "cmp %x[height], #0x1\n"
                "sub %x[height], %x[height], #0x4\n"
                "csel x14, x14, %x[pad_row], GT\n"
                "cmp x20, #0x10\n"
                "blt 12f\n"
                "11:" // Tail row loop: Column loop
                "ldr q20, [x17], #0x10\n"
                "ldr q21, [x14], #0x10\n"
                "sub x20, x20, #0x10\n"
                "ldr q19, [x13], #0x10\n"
                "ldr q16, [x12], #0x10\n"
                "cmp x20, #0x10\n"
                "zip1 v18.16b, v20.16b, v19.16b\n"
                "zip1 v17.16b, v21.16b, v16.16b\n"
                "zip2 v20.16b, v20.16b, v19.16b\n"
                "zip2 v16.16b, v21.16b, v16.16b\n"
                "zip1 v19.16b, v18.16b, v17.16b\n"
                "zip2 v18.16b, v18.16b, v17.16b\n"
                "zip1 v17.16b, v20.16b, v16.16b\n"
                "zip2 v16.16b, v20.16b, v16.16b\n"
                "str q19, [x15, #0x0]\n"
                "str q18, [x15, #0x10]\n"
                "str q17, [x15, #0x20]\n"
                "str q16, [x15, #0x30]\n"
                "add x15, x15, %x[out_stride]\n"
                "bge 11b\n"
                "12:" // Tail row loop: Column loop skip
                "cbz x20, 17f\n"
                "cmp x20, #0x4\n"
                "movi v16.16b, #0x0\n"
                "str q16, [x15, #0x0]\n"
                "str q16, [x15, #0x10]\n"
                "str q16, [x15, #0x20]\n"
                "str q16, [x15, #0x30]\n"
                "blt 14f\n"
                "13:" // Tail row loop: width 4 loop: loop
                "ldr s19, [x17], #0x4\n"
                "ldr s18, [x14], #0x4\n"
                "sub x20, x20, #0x4\n"
                "ldr s17, [x13], #0x4\n"
                "ldr s16, [x12], #0x4\n"
                "cmp x20, #0x4\n"
                "zip1 v17.16b, v19.16b, v17.16b\n"
                "zip1 v16.16b, v18.16b, v16.16b\n"
                "zip1 v16.16b, v17.16b, v16.16b\n"
                "str q16, [x15, #0x0]\n"
                "add x15, x15, #0x10\n"
                "bge 13b\n"
                "14:" // Tail row loop: width 4 loop: skip
                "cmp x20, #0x1\n"
                "blt 16f\n"
                "15:" // Tail row loop: width 1 loop: loop
                "ldr b19, [x17], #0x1\n"
                "ldr b18, [x14], #0x1\n"
                "sub x20, x20, #0x1\n"
                "ldr b17, [x13], #0x1\n"
                "ldr b16, [x12], #0x1\n"
                "cmp x20, #0x1\n"
                "zip1 v17.16b, v19.16b, v17.16b\n"
                "zip1 v16.16b, v18.16b, v16.16b\n"
                "zip1 v16.16b, v17.16b, v16.16b\n"
                "str s16, [x15, #0x0]\n"
                "add x15, x15, #0x4\n"
                "bge 15b\n"
                "16:" // Tail row loop: width 1 loop: skip
                "17:" // Tail row loop: odd col skip
                "cmp %x[height], #0x1\n"
                "add %x[out], %x[out], #0x40\n"
                "bge 10b\n"
                "18:" // Done
                : [height] "+&r" (height), [in] "+&r" (in), [out] "+&r" (out)
                : [in_stride] "r" (in_stride), [out_stride] "r" (out_stride), [pad_row] "r" (pad_row), [width] "r" (
                    width)
                : "cc", "memory", "v0", "v1", "v2", "v3", "v16", "v17", "v18", "v19", "v20", "v21", "v22", "v23", "v24",
                "v25", "v26", "v27", "v28", "v29", "v30", "v31", "x9", "x10", "x11", "x12", "x13", "x14", "x15", "x16",
                "x17", "x20", "x21", "x22", "x23", "x24", "x25", "x26", "x27", "x28"
            );
        }
    }

    // 打印输入矩阵的值
    void print_matrix(const void *matrix, int rows, int cols, int stride, bool is_int8) {
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                if (is_int8) {
                    printf("%4d ", ((int8_t *) matrix)[i * stride + j]);
                } else {
                    printf("%4d ", ((int32_t *) matrix)[i * stride + j]);
                }
            }
            printf("\n");
        }
        printf("\n");
    }
}

TEST(MATMUL_ASSEM_CODE, ASSEM_EXAMPLE) {
    // auto *A = static_cast<int8_t *>(std::aligned_alloc(16, 80 * sizeof(int8_t)));
    alignas(16) int8_t A[64] = {
        1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
        17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,
        33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48,
        49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
    };
    // auto *B = static_cast<int8_t *>(std::aligned_alloc(16, 80 * sizeof(int8_t)));
    // if (!B) {
    //     std::cerr << "Allocation B failed!" << std::endl;
    // }
    // for (int i = 0; i < 80; i++) {
    //     B[i] = static_cast<int8_t>(i + 1);
    // }
    // AssemGemmCode::BatmanGemm::a64_transpose_interleave_16_1x4(reinterpret_cast<uint8_t *>(A),
    //                                                            reinterpret_cast<uint8_t *>(B), 5, 5, 16);
    // for (int i = 0; i < 16; ++i) {
    //     for (int j = 0; j < 5; ++j) {
    //         printf("%d ", static_cast<int>(A[i * 5 + j]));
    //     }
    //     printf("\n");
    // }
    alignas(16) int8_t B[64] = {
        1, 5, 9, 13, 2, 6, 10, 14, 3, 7, 11, 15, 4, 8, 12, 16,
        17, 21, 25, 29, 18, 22, 26, 30, 19, 23, 27, 31, 20, 24, 28, 32,
        33, 37, 41, 45, 34, 38, 42, 46, 35, 39, 43, 47, 36, 40, 44, 48,
        49, 53, 57, 61, 50, 54, 58, 62, 51, 55, 59, 63, 52, 56, 60, 64,
    };
    alignas(16) int32_t C[3 * 4] = {0};
    int M = 4, N = 4, K = 16;
    int lda = 16;
    int ldc = 4;
    AssemGemmCode::BatmanGemm::a64_smallK_hybrid_s8s32_dot_8x4(
        A, lda, B, C, ldc, M, N, K, nullptr, ::BatmanGemm::Activation(), false
    );
    for (int i = 0; i < M; ++i) {
        for (int j = 0; j < N; ++j) {
            printf("%d ", C[i * ldc + j]);
        }
        printf("\n");
    }
    // const int M = 8; // 确保是8的倍数
    // const int N = 4; // 确保是4的倍数
    // const int K = 1;
    // // 使用正确的步长分配内存
    // const int lda = K;
    // const int ldc = N;
    // // 分配对齐的内存
    // int8_t *raw_A = (int8_t *) malloc(M * lda * sizeof(int8_t) + 32);
    // int8_t *A = (int8_t *) (((uintptr_t) raw_A + 31) & ~31);
    // int8_t *raw = (int8_t *) malloc(K * N * sizeof(int8_t) + 32);
    // int8_t *B = (int8_t *) (((uintptr_t) raw + 31) & ~31);
    // int32_t *raw_C = (int32_t *) malloc(M * ldc * sizeof(int32_t) + 128);
    // int32_t *C = (int32_t *) (((uintptr_t) raw_C + 127) & ~127);
    // // 初始化测试数据
    // for (int i = 0; i < M; i++) {
    //     for (int j = 0; j < K; j++) {
    //         A[i * lda + j] = i; // 简单测试用1填充
    //     }
    // }
    // for (int i = 0; i < K * N; i++) {
    //     B[i] = i;
    // }
    // // 清零输出矩阵
    // memset(C, 0, M * ldc * sizeof(int32_t));
    // // 打印输入数据
    // printf("Matrix A:\n");
    // AssemGemmCode::print_matrix(A, M, K, lda, true);
    // printf("Matrix B:\n");
    // AssemGemmCode::print_matrix(B, N, K, K, true);
    // // 调用乘法函数
    // AssemGemmCode::BatmanGemm::a64_smallK_hybrid_s8s32_dot_8x4(
    //     A, lda,
    //     B,
    //     C, ldc,
    //     M, N, K,
    //     nullptr,
    //     BatmanGemm::Activation(),
    //     false
    // );
    //
    // // 打印结果
    // printf("Result Matrix C:\n");
    // AssemGemmCode::print_matrix(C, M, N, ldc, false);
    //
    // // 释放内存
    // free(raw_A);
    // free(raw);
    // free(raw_C);
}
